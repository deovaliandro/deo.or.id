<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://deo.or.id/feed.xml" rel="self" type="application/atom+xml" /><link href="https://deo.or.id/" rel="alternate" type="text/html" /><updated>2022-09-02T12:15:54+08:00</updated><id>https://deo.or.id/feed.xml</id><title type="html">Home</title><subtitle>Hamba yang tidak berguna di tangan Allah yang penuh hikmat.</subtitle><author><name>Deo Valiandro. M</name></author><entry><title type="html">Rancangan CSS</title><link href="https://deo.or.id/2022/css.html" rel="alternate" type="text/html" title="Rancangan CSS" /><published>2022-09-01T00:00:00+08:00</published><updated>2022-09-01T00:00:00+08:00</updated><id>https://deo.or.id/2022/css</id><content type="html" xml:base="https://deo.or.id/2022/css.html"><![CDATA[<div class="sect1">
<h2 id="font"><a class="anchor" href="#font"></a>Font</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="css"><span class="nt">font-family</span><span class="o">:</span> <span class="s1">"Inter"</span><span class="o">,</span> <span class="nt">sans-serif</span><span class="o">;</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="key"><a class="anchor" href="#key"></a>Key</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="css"><span class="nt">kbd</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="m">#444</span><span class="p">;</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#444</span><span class="p">;</span>
    <span class="nl">border-bottom</span><span class="p">:</span> <span class="m">3px</span> <span class="nb">solid</span> <span class="m">#444</span><span class="p">;</span>
    <span class="nl">border-radius</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
    <span class="nl">padding</span><span class="p">:</span> <span class="m">0.1rem</span> <span class="m">0.4rem</span><span class="p">;</span>
<span class="p">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Misalnya:</p>
</div>
<div class="paragraph">
<p><span class="keyseq"><kbd>Ctrl</kbd>+<kbd>s</kbd></span></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="marked"><a class="anchor" href="#marked"></a>Marked</h2>
<div class="sectionbody">
<div class="paragraph">
<p><mark>Hello my friend</mark></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="inline-code"><a class="anchor" href="#inline-code"></a>Inline Code</h2>
<div class="sectionbody">
<div class="paragraph">
<p><code>run()</code></p>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="css" /></entry><entry><title type="html">Fibonacci</title><link href="https://deo.or.id/2022/fib.html" rel="alternate" type="text/html" title="Fibonacci" /><published>2022-05-31T00:00:00+08:00</published><updated>2022-05-31T00:00:00+08:00</updated><id>https://deo.or.id/2022/fib</id><content type="html" xml:base="https://deo.or.id/2022/fib.html"><![CDATA[<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Humanity is OK, but 99% of people are boring idiots</p>
</div>
</blockquote>
<div class="attribution">
&#8212; <a href="https://www.theguardian.com/culture/2012/jun/10/slavoj-zizek-humanity-ok-people-boring" class="bare">https://www.theguardian.com/culture/2012/jun/10/slavoj-zizek-humanity-ok-people-boring</a>
</div>
</div>
<div class="paragraph">
<p>Bilangan fibonacci adalah barisan yang didefinisikan secara rekursif sebagai berikut:</p>
</div>
<div class="paragraph">
<p>$$
F(n) =
  \begin{cases}
    0, &amp; \text{jika } n = 0, \\
    1, &amp; \text{jika } n = 1, \\
    F(n - 1)+F(n - 2), &amp; \text{jika } tidak.
  \end{cases}
$</p>
</div>
<div class="paragraph">
<p>bilanga fibonacci dapat dinyatakan sebagai berikut:</p>
</div>
<div class="paragraph">
<p>$$F_n = \frac{x_1^n - x_2^n}{\sqrt{5}}$</p>
</div>
<div class="paragraph">
<p>Perbandingan antara $F_{n+1}$ dan $F_{n}$ hampir selalu sama untuk sebarang nilai n dan mulai nilai n
tertentu, perbandingan ini nilainya tetap. Perbandingan itu disebut rasio emas yang nilainya mendekati
<em>1,618</em>.</p>
</div>
<div class="paragraph">
<p>Cara cepat dengan python:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="k">class</span> <span class="nc">FibDist</span><span class="p">(</span><span class="nb">dict</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="k">def</span> <span class="nf">__missing__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">k</span><span class="p">):</span>
        <span class="n">fibk</span> <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="bp">self</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">fibk</span>

<span class="n">fibd</span> <span class="o">=</span> <span class="n">FibDist</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">fibd</span><span class="p">[</span><span class="mi">100</span><span class="p">])</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Berdasarkan buku The Art of Computer Programming karya Donald E. Knuth, barisan ini pertama kali
dijelaskan oleh matematikawan India, Gopala dan Hemachandra pada tahun 1150, ketika menyelidiki berbagai
kemungkinan untuk memasukkan barang-barang ke dalam kantong. Di dunia barat, barisan ini pertama kali
dipelajari oleh Leonardo da Pisa, yang juga dikenal sebagai Fibonacci (sekitar 1200), ketika membahas
pertumbuhan ideal dari populasi kelinci.</p>
</div>
<div class="paragraph">
<p>100 bilangan fibonacci:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code>1
1
2
3
5
8
13
21
34
55
89
144
233
377
610
987
1597
2584
4181
6765
10946
17711
28657
46368
75025
121393
196418
317811
514229
832040
1346269
2178309
3524578
5702887
9227465
14930352
24157817
39088169
63245986
102334155
165580141
267914296
433494437
701408733
1134903170
1836311903
2971215073
4807526976
7778742049
12586269025
20365011074
32951280099
53316291173
86267571272
139583862445
225851433717
365435296162
591286729879
956722026041
1548008755920
2504730781961
4052739537881
6557470319842
10610209857723
17167680177565
27777890035288
44945570212853
72723460248141
117669030460994
190392490709135
308061521170129
498454011879264
806515533049393
1304969544928657
2111485077978050
3416454622906707
5527939700884757
8944394323791464
14472334024676221
23416728348467685
37889062373143906
61305790721611591
99194853094755497
160500643816367088
259695496911122585
420196140727489673
679891637638612258
1100087778366101931
1779979416004714189
2880067194370816120
4660046610375530309
7540113804746346429
12200160415121876738
19740274219868223167
31940434634990099905
51680708854858323072
83621143489848422977
135301852344706746049
218922995834555169026
354224848179261915075</code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="artikel" /><summary type="html"><![CDATA[Humanity is OK, but 99% of people are boring idiots &#8212; https://www.theguardian.com/culture/2012/jun/10/slavoj-zizek-humanity-ok-people-boring]]></summary></entry><entry><title type="html">Exclusive-or (XOR)</title><link href="https://deo.or.id/2022/xor.html" rel="alternate" type="text/html" title="Exclusive-or (XOR)" /><published>2022-05-19T00:00:00+08:00</published><updated>2022-05-19T00:00:00+08:00</updated><id>https://deo.or.id/2022/xor</id><content type="html" xml:base="https://deo.or.id/2022/xor.html"><![CDATA[<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>"Never trust anyone too much, remember the devil was once an angel."</p>
</div>
</blockquote>
<div class="attribution">
&#8212; Ken Kaneki
</div>
</div>
<div class="paragraph">
<p>Exclusive-or (XOR) adalah satu satu gerbang logika yang didasarkan pada aljabar
boolean.</p>
</div>
<div class="paragraph">
<p>Jika Or $\equiv$ penjumlahan, and $\equiv$ perkalian, maka XOR ($\oplus$) adalah
gabungan dari <em>or</em>, <em>and</em> dan <em>not</em>.</p>
</div>
<div class="paragraph">
<p>XOR dilambangkan dengan:</p>
</div>
<div class="imageblock center">
<div class="content">
<img src="https://www.allaboutcircuits.com/uploads/articles/XOR-gate-circuit-calculation.jpg" alt="XOR gate circuit calculation">
</div>
</div>
<div class="sect1">
<h2 id="aturan"><a class="anchor" href="#aturan"></a>Aturan</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Konklusi dari hasil diatas adalah:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$x \oplus 0 = x$</p>
</li>
<li>
<p>$x \oplus 1 = \bar{x}$</p>
</li>
<li>
<p>$x \oplus x = 0$</p>
</li>
<li>
<p>$x \oplus \bar{x} = 1$</p>
</li>
<li>
<p>$\bar{x} \oplus \bar{x} = 0$</p>
</li>
<li>
<p>$x \oplus \bar{x} = x \oplus x$</p>
</li>
<li>
<p>$A \oplus AB = A \bar{B}$</p>
</li>
<li>
<p>$A \oplus A\bar{B} = AB$</p>
</li>
<li>
<p>$A \oplus \bar{A}B = A + B$</p>
</li>
<li>
<p>$(A \oplus B) \cdot (A \oplus C) = \bar{A}BC+A\bar{B}\bar{C}$</p>
</li>
</ol>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="logic" /><summary type="html"><![CDATA["Never trust anyone too much, remember the devil was once an angel." &#8212; Ken Kaneki]]></summary></entry><entry><title type="html">Pindah ke MathJax</title><link href="https://deo.or.id/2022/mathjax.html" rel="alternate" type="text/html" title="Pindah ke MathJax" /><published>2022-05-12T15:10:30+08:00</published><updated>2022-05-12T15:10:30+08:00</updated><id>https://deo.or.id/2022/mathjax</id><content type="html" xml:base="https://deo.or.id/2022/mathjax.html"><![CDATA[<div class="paragraph">
<p>Karena alasan kompatibilitas, akhirnya saya pindah ke MathJax setelah sekian
lama menggunakan KaTeX.</p>
</div>
<div class="paragraph">
<p>Import dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="html"><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://polyfill.io/v3/polyfill.min.js?features=es6"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script </span><span class="na">id=</span><span class="s">"MathJax-script"</span> <span class="na">async</span> <span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"</span><span class="nt">&gt;&lt;/script&gt;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Kemudian saya menggunakan konfigurasi sederhana saja,</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="javascript"><span class="nb">window</span><span class="p">.</span><span class="nx">MathJax</span> <span class="o">=</span>
<span class="p">{</span>
    <span class="na">tex</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">inlineMath</span><span class="p">:</span> <span class="p">[[</span><span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">]],</span>
        <span class="na">displayMath</span><span class="p">:</span> <span class="p">[[</span><span class="dl">'</span><span class="s1">$$</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">$</span><span class="dl">'</span><span class="p">]]</span>
    <span class="p">}</span>
<span class="p">};</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Agar tidak terlalu memberatkan browser, saya tidak langsung menjalankan fungsi
tersebut kecuali halaman tersebut memiliki persamaan matematika, dengan
memanfaatkan fitur tag di Jekyll, maka hal ini dapat diatasi.</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="artikel" /></entry><entry><title type="html">Machine Learning Week-1 (Coursera)</title><link href="https://deo.or.id/2022/minggu1.html" rel="alternate" type="text/html" title="Machine Learning Week-1 (Coursera)" /><published>2022-05-12T00:00:00+08:00</published><updated>2022-05-12T00:00:00+08:00</updated><id>https://deo.or.id/2022/minggu1</id><content type="html" xml:base="https://deo.or.id/2022/minggu1.html"><![CDATA[<div class="paragraph">
<p>Dulu saya mengambil mata kuliah ML, tetapi kemudian berganti fokus ke
kriptografi, jadi untuk mempelajari materi lagi, saya ikut kelas Coursera.</p>
</div>
<div class="sect1">
<h2 id="intro"><a class="anchor" href="#intro"></a>Intro</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Machine Learning adalah mesin yang mempelajari data berdasarkan pengalaman,
dengan memperhatikan beberapa kelas dari suatu tugas tertentu.</p>
</div>
<div class="paragraph">
<p>Terbagi menjadi:</p>
</div>
<div class="sect2">
<h3 id="supervised-learning"><a class="anchor" href="#supervised-learning"></a>Supervised Learning</h3>
<div class="paragraph">
<p>Diberikan dataset yang telah diketahui hasilnya bagaimana dan diberikan tugas
untuk menentukan korelasi data jika diberikan suatu input diluar data yang telah
ada.</p>
</div>
<div class="paragraph">
<p>Dikategorikan menjadi:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>regression, memprediksi hasil continui,  misalnya memprediksi harga rumah.</p>
</li>
<li>
<p>classification, memprediksi hasil diskrit, misalnya memprediksi tumor ganas
atau tumor jinak.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="unsupervised-learning"><a class="anchor" href="#unsupervised-learning"></a>Unsupervised Learning</h3>
<div class="paragraph">
<p>Diberikan data yang tidak diketahui, kemudian dilakukan pengelompokan data.
Hasilnya adalah struktur data. Kita dapat melakukannya dengan melakukan klustering
atau clustering data berdasarkan variabelnya.</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Clusetering, diberikan data gen kemudian dikelompokkan berdasarkan variabel,
seperti lokasi, masa hidup, dll.</p>
</li>
<li>
<p>Non-clustering, menemukan struktur dari data chaos, misalnya "Cocktail Party
Algorithm", identifying individual voices and music from a mesh of sounds at a
cocktail party.</p>
</li>
</ol>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="ml" /></entry><entry><title type="html">Arch Linux</title><link href="https://deo.or.id/2022/arch-linux.html" rel="alternate" type="text/html" title="Arch Linux" /><published>2022-05-06T00:00:00+08:00</published><updated>2022-05-06T00:00:00+08:00</updated><id>https://deo.or.id/2022/arch-linux</id><content type="html" xml:base="https://deo.or.id/2022/arch-linux.html"><![CDATA[<div class="paragraph">
<p>Arch Linux telah membuatku berhenti menjadi <em>distro hopper</em> &#128274;.</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="linux" /></entry><entry><title type="html">Rencana Pindah ke GitLab</title><link href="https://deo.or.id/2022/pindah-ke-gitlab.html" rel="alternate" type="text/html" title="Rencana Pindah ke GitLab" /><published>2022-05-04T00:00:00+08:00</published><updated>2022-05-04T00:00:00+08:00</updated><id>https://deo.or.id/2022/pindah-ke-gitlab</id><content type="html" xml:base="https://deo.or.id/2022/pindah-ke-gitlab.html"><![CDATA[<div class="paragraph">
<p>Rencana pindahkan semua git ke GitLab dari Github. Entah kenapa lebih nyaman
tanpa embel mikocok &#x1F605;.</p>
</div>
<div class="paragraph">
<p>Pelan-pelan akan dipindahkan semua.</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="log" /></entry><entry><title type="html">Rebase Web Jadi Log</title><link href="https://deo.or.id/2022/rebase-jadi-weblog.html" rel="alternate" type="text/html" title="Rebase Web Jadi Log" /><published>2022-05-03T00:00:00+08:00</published><updated>2022-05-03T00:00:00+08:00</updated><id>https://deo.or.id/2022/rebase-jadi-weblog</id><content type="html" xml:base="https://deo.or.id/2022/rebase-jadi-weblog.html"><![CDATA[<div class="paragraph">
<p>Saya tertarik dengan website seseorang, jadi saya mencoba menirunya &#x1F60A;.</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="log" /></entry><entry><title type="html">Enkripsi Folder dengan GPG</title><link href="https://deo.or.id/2022/enkripsi-folder-gpg.html" rel="alternate" type="text/html" title="Enkripsi Folder dengan GPG" /><published>2022-04-04T00:00:00+08:00</published><updated>2022-04-04T00:00:00+08:00</updated><id>https://deo.or.id/2022/enkripsi-folder-gpg</id><content type="html" xml:base="https://deo.or.id/2022/enkripsi-folder-gpg.html"><![CDATA[<div class="paragraph">
<p>Demi menjaga keamanan data, saya berencana mengenkripsi beberapa file &#128272;,
salah satu caranya adalah dengan menggunakan GPG.</p>
</div>
<div class="sect1">
<h2 id="kompresi-dan-enkripsi"><a class="anchor" href="#kompresi-dan-enkripsi"></a>Kompresi dan Enkripsi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Untuk compress folder:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash"><span class="nb">tar</span> <span class="nt">-zcvf</span> archive.tar.gz directory</code></pre>
</div>
</div>
<div class="paragraph">
<p>dengan keterangan:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>-z: compress dengan gzip</p>
</li>
<li>
<p>-c: buat archive</p>
</li>
<li>
<p>-v: tampilkan progress</p>
</li>
<li>
<p>-f: nama archive</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>kemudian enkripsi file dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">gpg <span class="nt">--symmetric</span> <span class="nt">--cipher-algo</span> AES256 namafile.tar.gz</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="dekrisi-dan-dekompresi"><a class="anchor" href="#dekrisi-dan-dekompresi"></a>Dekrisi dan dekompresi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Dekripsi file dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">gpg <span class="nt">-d</span> namafile.tar.gz.gpg</code></pre>
</div>
</div>
<div class="paragraph">
<p>kemudian uncompress dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash"><span class="nb">tar</span> <span class="nt">-zxvf</span> namafile.tar.gz</code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /></entry><entry><title type="html">Is Even?</title><link href="https://deo.or.id/2022/is-even.html" rel="alternate" type="text/html" title="Is Even?" /><published>2022-03-23T00:00:00+08:00</published><updated>2022-03-23T00:00:00+08:00</updated><id>https://deo.or.id/2022/is-even</id><content type="html" xml:base="https://deo.or.id/2022/is-even.html"><![CDATA[<div class="paragraph">
<p>Cara cepat menentukan negatif atau positif:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="n">isEven</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">n</span><span class="p">:</span> <span class="ow">not</span><span class="p">(</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">isEven</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">isEven</span><span class="p">(</span><span class="mi">13</span><span class="p">))</span>

<span class="c1"># 12    = 0110
# 1     = 0001
#------------- &amp;
#       = 0000 = False
</span>
<span class="c1"># 13    = 0111
# 1     = 0001
#------------- &amp;
#       = 0001 = True</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="artikel" /></entry><entry><title type="html">SOLID</title><link href="https://deo.or.id/2022/solid.html" rel="alternate" type="text/html" title="SOLID" /><published>2022-02-22T00:00:00+08:00</published><updated>2022-02-22T00:00:00+08:00</updated><id>https://deo.or.id/2022/solid</id><content type="html" xml:base="https://deo.or.id/2022/solid.html"><![CDATA[<div class="paragraph">
<p>Ini adalah rangkuman tentang SOLID yang saya pelajari di Dicoding.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Single Responsibility Principle (SRP),
Sebuah class hanya melalukan satu tugas tertentu. Jika terdapat satu class yang
memiliki dua tugas, maka sebaiknya dibuat dalam dua class yang berbeda.</p>
</li>
<li>
<p>Open/Close Principle (OCP),
Sebuah sistem dapat ditambahkan dengan fungsi yang baru, tetapi tanpa mengubah
yang sudah ada, hal ini dilakukan dengan menambahkan tanpa mengahapus yang sudah
ada. Dilakukan dengan <code>abstract class</code> atau <code>interface</code>.</p>
</li>
<li>
<p>Liskov Substitution Principle (LSP),
Sebuah subclass seharusnya bisa melaksanakan apa yang ada di superclassnya.</p>
</li>
<li>
<p>Interface Segregation Principle (ISP),
Sebuah class tidak seharusnya diberi tugas yang tidak merupakan tugasnya.</p>
</li>
<li>
<p>Dependency Inversion Principle (DIP),
Low-level modules bertanggung jawab untuk tugas yang mendetail, high-level
modules menggunakan low-level modules untuk mencapai tugas yang mendetail.</p>
<div class="paragraph">
<p>High-level modules adalah kelas-kelas yang berurusan dengan kumpulan-kumpulan
fungsionalitas. Pada hirarki tertinggi terdapat kelas-kelas yang
mengimplementasikan aturan bisnis sesuai dengan desain yang telah ditentukan.
Low-level modules bertanggung jawab pada operasi yang lebih detail. Pada level
terendah memungkinkan modul ini untuk bertanggung jawab dalam menulis informasi
ke database atau menyampaikan pesan ke sistem operasi.</p>
</div>
</li>
</ol>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="artikel" /></entry><entry><title type="html">Aritmatika Polinom di dalam Medan Galois GF(2^n)</title><link href="https://deo.or.id/2022/aritmatika-polinom-gf2.html" rel="alternate" type="text/html" title="Aritmatika Polinom di dalam Medan Galois GF(2^n)" /><published>2022-02-12T00:00:00+08:00</published><updated>2022-02-12T00:00:00+08:00</updated><id>https://deo.or.id/2022/aritmatika-polinom-gf2</id><content type="html" xml:base="https://deo.or.id/2022/aritmatika-polinom-gf2.html"><![CDATA[<div class="paragraph">
<p>Galois Field (GF) yang banyak digunakan dalam kriptografi adalah $GF(2^n)$
karena setiap baris text direpresentasikan sebagai barisan bit 0 dan 1 sepanjang
$n$ bit.</p>
</div>
<div class="paragraph">
<p>Semua elemen dalam $GF(2^n)$ dinyatakan dalam bentuk polinom.</p>
</div>
<div class="paragraph">
<p>Bentuk umum polinom berderajat n adalah:</p>
</div>
<div class="paragraph">
<p>$$f(x) = a_{n}x^{n} + a_{n-1}x^{n-1} + \cdots + a_{2}x^{2} + a_{1}x + a_{0}$</p>
</div>
<div class="paragraph">
<p>$a_{n}, a_{n-1}, a_{0}$ adalah koefisien-koefisien polinom, $n$ adalah derajat
polinom.</p>
</div>
<div class="paragraph">
<p>$GF(2^{n})$ memiliki $2^n$ elemen, setiap elemen direpresentasikan sebagai
polinom berderajat $n-1$ atau kurang, dengan koefisien-koefisiennya adalah
elemen $\{0, 1\}$:</p>
</div>
<div class="paragraph">
<p>$$GF(p^{n}) = \{a_{n-1}x^{n-1} + a_{n-2}x^{n-2} + \cdots + a_{1}x + a_{0} |
a_{i} \in \{0, 1\}\}$</p>
</div>
<div class="paragraph">
<p>Contohnya:
$GF(2^{3}) = \{a_{2}x^{2} + a_{1}x^{1} + a_{0} | a_{i} \in \{0, 1\}\}$, memiliki
derajat polinom $\geq 2$.</p>
</div>
<div class="paragraph">
<p>Di dalam $GF(2^3)$, terdapat $2^{3} = 8$ polinom, yaitu:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>$0 \to 000$</p>
</li>
<li>
<p>$1 \to 001$</p>
</li>
<li>
<p>$x \to 010$</p>
</li>
<li>
<p>$x+1 \to 011$</p>
</li>
<li>
<p>$x^{2} \to 100$</p>
</li>
<li>
<p>$x^{2}+1 \to 101$</p>
</li>
<li>
<p>$x^{2}+x \to 110$</p>
</li>
<li>
<p>$x^{2}+x+1 \to 111$</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Operasi penjumlahan dan perkalian dilakukan dengan menerapkan penjumlahan
koefisien-koefisiennya dalam $\bmod \space  2$.</p>
</div>
<div class="paragraph">
<p>Misalnya $a=(a_{n-1} \cdots a_{1}a_{0})$ dan $b=(b_{n-1} \cdots b_{1}b_{0})$,
$a, b \in GF(2^n)$, maka:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>penjumlahan $a + b = c = (c_{n-1} \cdots c_{1}c_{0}), c_{i} = (a_{i} + b_{i})
\bmod 2, c \in GF(2^n)$,</p>
</li>
<li>
<p>perkalian $a \times b = c (c_{n-1} \cdots c_{1}c_{0})$ dimana $c$ adalah sisa
bagi dari polinom $a(x) \cdot b(x)$ dengan <em>irreducible polynomial</em> $f(x)$
derajat $n$, $c \in GF(2^n)$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Contoh: $a = x^3 + x^2 + 1$, $b = x^2 + x$, $a, b \in GF(2^4)$,</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
a+b &amp; = x^3 + x^2 + 1 + x^2 + x \bmod 2 \\
    &amp; = x^3 + 2x^2 + x + 1 \bmod 2 \\
    &amp; = x^3 + x + 1
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Operasi penjumlahan polinom $GF(p^2) \equiv$ operasi xor $(\oplus)$, misalnya:</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
a \oplus b &amp; = x^3 + x^2 + 1 + x^2 + x \bmod 2 \\
           &amp; = 1101 \oplus 0110 \\
           &amp; = 1011 \equiv x^3 + x + 1
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Operasi perkalian sama persis dengan perkalian baisa, kecuali menghasilkan
polinom dengan derajat $\geq n - 1$,</p>
</div>
<div class="paragraph">
<p>misalnya, $a = x^2 + x, b = x + 1, a, b \in GF(2^4)$,</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
a \cdot b &amp; = (x^2 + x)(x + 1) \bmod 2 \\
        &amp; = (x^2 \cdot x) + (x^2 \cdot 1) + (x \cdot x) + (x \cdot 1) \bmod 2 \\
        &amp; = x^3 + x^2 + + x^2 + x \bmod 2 \\
        &amp; = x^3 + 2(x^2) + x \bmod 2 \\
        &amp; = x^3 + x
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Jika menghasilkan polinom $\geq n - 1$, maka direduksi dengan membagi secara
modulo terhadap polinom <em>irreducible polynomial</em> $f(x)$ berderajat $n$.
<em>Irreducible polynomial</em> adalah polinom yang tidak dihasilkan dari perkalian
dua buah polinom lain (kecuali $1$ dan dirinya sendiri). Misalnya $x^2 + 1 \in
GF(2^n)$, contoh lainnya $x^4 + x + 1$, tetapi $x^5 + x^2 + x + 1$ adalah
polinom tereduksi karena $x^5 + x^2 + x + 1 = (x^5 + x^2 + 1)(x^2 + 1)$.</p>
</div>
<div class="paragraph">
<p>Misalnya $a = 1011, b = 1001, a, b \in GF(2^4)$,</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
a \times b &amp; = (x^3 + x + 1) \times (x^3 + 1) \bmod 2 \\
           &amp; = x^6 + x^4 + x + 1\\
           &amp; = x^3 + x^2
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>$x^3 + x^2$ dihasilkan dari membagi $x^6 + x^4 + x + 1$ dengan
<em>irreducible polynomial</em> $f(x) = x^4 + x + 1$.</p>
</div>
<div class="paragraph">
<p>$f(x)/g(x)$ memberikan hasil $g(x)$ (quotient) dam sisa $r(x)$ (remainder), yang
memenuhi:</p>
</div>
<div class="paragraph">
<p>$$f(x) = q(x)g(x) + r(x)$</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /><summary type="html"><![CDATA[Galois Field (GF) yang banyak digunakan dalam kriptografi adalah $GF(2^n)$ karena setiap baris text direpresentasikan sebagai barisan bit 0 dan 1 sepanjang $n$ bit.]]></summary></entry><entry><title type="html">Semigrup</title><link href="https://deo.or.id/2022/semigrup.html" rel="alternate" type="text/html" title="Semigrup" /><published>2022-02-07T00:00:00+08:00</published><updated>2022-02-07T00:00:00+08:00</updated><id>https://deo.or.id/2022/semigrup</id><content type="html" xml:base="https://deo.or.id/2022/semigrup.html"><![CDATA[<div class="paragraph">
<p>Sebuah set S yang mempunyai operasi binary $S \times S \to S$, dengan operasi
$\cdot$ adalah semigroup jika memenuhi:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$\forall a, b, c \in S, (a \cdot b) \cdot c = a \cdot (b \cdot c)$
(asosiatif).</p>
</li>
</ol>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="fp" /><summary type="html"><![CDATA[Sebuah set S yang mempunyai operasi binary $S \times S \to S$, dengan operasi $\cdot$ adalah semigroup jika memenuhi:]]></summary></entry><entry><title type="html">Monoid</title><link href="https://deo.or.id/2022/monoid.html" rel="alternate" type="text/html" title="Monoid" /><published>2022-02-06T00:00:00+08:00</published><updated>2022-02-06T00:00:00+08:00</updated><id>https://deo.or.id/2022/monoid</id><content type="html" xml:base="https://deo.or.id/2022/monoid.html"><![CDATA[<div class="paragraph">
<p>Sebuah set S yang mempunyai operasi binary $S \times S \to S$, dengan operasi
$\cdot$ adalah monoid jika memenuhi:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$\forall a, b, c \in S, (a \cdot b) \cdot c = a \cdot (b \cdot c)$
(asosiatif),</p>
</li>
<li>
<p>$\exists e \in S$, sehingga $a \in S$, berlaku $e \cdot a = a$ dan
$a \cdot e = a$ (element identitas).</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Denga artian, monoid adalah semigroup dengan tambahan identitas.</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="fp" /><summary type="html"><![CDATA[Sebuah set S yang mempunyai operasi binary $S \times S \to S$, dengan operasi $\cdot$ adalah monoid jika memenuhi:]]></summary></entry><entry><title type="html">Pemrograman Fungsional</title><link href="https://deo.or.id/2022/fp.html" rel="alternate" type="text/html" title="Pemrograman Fungsional" /><published>2022-02-05T00:00:00+08:00</published><updated>2022-02-05T00:00:00+08:00</updated><id>https://deo.or.id/2022/fp</id><content type="html" xml:base="https://deo.or.id/2022/fp.html"><![CDATA[<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>The purpose of software engineering is to control complexity, not to create it.
-— Dr. Pamela Zave, coauthor of Software Requirements and Design</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Functional Programming (FP) merupakan konsep yang baru bagi saya. Ketika
memasuki program studi Ilmu Komputer di Universitas Hasanuddin, saya hanya
dikenalkan dengan pemrograman imperatif dengan Pascal kemudian melompat ke
pengantar pemrograman dengan menggunakan Java.</p>
</div>
<div class="paragraph">
<p>Ketika dikenalkan dengan paradigma pemrograman, kami langsung dikenalkan dengan
pemrograman berorientasi objek atau PBO/OOP (Eng).</p>
</div>
<div class="paragraph">
<p>FP kemudian saya dikenal ketika bergabung dengan komunitas di Telegram, yaitu
grup Telegram Haskel. Dari grup inilah kemudian dikenalkan dengan berbagai
konsep fp, namun saya masih kebingungan dengan berbagai jenis konsep fp.</p>
</div>
<div class="paragraph">
<p>Ketika salah satu anggota grup Haskell mengirim channel youtube
<a href="https://www.youtube.com/c/cvladfp" class="bare">https://www.youtube.com/c/cvladfp</a>, kemudian saya mulai mengenal lebih dalam.</p>
</div>
<div class="paragraph">
<p>Tulisan ini saya tulis untuk mengawali pelajaran tentang fp.</p>
</div>
<div class="sect1">
<h2 id="haskell"><a class="anchor" href="#haskell"></a>Haskell</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Contoh fungsi dasar Haskell,</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="haskell"><span class="n">babyFunction</span> <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">x</span>
<span class="n">babyFucntion</span> <span class="mi">12</span></code></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">144</code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh mencari data dalam list,</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="haskell"><span class="n">elem'</span> <span class="o">::</span> <span class="p">(</span><span class="kt">Eq</span> <span class="n">a</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="n">a</span> <span class="o">-&gt;</span> <span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="o">-&gt;</span> <span class="kt">Bool</span>
<span class="n">elem'</span> <span class="n">a</span> <span class="kt">[]</span> <span class="o">=</span> <span class="kt">False</span>
<span class="n">elem'</span> <span class="n">a</span> <span class="p">(</span><span class="n">x</span><span class="o">:</span><span class="n">xs</span><span class="p">)</span>
    <span class="o">|</span> <span class="n">a</span> <span class="o">==</span> <span class="n">x</span>    <span class="o">=</span> <span class="kt">True</span>
    <span class="o">|</span> <span class="n">otherwise</span> <span class="o">=</span> <span class="n">elem'</span> <span class="n">a</span> <span class="n">xs</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>is Upper,</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="haskell"><span class="n">isUpper</span> <span class="o">::</span> <span class="kt">Char</span> <span class="o">-&gt;</span> <span class="kt">Bool</span>
<span class="n">isUpper</span> <span class="n">x</span> <span class="o">=</span> <span class="n">elem</span> <span class="n">x</span> <span class="p">[</span><span class="sc">'A'</span><span class="o">..</span><span class="sc">'Z'</span><span class="p">]</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="fp" /></entry><entry><title type="html">Persamaan KaTeX</title><link href="https://deo.or.id/2021/persamaan-katex.html" rel="alternate" type="text/html" title="Persamaan KaTeX" /><published>2021-12-18T00:00:00+08:00</published><updated>2021-12-18T00:00:00+08:00</updated><id>https://deo.or.id/2021/persamaan-katex</id><content type="html" xml:base="https://deo.or.id/2021/persamaan-katex.html"><![CDATA[<div class="paragraph">
<p>Untuk menggunakan LaTeX align:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="latex"><span class="p">$$</span><span class="nv">\begin</span><span class="p">{</span><span class="nb">aligned</span><span class="p">}</span><span class="nb">
a</span><span class="p">_</span><span class="m">1</span><span class="nb"> </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\beta</span><span class="p">_</span><span class="m">0</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
    </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\beta</span><span class="p">_</span><span class="m">1</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
c</span><span class="p">_</span><span class="m">1</span><span class="nb"> </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\beta</span><span class="p">_</span><span class="m">2</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
d</span><span class="p">_</span><span class="m">1</span><span class="nb"> </span><span class="p">&amp;</span><span class="o">=</span><span class="nb"> </span><span class="nv">\beta</span><span class="p">_</span><span class="m">3</span><span class="nb">
</span><span class="nv">\end</span><span class="p">{</span><span class="nb">aligned</span><span class="p">}</span><span class="nb">$</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Hasilnya sebagai berikut:</p>
</div>
<div class="paragraph">
<p>$$\begin{aligned}
a_1 &amp;= \beta_0 \\
    &amp;= \beta_1 \\
c_1 &amp;= \beta_2 \\
d_1 &amp;= \beta_3
\end{aligned}$</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="latex"><span class="p">$$</span><span class="nv">\begin</span><span class="p">{</span><span class="nb">aligned</span><span class="p">}</span><span class="nb">
</span><span class="nv">\dot</span><span class="p">{</span><span class="nb">x</span><span class="p">}</span><span class="nb"> </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="nv">\sigma</span><span class="o">(</span><span class="nb">y</span><span class="o">-</span><span class="nb">x</span><span class="o">)</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
</span><span class="nv">\dot</span><span class="p">{</span><span class="nb">y</span><span class="p">}</span><span class="nb"> </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="nv">\rho</span><span class="nb"> x </span><span class="o">-</span><span class="nb"> y </span><span class="o">-</span><span class="nb"> xz </span><span class="nv">\\</span><span class="nb">
</span><span class="nv">\dot</span><span class="p">{</span><span class="nb">z</span><span class="p">}</span><span class="nb"> </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="o">-</span><span class="nv">\beta</span><span class="nb"> z </span><span class="o">+</span><span class="nb"> xy
</span><span class="nv">\end</span><span class="p">{</span><span class="nb">aligned</span><span class="p">}</span><span class="nb">$</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>$$\begin{aligned}
\dot{x} &amp; = \sigma(y-x) \\
\dot{y} &amp; = \rho x - y - xz \\
\dot{z} &amp; = -\beta z + xy
\end{aligned}$</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="latex"><span class="p">$</span><span class="nv">\begin</span><span class="p">{</span><span class="nb">aligned</span><span class="p">}</span><span class="nb">
a</span><span class="p">_</span><span class="m">2</span><span class="nb"> </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=</span><span class="nb"> </span><span class="o">(</span><span class="nb">X</span><span class="nv">\'</span><span class="nb">X</span><span class="o">)</span><span class="p">^{</span><span class="o">-</span><span class="m">1</span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
    </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=(</span><span class="nb">X</span><span class="nv">\'</span><span class="nb">X</span><span class="o">)</span><span class="p">^{</span><span class="o">-</span><span class="m">1</span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
    </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=(</span><span class="nb">X</span><span class="nv">\'</span><span class="nb">X</span><span class="o">)</span><span class="p">^{</span><span class="o">-</span><span class="m">1</span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
    </span><span class="p">&amp;</span><span class="nb"> </span><span class="o">=(</span><span class="nb">X</span><span class="nv">\'</span><span class="nb">X</span><span class="o">)</span><span class="p">^{</span><span class="o">-</span><span class="m">1</span><span class="p">}</span><span class="nb">
</span><span class="nv">\end</span><span class="p">{</span><span class="nb">aligned</span><span class="p">}$</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>$\begin{aligned}
a_2 &amp; = (X'X)^{-1} \\
    &amp; =(X'X)^{-1} \\
    &amp; =(X'X)^{-1} \\
    &amp; =(X'X)^{-1}
\end{aligned}$</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Tutorial" /><category term="math" /></entry><entry><title type="html">Finite State Machine</title><link href="https://deo.or.id/2021/fsm.html" rel="alternate" type="text/html" title="Finite State Machine" /><published>2021-12-04T00:00:00+08:00</published><updated>2021-12-04T00:00:00+08:00</updated><id>https://deo.or.id/2021/fsm</id><content type="html" xml:base="https://deo.or.id/2021/fsm.html"><![CDATA[<div class="sect1">
<h2 id="finite-automata"><a class="anchor" href="#finite-automata"></a>Finite Automata</h2>
<div class="sectionbody">
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>"One way to define a language is to construct an automaton—a kind
of abstract computer that takes a string as input and produces a
yes-or-no answer. The language it defines is the set of all strings for
which it says yes.</p>
</div>
<div class="paragraph">
<p><em>Formal Language - A Practical Introduction by Adam Brooks Webber</em></p>
</div>
</blockquote>
</div>
<div class="sect2">
<h3 id="a-deterministic-finite-automata-dfa"><a class="anchor" href="#a-deterministic-finite-automata-dfa"></a>a. Deterministic Finite Automata (DFA)</h3>
<div class="paragraph">
<p>DFA $M = (Q, \Sigma, \delta, q_0, F)$, dimana:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$Q$ adalah set semua state (finite),</p>
</li>
<li>
<p>$\Sigma$ adalah alfabet/ input (finite set symbols),</p>
</li>
<li>
<p>$\delta \in (Q xx \Sigma \to Q)$ adalah fungsi transisi,</p>
</li>
<li>
<p>$q_0 \in Q$ adalah start state,</p>
</li>
<li>
<p>$F \subseteq Q$ adalah set state final (<em>accepting state</em>).</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Contohnya: $Q = {A, B}$, $\Sigma = {a, b}$, $F = {B}$ dan
$\delta$ =<br>
$\delta(A, a) = B$<br>
$\delta(A, b) = A$<br>
$\delta(B, a) = B$<br>
$\delta(A, b) = A$</p>
</div>
<div class="paragraph">
<p>digambarkan dengan:</p>
</div>
<div id="img-dfa" class="imageblock">
<div class="content">
<a class="image" href="/assets/img/Screenshot_20211204_211458.png"><img src="/assets/img/Screenshot_20211204_211458.png" alt="DFA"></a>
</div>
<div class="title">Figure 1. A simple DFA</div>
</div>
<div class="paragraph">
<p>String $x \in \Sigma^{\ast}$ akan di terima oleh DFA $M = (Q, \Sigma,
\delta, q_0, F) \iff \delta^{\ast}(q_0, x) \in F$.</p>
</div>
<div class="paragraph">
<p>Untuk DFA $M = (Q, \Sigma, \delta, q_0, F)$, $L(M)$ adalah language
yang bisa diterima oleh $M$, di mana $L(M) = {x \in \Sigma^{\ast} |
\delta^{\ast}(q_0, x) \in F}$.</p>
</div>
<div class="paragraph">
<p>Regular language adalah language yang diterima oleh sebuah finite automata, atau
sebuah regular language adalah $L(M)$ untuk suatu DFA $M$.</p>
</div>
<div class="paragraph">
<p><em>Regular operation</em> adalah operasi pada language. Misalnya A dan B adalah
language, maka operasinya:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>union, $A \cap B = {x | x \in A or x \in B}$,</p>
</li>
<li>
<p>concatenation, $A \cdot B = {xy | x \in A and y \in B}$,</p>
</li>
<li>
<p>star, $A^{\ast} = \{x_1, x_2, \cdots, x_k | k \geq 0, \forall x_i \in A\}$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Sifat rl:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>closed under complement, jika $L] adalah language dari $\Sigma],
maka komplemen dari $L$, $\overline{L} = {x \in \Sigma^{\ast} | x
\notin L}$, jika $L$ adalah regular language, maka $\overline{L}$ juga
adalah regular language.</p>
</li>
<li>
<p>closed under intersection, jika $L_1$ dan $L_2$ adalah language, intersection
(irisan) dari $L_1$ dan $L_2$ adalah
$L_1 \cap L_2 = {x | x \in L_1, x \in L_2}$, jika $L_1$ dan $L_2$ adalah
regular language, maka $L_1 \cap L_2$ juga adalah merupakan regular language.</p>
</li>
<li>
<p>closed under union, jika $L_1$ dan $L_2$ adalah language, union (gabungan)
dari $L_1$ dan $L_2$ adalah
$L_1 \cup L_2 = \{x | x \in L_1 \text{atau} x \in L_2, \text{atau keduanya}\}$,
jika $L_1$ dan $L_2$ adalah regular language, maka $L_1 \cup L_2$ juga adalah
merupakan regular language.</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="b-nondeterministic-finite-automata"><a class="anchor" href="#b-nondeterministic-finite-automata"></a>b. Nondeterministic Finite Automata</h3>
<div class="paragraph">
<p>NFA $M = (Q, \Sigma, \delta, q_0, F)$ dimana:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$Q$ adalah set semua state (finite),</p>
</li>
<li>
<p>$\Sigma$ adalah alfabet/ input (finite set symbols),</p>
</li>
<li>
<p>$\delta \in (Q \times (\Sigma \cup {\epsilon}) \to P(Q))$ adalah fungsi
transisi,</p>
</li>
<li>
<p>$q_0 \in Q$ adalah start state,</p>
</li>
<li>
<p>$F \subseteq Q$ adalah set state final (<em>accepting state</em>).</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Contohnya: $Q = {q_0, q_1, q_2}$, $\Sigma = {a, b}$, $F = {q_2}$
dan $\delta$ =</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
    \delta(q_0, a)      &amp; = {q_0, q_1} \\
    \delta(q_0, b)      &amp; = {q_0} \\
    \delta(q_0, \epsilon) &amp; = {q_2} \\
    \delta(q_1, a)      &amp; = \{\} \\
    \delta(q_1, b)      &amp; = {q_2} \\
    \delta(q_1, \epsilon) &amp; = \{\} \\
    \delta(q_2, a)      &amp; = \{\} \\
    \delta(q_2, b)      &amp; = \{\} \\
    \delta(q_2, \epsilon) &amp; = \{\}
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>digambarkan dengan:</p>
</div>
<div id="img-nfa" class="imageblock">
<div class="content">
<a class="image" href="/assets/img/Screenshot_20211207_113854.png"><img src="/assets/img/Screenshot_20211207_113854.png" alt="NFA"></a>
</div>
<div class="title">Figure 2. A simple NFA</div>
</div>
</div>
<div class="sect2">
<h3 id="conver-nfa-to-dfa"><a class="anchor" href="#conver-nfa-to-dfa"></a>conver NFA to DFA</h3>
<div class="paragraph">
<p>lorem</p>
</div>
</div>
<div class="sect2">
<h3 id="minimization-of-dfa"><a class="anchor" href="#minimization-of-dfa"></a>minimization of DFA</h3>
<div class="paragraph">
<p>Myhill Nerode Theorem for minimization DFA</p>
</div>
</div>
<div class="sect2">
<h3 id="regular-expression"><a class="anchor" href="#regular-expression"></a>Regular Expression</h3>

</div>
<div class="sect2">
<h3 id="mealy-and-moore-machine"><a class="anchor" href="#mealy-and-moore-machine"></a>Mealy and Moore Machine</h3>
<div class="sect3">
<h4 id="convert-melay-to-moore-and-the-opposite"><a class="anchor" href="#convert-melay-to-moore-and-the-opposite"></a>convert Melay to Moore and the opposite</h4>

</div>
</div>
<div class="sect2">
<h3 id="epsilon-nfa"><a class="anchor" href="#epsilon-nfa"></a>$\epsilon$ NFA</h3>
<div class="sect3">
<h4 id="epsilon-nfa-to-nfa"><a class="anchor" href="#epsilon-nfa-to-nfa"></a>$\epsilon$ NFA to NFA</h4>

</div>
</div>
<div class="sect2">
<h3 id="nonregular-languages"><a class="anchor" href="#nonregular-languages"></a>Nonregular Languages</h3>

</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Teori Komputasi" /><summary type="html"><![CDATA[Finite Automata]]></summary></entry><entry><title type="html">ToC - intro</title><link href="https://deo.or.id/2021/toc-intro.html" rel="alternate" type="text/html" title="ToC - intro" /><published>2021-12-03T00:00:00+08:00</published><updated>2021-12-03T00:00:00+08:00</updated><id>https://deo.or.id/2021/toc-intro</id><content type="html" xml:base="https://deo.or.id/2021/toc-intro.html"><![CDATA[<div class="sect1">
<h2 id="latar-belakang"><a class="anchor" href="#latar-belakang"></a>Latar belakang</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Sebenarnya, dari tahun 2019 saya sudah ingin mempelajari tentang teori
komputasi. Hal ini bermula saat teman-teman Ilkom'16 mengambil matkul tekom,
namun saya sendiri tidak sempat mengambil matkul tersebut akibat banyaknya
matkul yang saya ambil pada semester itu.</p>
</div>
<div class="paragraph">
<p>Sehingga saya memutuskan untuk belajar tekom secara mandiri melalui buku dan
youtube. Buku yang saya baca adalah:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><strong>Formal Language - A Practical Introduction</strong> oleh Adam Brooks Webber</p>
</li>
<li>
<p><strong>Introduction to the theory of computation</strong> oleh Michael Sipser</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>dan dari beberapa channel youtube seperti Neso Academy.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="materi"><a class="anchor" href="#materi"></a>Materi</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Alfabet adalah finite set simbol, contohnya $\Sigma = {a, b}$ adalah set
simbol dari $a$ dan $b$,</p>
</li>
<li>
<p>String adalah urutan rangkaian simbol (kosong sampai infinity simbol),
contohnya $aaaa$ dan $10001$. Dengan $|ab| = 2$, $|\epsilon| = 0$, 'zero' ("the
string of no symbols") ${} \neq {\epsilon}$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>$$\begin{aligned}
x^n &amp;= xx \cdots x, \text{n times} \\
x^0 &amp;= \epsilon \\
x^1 &amp;= x \\
x^2 &amp;= xx
\end{aligned}$</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Languages adalah set string atas fixed alfabet, dengan $\Sigma^{\ast}$
adalah set semua string atas $\Sigma$ (<em>Kleene closure</em>), contohnya
${a^{\ast}} = {\epsilon, a, aa, aaa, \cdots}$. Dengan menggunakan $x \in
\Sigma^{\ast}$ adalah $x$ atas alfabet $\Sigma$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Kecuali $\Sigma = \{\}$, Kleene closure atas alfabet adalah infinity set.</p>
</div>
<div class="paragraph">
<p><em>The Pragmatic Programmer</em> <a href="#pp">[pp]</a> should be required reading for all developers.
To learn all about design patterns, refer to the book by the &#8220;Gang of Four&#8221; <a href="#gof">[gang]</a>.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="references"><a class="anchor" href="#references"></a>References</h2>
<div class="sectionbody">
<div class="ulist bibliography">
<ul class="bibliography">
<li>
<p><a id="pp"></a>[pp] Andy Hunt &amp; Dave Thomas. The Pragmatic Programmer:
From Journeyman to Master. Addison-Wesley. 1999.</p>
</li>
<li>
<p><a id="gof"></a>[gang] Erich Gamma, Richard Helm, Ralph Johnson &amp; John Vlissides.
Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley. 1994.</p>
</li>
</ul>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Teori Komputasi" /><summary type="html"><![CDATA[Latar belakang]]></summary></entry><entry><title type="html">Tata Krama Mahasiswa</title><link href="https://deo.or.id/2021/ttkm.html" rel="alternate" type="text/html" title="Tata Krama Mahasiswa" /><published>2021-11-11T00:00:00+08:00</published><updated>2021-11-11T00:00:00+08:00</updated><id>https://deo.or.id/2021/ttkm</id><content type="html" xml:base="https://deo.or.id/2021/ttkm.html"><![CDATA[<div class="imageblock">
<div class="content">
<a class="image" href="/assets/img/tata-krama-mahasiswa.jpeg"><img src="/assets/img/tata-krama-mahasiswa.jpeg" alt="Tata krama mahasiswa"></a>
</div>
<div class="title">Figure 1. Tata krama mahasiswa</div>
</div>
<div class="paragraph">
<p>Bagaimana mahasiswa dapat berkomunikasi dengan baik dengan dosennya <a href="#detik">[detik]</a>.</p>
</div>
<div class="sect1">
<h2 id="references"><a class="anchor" href="#references"></a>References</h2>
<div class="sectionbody">
<div class="ulist bibliography">
<ul class="bibliography">
<li>
<p><a id="detik"></a>[detik] <a href="https://akcdn.detik.net.id/community/media/visual/2017/10/06/17629eb5-4188-4fe4-8f8a-3e566f3b4ec1.jpeg?w=700&amp;q=90" class="bare">https://akcdn.detik.net.id/community/media/visual/2017/10/06/17629eb5-4188-4fe4-8f8a-3e566f3b4ec1.jpeg?w=700&amp;q=90</a> diakses 2021.</p>
</li>
</ul>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Artikel" /></entry><entry><title type="html">Asciidoc Checkbox</title><link href="https://deo.or.id/2021/asciidoc-checkbox.html" rel="alternate" type="text/html" title="Asciidoc Checkbox" /><published>2021-11-09T00:00:00+08:00</published><updated>2021-11-09T00:00:00+08:00</updated><id>https://deo.or.id/2021/asciidoc-checkbox</id><content type="html" xml:base="https://deo.or.id/2021/asciidoc-checkbox.html"><![CDATA[<div class="paragraph">
<p>Untuk menggunakan checkbox asciidoc pada jekyll, dapat menggunakan</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="asciidoc">* [*] checked
* [x] also checked
* [ ] not checked</code></pre>
</div>
</div>
<div class="paragraph">
<p>kemudian mengaktifkan font awesome untuk membuat icon checkbox aktif,</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="html"><span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span>
      <span class="na">href=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/
            font-awesome.min.css"</span><span class="nt">&gt;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh hasil:</p>
</div>
<div class="ulist checklist">
<ul class="checklist">
<li>
<p><i class="fa fa-check-square-o"></i> checked</p>
</li>
<li>
<p><i class="fa fa-check-square-o"></i> also checked</p>
</li>
<li>
<p><i class="fa fa-square-o"></i> not checked</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Sumber:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://docs.asciidoctor.org/asciidoc/latest/lists/checklist/">asciidoctor.org</a></p>
</li>
</ul>
</div>
<script src="https://kit.fontawesome.com/c42de40267.js" crossorigin="anonymous" defer></script>]]></content><author><name>Deo Valiandro. M</name></author><category term="Tutorial" /></entry><entry><title type="html">Single Linked-List</title><link href="https://deo.or.id/2021/sll.html" rel="alternate" type="text/html" title="Single Linked-List" /><published>2021-10-12T00:00:00+08:00</published><updated>2021-10-12T00:00:00+08:00</updated><id>https://deo.or.id/2021/sll</id><content type="html" xml:base="https://deo.or.id/2021/sll.html"><![CDATA[<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="c"><span class="cp">#include</span> <span class="cpf">&lt;stdio.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span>
<span class="k">struct</span> <span class="n">Node</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">data</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">Node</span><span class="o">*</span> <span class="n">next</span><span class="p">;</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="nf">insert_beginning</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">,</span> <span class="kt">int</span> <span class="n">value</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">p_head</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="p">)</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">p_head</span><span class="p">));</span>
    <span class="n">p_head</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
    <span class="n">p_head</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="o">*</span><span class="n">head</span><span class="p">;</span>
    <span class="o">*</span><span class="n">head</span> <span class="o">=</span> <span class="n">p_head</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">insert_last</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">,</span> <span class="kt">int</span> <span class="n">value</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">l_head</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="p">)</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">l_head</span><span class="p">));</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">tmp</span><span class="p">;</span>
    <span class="n">l_head</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
    <span class="n">l_head</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">head</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="o">*</span><span class="n">head</span> <span class="o">=</span> <span class="n">l_head</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">tmp</span> <span class="o">=</span> <span class="o">*</span><span class="n">head</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="n">l_head</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">insert_at</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">,</span> <span class="kt">int</span> <span class="n">value</span><span class="p">,</span> <span class="kt">int</span> <span class="n">position</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">position</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">insert_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">),</span> <span class="n">value</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">a_head</span> <span class="o">=</span> <span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="p">)</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="o">*</span><span class="n">a_head</span><span class="p">));</span>
    <span class="n">a_head</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
    <span class="n">a_head</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>

    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">dummy</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">dum</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="n">head</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">position</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="o">*</span><span class="n">head</span> <span class="o">=</span> <span class="n">a_head</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">dummy</span> <span class="o">=</span> <span class="o">*</span><span class="n">head</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">position</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">dummy</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">position</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">insert_last</span><span class="p">(</span><span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">),</span> <span class="n">value</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">dummy</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">position</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"Out of range</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">dummy</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">dummy</span> <span class="o">=</span> <span class="n">dummy</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
        <span class="n">position</span><span class="o">--</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">dum</span> <span class="o">=</span> <span class="n">dummy</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="n">dummy</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="n">a_head</span><span class="p">;</span>
    <span class="n">a_head</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="n">dum</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">delete_beginning</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Linked list empty</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">dummy</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">del</span><span class="p">;</span>
    <span class="n">dummy</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="n">del</span> <span class="o">=</span> <span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">);</span>
    <span class="o">*</span><span class="n">head</span> <span class="o">=</span> <span class="n">dummy</span><span class="p">;</span>
    <span class="n">free</span><span class="p">(</span><span class="n">del</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">delete_end</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Linked list empty</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">delete_beginning</span> <span class="p">(</span><span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">));</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">tmp</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">del</span><span class="p">;</span>
    <span class="n">tmp</span> <span class="o">=</span> <span class="o">*</span><span class="n">head</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">((</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">del</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="n">free</span><span class="p">(</span><span class="n">del</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">delete_at</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">,</span> <span class="kt">int</span> <span class="n">position</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">counter</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">rposition</span> <span class="o">=</span> <span class="n">position</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Linked list empty</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">rposition</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">delete_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">));</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">tmp</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">del</span><span class="p">;</span>
    <span class="n">tmp</span> <span class="o">=</span> <span class="o">*</span><span class="n">head</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">rposition</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"Out of range</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">counter</span><span class="o">++</span><span class="p">;</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
        <span class="n">rposition</span><span class="o">--</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">position</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">delete_end</span><span class="p">(</span><span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">head</span><span class="p">));</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">del</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="n">free</span><span class="p">(</span><span class="n">del</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">search</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">**</span><span class="n">head</span><span class="p">,</span> <span class="kt">int</span> <span class="n">data</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Linked list empty</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="p">((</span><span class="o">*</span><span class="n">head</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">==</span> <span class="n">data</span><span class="p">))</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Found in %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">index</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">tmp</span><span class="p">;</span>
    <span class="n">tmp</span> <span class="o">=</span> <span class="o">*</span><span class="n">head</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">tmp</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">==</span> <span class="n">data</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"Found in %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">index</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
        <span class="n">index</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">printf</span><span class="p">(</span><span class="s">"Data not found</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">print_linked</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">node</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">node</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"Linked list empty</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">while</span><span class="p">(</span><span class="n">node</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">node</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">);</span>
        <span class="n">node</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">free_all</span><span class="p">(</span><span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">node</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span><span class="n">node</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">next</span> <span class="o">=</span> <span class="n">node</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
        <span class="n">free</span><span class="p">(</span><span class="n">node</span><span class="p">);</span>
        <span class="n">node</span> <span class="o">=</span> <span class="n">next</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">Node</span> <span class="o">*</span><span class="n">pnode</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="n">search</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">99</span><span class="p">);</span>
    <span class="n">delete_end</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">);</span>
    <span class="n">delete_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">);</span>
    <span class="n">delete_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>

    <span class="n">insert_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">99</span><span class="p">);</span>
    <span class="n">search</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">99</span><span class="p">);</span>

    <span class="n">delete_end</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">);</span>

    <span class="n">insert_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>

    <span class="n">insert_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">12</span><span class="p">);</span>
    <span class="n">insert_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
    <span class="n">insert_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
    <span class="n">insert_last</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">19</span><span class="p">);</span>

    <span class="n">insert_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">insert_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

    <span class="n">search</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">99</span><span class="p">);</span>

    <span class="n">delete_beginning</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">);</span>
    <span class="n">delete_at</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
    <span class="n">delete_end</span><span class="p">(</span><span class="o">&amp;</span><span class="n">pnode</span><span class="p">);</span>

    <span class="n">print_linked</span><span class="p">(</span><span class="n">pnode</span><span class="p">);</span>
    <span class="n">free_all</span><span class="p">(</span><span class="n">pnode</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Tutorial" /></entry><entry><title type="html">Stack</title><link href="https://deo.or.id/2021/stack.html" rel="alternate" type="text/html" title="Stack" /><published>2021-09-30T00:00:00+08:00</published><updated>2021-09-30T00:00:00+08:00</updated><id>https://deo.or.id/2021/stack</id><content type="html" xml:base="https://deo.or.id/2021/stack.html"><![CDATA[<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="c++"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">myStack</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">data</span><span class="p">;</span>
    <span class="n">std</span><span class="o">::</span><span class="n">getline</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">cin</span><span class="p">,</span> <span class="n">data</span><span class="p">);</span>

    <span class="k">for</span><span class="p">(</span><span class="kt">char</span> <span class="o">&amp;</span> <span class="n">i</span> <span class="o">:</span> <span class="n">data</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="sc">'('</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">myStack</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="sc">')'</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">myStack</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
            <span class="n">myStack</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
        <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="sc">')'</span> <span class="o">&amp;&amp;</span> <span class="n">myStack</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
            <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Not fix"</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">myStack</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">?</span> <span class="s">"All data correct"</span> <span class="o">:</span> <span class="s">"Not fix"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Struktur Data" /></entry><entry><title type="html">Tahun Kabisat</title><link href="https://deo.or.id/2021/tahun-kabisat.html" rel="alternate" type="text/html" title="Tahun Kabisat" /><published>2021-06-13T00:00:00+08:00</published><updated>2021-06-13T00:00:00+08:00</updated><id>https://deo.or.id/2021/tahun-kabisat</id><content type="html" xml:base="https://deo.or.id/2021/tahun-kabisat.html"><![CDATA[<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>"Although the Genius Myth of the solo software developer still persists,
the truth is that no one really goes it alone."</p>
</div>
</blockquote>
<div class="attribution">
&#8212; Software Engineering at Google
</div>
</div>
<div class="paragraph">
<p>Tahun kabisat (bahasa Inggris: Leap year) merupakan tahun yang mengalami
penambahan satu hari dengan tujuan untuk menyesuaikan penanggalan dengan tahun
astronomi. Dalam satu tahun tidak secara persis terdiri dari 365 hari, tetapi
365 hari 5 jam 48 menit 45,1814 detik. Jika hal ini tidak dihiraukan, maka
setiap empat tahun akan kekurangan hampir 1 hari (tepatnya 23 jam 15 menit
0,7256 detik). Maka untuk mengkompensasi hal ini, setiap 4 tahun sekali (tahun
yang bisa dibagi 4), diberi 1 hari ekstra: 29 Februari. Tetapi karena 5 jam 48
menit 45,1814 detik kurang dari 6 jam, maka tahun-tahun yang bisa dibagi 100
(seperti tahun 1900), bukan tahun kabisat, kecuali bisa dibagi dengan 400
(seperti tahun 2000).<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1</a>]</sup></p>
</div>
<div class="paragraph">
<p>Pseudocode</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code>if year is divisible by 400 then is_leap_year
else if year is divisible by 100 then not_leap_year
else if year is divisible by 4 then is_leap_year
else not_leap_year</code></pre>
</div>
</div>
<div class="paragraph">
<p>Dalam Python:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="n">year</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Year = "</span><span class="p">)</span>

<span class="k">if</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">400</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">"Leap year"</span><span class="p">)</span>
<span class="k">elif</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">100</span><span class="p">):</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">"Not leap year"</span><span class="p">)</span>
<span class="k">elif</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">4</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">"Leap year"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span> <span class="p">(</span><span class="s">"Not leap year"</span><span class="p">)</span></code></pre>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnotedef_1">
<a href="#_footnoteref_1">1</a>. Wikipedia (<a href="https://id.wikipedia.org/wiki/Tahun_kabisat" class="bare">https://id.wikipedia.org/wiki/Tahun_kabisat</a>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Tutorial" /></entry><entry><title type="html">String</title><link href="https://deo.or.id/2021/pp-string.html" rel="alternate" type="text/html" title="String" /><published>2021-05-22T00:00:00+08:00</published><updated>2021-05-22T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-string</id><content type="html" xml:base="https://deo.or.id/2021/pp-string.html"><![CDATA[<div class="paragraph">
<p>Di dalam bahasa pemrograman Java, string merupakan sebuah tipe data reference.
Tipe data ini diperlakukan sebagai sebuah obyek. String adalah kumpulan beberapa
karakter (char).</p>
</div>
<div class="paragraph">
<p>String sendiri sebenarnya merupakan sebuah class yang terdapat dalam library
Java dan digunakan untuk memanipulasi karakter. Contoh sintaks untuk
mendeklarasikan sebuah string:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Hay"</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>String adalah tipe data immutable; ketika objek <code>String</code> dibuat, maka kontennya
tidak bisa diubah lagi.</p>
</div>
<div class="paragraph">
<p>Untuk menggabungkan beberapa string, Java menggunakan <code>+</code>, misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">String</span> <span class="n">nama</span> <span class="o">=</span> <span class="s">"John "</span> <span class="o">+</span> <span class="s">"Doe"</span><span class="o">;</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">nama</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>menghasilkan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">John Doe</code></pre>
</div>
</div>
<div class="sect1">
<h2 id="menthod-dalam-class-string"><a class="anchor" href="#menthod-dalam-class-string"></a>Menthod dalam class String</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Ada beberapa method yang ada di dalam class <code>String</code>:</p>
</div>
<div class="sect2">
<h3 id="equals"><a class="anchor" href="#equals"></a>equals()</h3>
<div class="paragraph">
<p>Digunakan untuk menentukan apakah dua buah <code>String</code> adalah sama, misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">String</span> <span class="n">str0</span> <span class="o">=</span> <span class="s">"Kamu"</span><span class="o">;</span>
<span class="nc">String</span> <span class="n">str1</span> <span class="o">=</span> <span class="s">"Kami"</span><span class="o">;</span>

<span class="k">if</span><span class="o">(</span><span class="n">str0</span><span class="o">.</span><span class="na">equal</span><span class="o">(</span><span class="n">str1</span><span class="o">))</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Sama"</span><span class="o">);</span>
<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Tidak sama"</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p><code>str1</code> menunjukkan bahwa <code>str1</code> adalah nilai yang dijadikan pembanding.</p>
</div>
<div class="paragraph">
<p><code>equals()</code> menghasilkan nilai <code>boolean</code>.</p>
</div>
</div>
<div class="sect2">
<h3 id="length"><a class="anchor" href="#length"></a>length()</h3>
<div class="paragraph">
<p>Digunakan untuk menentukan panjangnya suatu string, misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"Nona manis"</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="n">str</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">l</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p><code>length()</code> menghasilkan nilai <code>int</code>.</p>
</div>
</div>
<div class="sect2">
<h3 id="charat"><a class="anchor" href="#charat"></a>charAt()</h3>
<div class="paragraph">
<p>Digunakan untuk menentukan <code>char</code> pada posisi tertentu pada sebuah <code>String</code>,
misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">String</span> <span class="n">nama</span> <span class="o">=</span> <span class="s">"Deo Valiandro"</span>
<span class="kt">char</span> <span class="n">p2</span> <span class="o">=</span> <span class="n">nama</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p2</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>angka 2 menunjukkan index char yang diinginkan dalam sebuah <code>String</code>.</p>
</div>
<div class="paragraph">
<p><code>charAt()</code> mengahasilkan nilai <code>char</code>.</p>
</div>
<div class="paragraph">
<p>Dan masih banyak lagi method-method lainnya.</p>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">File IO</title><link href="https://deo.or.id/2021/pp-file-io.html" rel="alternate" type="text/html" title="File IO" /><published>2021-05-21T00:00:00+08:00</published><updated>2021-05-21T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-file-io</id><content type="html" xml:base="https://deo.or.id/2021/pp-file-io.html"><![CDATA[<div class="paragraph">
<p>Input dan output pada file digunakan untuk mengolah file tersebut.</p>
</div>
<div class="paragraph">
<p>Untuk membaca suatu file, kita menggunakan class <code>FileReader</code> dan untuk menulis
pada suatu file, kita menggunakan class <code>FileWriter</code>.</p>
</div>
<div class="paragraph">
<p>Contoh kasusnya, menyalin suatu isi file ke file lain. Disini kita akan
menggunakan <code>FileReader</code> untuk membaca isi file tersebut, lalu kita akan menulis
dengan menggunakan <code>FileWriter</code> kepada file lainnya.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.FileWriter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">FileReader</span> <span class="n">fileReader</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"source.txt"</span><span class="o">);</span>
            <span class="nc">FileWriter</span> <span class="n">fileWriter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileWriter</span><span class="o">(</span><span class="s">"destination.txt"</span><span class="o">);</span>

            <span class="kt">int</span> <span class="n">i</span><span class="o">;</span>

            <span class="k">while</span><span class="o">(</span> <span class="o">(</span> <span class="n">i</span> <span class="o">=</span> <span class="n">fileReader</span><span class="o">.</span><span class="na">read</span><span class="o">())</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">){</span>
                <span class="n">fileWriter</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="n">fileReader</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
            <span class="n">fileWriter</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">FileNotFoundException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"File tidak ada! "</span> <span class="o">+</span> <span class="n">e</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Terdapat masalah ada I/O"</span> <span class="o">+</span> <span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Method</title><link href="https://deo.or.id/2021/pp-method.html" rel="alternate" type="text/html" title="Method" /><published>2021-05-20T00:00:00+08:00</published><updated>2021-05-20T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-method</id><content type="html" xml:base="https://deo.or.id/2021/pp-method.html"><![CDATA[<div class="paragraph">
<p>Method adalah suatu fungsi.</p>
</div>
<div class="paragraph">
<p>Method melaksanakan suatu tugas tertentu (menurut prinsip SOLID).</p>
</div>
<div class="paragraph">
<p>Method pada Java memiliki bentuk umum seperti berikut ini:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">return</span><span class="o">-</span><span class="n">type</span> <span class="nf">methodName</span><span class="o">(</span><span class="n">parameter</span><span class="o">-</span><span class="n">list</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//body of method</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>dimana:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><code>return-type</code> adalah jenis nilai yang akan dikembalikan oleh method
tersebut.</p>
</li>
<li>
<p>methodName adalah nama method</p>
</li>
<li>
<p>parameter-list adalah daftar nilai yang dikirim ke method tersebut.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Contohnya:</p>
</div>
<div class="paragraph">
<p>sebuah method yang berfungsi untuk menghitung hasil perkalian dua buah bilangan.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">public</span> <span class="kt">int</span> <span class="nf">multipication</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">a</span><span class="o">*</span><span class="n">b</span><span class="o">;</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p><code>int</code> adalah tipe data yang akan dikembalikan oleh method tersebut, yaitu hasil
perkalian a dengan b. <code>multipication</code> adalah nama method tersebut, <code>int a</code> dan
<code>int b</code> adalah 2 jenis parameter yang diterima oleh method tersebut, parameter
ini akan berguna sebagai nilai yang akan diolah oleh method tersebut.</p>
</div>
<div class="paragraph">
<p><code>public</code> adalah
<a href="/2019/05/19/encapsulation.html#access-modifier">access modifier</a>.</p>
</div>
<div class="paragraph">
<p>Sedangkan untuk memanggil method tersebut, kita dapat memanggil dengan
menggunakan namanya, misalnya kita akan memanggil method yang telah kita buat
diatas:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">hasil</span> <span class="o">=</span> <span class="n">multipication</span><span class="o">(</span><span class="mi">12</span><span class="o">,</span> <span class="mi">14</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>12 dan 14 disini adalah argumen yang dikirim.</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>untuk mengembalikan multiple values, dapat menggunakan return array</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Sebuah method juga dapat mengembalikan object. Misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Demo</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">a</span><span class="o">;</span>
    <span class="kt">double</span> <span class="n">b</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">c</span><span class="o">;</span>

    <span class="nc">Demo</span><span class="o">(</span><span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">double</span> <span class="n">d</span><span class="o">,</span> <span class="kt">int</span> <span class="n">a</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">a</span> <span class="o">=</span> <span class="n">m</span><span class="o">;</span>
        <span class="n">b</span> <span class="o">=</span> <span class="n">d</span><span class="o">;</span>
        <span class="n">c</span> <span class="o">=</span> <span class="n">a</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">MethodDemo4</span><span class="o">{</span>
    <span class="kd">static</span> <span class="nc">Demo</span> <span class="nf">get</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span> <span class="kt">int</span> <span class="n">y</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">Demo</span><span class="o">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">y</span><span class="o">,</span> <span class="o">(</span><span class="kt">double</span><span class="o">)</span><span class="n">x</span> <span class="o">/</span> <span class="n">y</span><span class="o">,</span> <span class="o">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Demo</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">get</span><span class="o">(</span><span class="mi">25</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Multiplication = "</span> <span class="o">+</span> <span class="n">ans</span><span class="o">.</span><span class="na">a</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Division = "</span> <span class="o">+</span> <span class="n">ans</span><span class="o">.</span><span class="na">b</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Addition = "</span> <span class="o">+</span> <span class="n">ans</span><span class="o">.</span><span class="na">c</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Sumber: <a href="{https://www.studytonight.com/java/methods-in-java.php}"><a href="https://www.studytonight.com" class="bare">https://www.studytonight.com</a></a></p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Java menggunakan call-by-value bukan call-by-reference</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Note:
1. Tambahkan call-by-value vs call-by-reference</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Array</title><link href="https://deo.or.id/2021/pp-array.html" rel="alternate" type="text/html" title="Array" /><published>2021-05-19T00:00:00+08:00</published><updated>2021-05-19T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-array</id><content type="html" xml:base="https://deo.or.id/2021/pp-array.html"><![CDATA[<div class="paragraph">
<p>Array adalah kelompok data dengan tipe yang sama.</p>
</div>
<div class="paragraph">
<p>Dalam Java, pada saat mendeklarasikan sebuah array panjang array harus
ditentukan, dan tidak dapat diubah setelahnya (nilai fix). Setiap item dalam
sebuah array disebut element, dan setiap element dapat diakses dengan indexnya.
Index array selalu mulai dari 0 sampai n-1, dengan n adalah panjang array.</p>
</div>
<div class="sect1">
<h2 id="deklarasi"><a class="anchor" href="#deklarasi"></a>Deklarasi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Sebelum digunakan, Array harus dideklarasikan terlebih dahulu dengan
menentukan tipe data dan panjangnya.</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="n">tipeData</span><span class="o">[]</span> <span class="n">namaArray</span> <span class="o">=</span> <span class="k">new</span> <span class="n">tipeData</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
<span class="c1">//atau</span>
<span class="n">tipeData</span> <span class="n">namaArray</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">tipeData</span><span class="o">[</span><span class="n">n</span><span class="o">];</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">20</span><span class="o">];</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mengisi"><a class="anchor" href="#mengisi"></a>Mengisi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Ada beberapa cara untuk menginisialisasi array, diantaranya adalah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="n">tipeData</span><span class="o">[]</span> <span class="n">namaArray</span> <span class="o">=</span> <span class="o">{</span> <span class="n">element1</span><span class="o">,</span> <span class="n">element2</span><span class="o">,</span> <span class="n">element3</span><span class="o">,</span> <span class="n">element4</span> <span class="o">};</span>
<span class="c1">//atau</span>
<span class="n">tipeData</span><span class="o">[]</span> <span class="n">namaArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">4</span><span class="o">];</span>
<span class="n">namaArray</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">element1</span><span class="o">;</span>
<span class="n">namaArray</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">element2</span><span class="o">;</span>
<span class="n">namaArray</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="n">element3</span><span class="o">;</span>
<span class="n">namaArray</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="n">element4</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">132</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">134</span><span class="o">,</span> <span class="mi">33</span><span class="o">};</span>
<span class="c1">//atau</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">4</span><span class="o">];</span>
<span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">132</span><span class="o">;</span>
<span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="mi">11</span><span class="o">;</span>
<span class="n">arr</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="mi">134</span><span class="o">;</span>
<span class="n">arr</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="mi">33</span><span class="o">;</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mengakses"><a class="anchor" href="#mengakses"></a>Mengakses</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Untuk mengakses element tertentu pada array cukup dengan menyebutkan nama array
disertai dengan kurung siku dan index element yang ingin diakses.</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="n">namaArray</span><span class="o">[</span><span class="n">index</span><span class="o">];</span></code></pre>
</div>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Indeks array dimulai dari 0</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Jadi jika mempunyai data:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">132</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">134</span><span class="o">,</span> <span class="mi">33</span><span class="o">};</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>akan menampilkan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">132</code></pre>
</div>
</div>
<div class="paragraph">
<p>dan kemudian diikuti oleh indeks berikutnya.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="array-multi-dimensi"><a class="anchor" href="#array-multi-dimensi"></a>Array multi-dimensi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Array multidimensi dapat diilustrasikan sebagai array dalam array. Artinya
setiap element pada array tersebut adalah sebuah array juga (Array dua dimensi).
Hal ini juga berlaku untuk Array NxN dimensi.</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">4</span><span class="o">][</span><span class="mi">5</span><span class="o">];</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Kemudian untuk mengisinya dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">}</span>
<span class="o">};</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Untuk mengaksesnya, digunakan cara yang sama dengan array 1-dimensi, misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">]);</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="panjang-array"><a class="anchor" href="#panjang-array"></a>Panjang Array</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Untuk menentukan panjang suatu array, digunakan fungsi <code>.length</code>.
Contohnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">132</span><span class="o">,</span> <span class="mi">11</span><span class="o">,</span> <span class="mi">134</span><span class="o">,</span> <span class="mi">33</span><span class="o">};</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>output:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="mi">4</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>nilainya bukan dihitung dari angka indeks terakhir melainkan jumlah indeknya,
sehingga walaupun indeksnya dimulai dari angka <code>0</code> namun panjangnya tetap akan
mengikuti jumlah indeksnya.</p>
</div>
<div class="paragraph">
<p>Contoh lain:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[][]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">},</span>
    <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">}</span>
<span class="o">};</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">);</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="na">length</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>output:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="mi">4</span>
<span class="mi">4</span>
<span class="mi">5</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Jump Statement</title><link href="https://deo.or.id/2021/pp-jump-statement.html" rel="alternate" type="text/html" title="Jump Statement" /><published>2021-05-18T00:00:00+08:00</published><updated>2021-05-18T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-jump-statement</id><content type="html" xml:base="https://deo.or.id/2021/pp-jump-statement.html"><![CDATA[<div class="paragraph">
<p>Jump statement adalah perintah untuk memindahkan alur program ke program yang
lain. Java mengenal tiga buah perintah tersebut yaitu <code>break</code>, <code>continue</code> dan
<code>return</code>.</p>
</div>
<div class="sect1">
<h2 id="break"><a class="anchor" href="#break"></a>Break</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Break merupakan perintah yang dapat digunakan untuk menghentikan proses
perulangan dengan paksa.</p>
</div>
<div class="paragraph">
<p>Berikut ini contoh penggunaan break dalam while, program akan berhenti ketika
nilai i = 2.</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">while</span> <span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
    <span class="n">i</span><span class="o">++;</span>

    <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="continue"><a class="anchor" href="#continue"></a>Continue</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Continue adalah perintah yang dapat digunakan untuk meloncati proses perulangan.</p>
</div>
<div class="paragraph">
<p>Continue hanya akan meloncati proses perulangan satu kali proses perulangan
masih tetap berjalan selama hasil lompatannya itu masih berlaku dalam perulangan
tersebut.</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="mi">5</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">continue</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Program di atas akan menampilkan bilangan mulai dari 0 sampai 10, tetapi angka 5
tidak akan ditampilkan karena ketika nilai i = 5 maka perintah <code>continue</code> akan
dijalankan.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="return"><a class="anchor" href="#return"></a>Return</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Return adalah perintah dalam java yang digunakan di dalam method. Return akan
mengembalikan suatu nilai dari sebuah method yang dipanggil.</p>
</div>
<div class="paragraph">
<p>Return akan dibahas di pembahasan tentang
<a href="/2021/05/19/pp-method.html">Method</a>.</p>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Perulangan</title><link href="https://deo.or.id/2021/pp-perulangan.html" rel="alternate" type="text/html" title="Perulangan" /><published>2021-05-17T00:00:00+08:00</published><updated>2021-05-17T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-perulangan</id><content type="html" xml:base="https://deo.or.id/2021/pp-perulangan.html"><![CDATA[<div class="paragraph">
<p>Perulangan (Looping) adalah suatu blok kode yang akan terus berjalan selama
syarat yang diberikan masih memenuhi.</p>
</div>
<div class="paragraph">
<p>Setiap perulangan memiliki empat bagian, yaitu <code>inisialisasi</code>, <code>body</code>,
<code>iterasi</code>, dan <code>terminasi/kondisi</code>.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Inisialisasi adalah statement yang menyatakan keadaan awal sebuah perulangan.</p>
</li>
<li>
<p>Body atau badan program adalah blok statement yang akan dijalankan terus
menerus selama perulangan berlangsung.</p>
</li>
<li>
<p>Iterasi adalah statement atau bagian program yang nilainya terus berubah
(ascending, descending atau cara lainnya) untuk mencapai batas atau keadaan
untuk berhenti.</p>
</li>
<li>
<p>Terminasi atau kondisi adalah statement bernilai Boolean yang menyatakan
batas atau keadaan untuk menghentikan perulangan.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Pada Java dikenal tiga macam bentuk perulangan, yaitu: <code>while</code>, <code>do-while</code>, dan
<code>for</code>.</p>
</div>
<div class="paragraph">
<p>Pada dasarnya semua perulangan dalam Java memiliki cara kerja yang sama
yaitu selama kondisi masih bernilai true maka perulangan akan terus dilakukan
hinggi kondisi bernilai false.</p>
</div>
<div class="sect1">
<h2 id="for"><a class="anchor" href="#for"></a>For</h2>
<div class="sectionbody">
<div class="paragraph">
<p>For adalah perulangan yang banyaknya perulangan diketahui atau banyaknya
perulangan sudah jelas(tentu).</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">for</span> <span class="o">(</span><span class="n">inisialisasi</span><span class="o">;</span> <span class="n">kondisi</span><span class="o">;</span> <span class="n">iterasi</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//body</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">99</span><span class="o">;</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="while"><a class="anchor" href="#while"></a>While</h2>
<div class="sectionbody">
<div class="paragraph">
<p>While adalah perulangan yang banyaknya perulangan tidak menentu dan lebih
sederhana dari pada perulangan for.</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">Inisialisasi</span><span class="o">;</span>

<span class="k">while</span> <span class="o">(</span><span class="n">kondisi</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">//body</span>
    <span class="nc">Iterasi</span><span class="o">;</span> <span class="c1">//opsional</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">19</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">while</span> <span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
    <span class="n">i</span><span class="o">++;</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="do-while"><a class="anchor" href="#do-while"></a>Do-while</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Pada perulangan ini bagian body (semua dalam kurung kurawal setelah "do")
dijalankan terlebih dahulu sebelum pengecekan kondisi.</p>
</div>
<div class="paragraph">
<p>Sehingga walaupun kondisi dari awal bernilai false, bagian body tetap dijalankan
sekali. Berbeda dengan perulangan while apabila kondisi diawal bernilai false
maka bagian body tidak akan dijalankan.</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">Inisialisasi</span><span class="o">;</span>

<span class="k">do</span> <span class="o">{</span>
    <span class="c1">//body</span>
    <span class="nc">Iterasi</span><span class="o">;</span> <span class="c1">//opsional</span>
<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">kondisi</span><span class="o">);</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">19</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">do</span> <span class="o">{</span>
    <span class="n">i</span><span class="o">++;</span>
<span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">)</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="for-each"><a class="anchor" href="#for-each"></a>For-each</h2>
<div class="sectionbody">
<div class="paragraph">
<p>For-each bukanlah keyword dari Java, melainkan cara yang lebih sederhana untuk
membuat perulangan for.</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">for</span> <span class="o">(</span><span class="n">type</span> <span class="kt">var</span><span class="o">:</span> <span class="n">array</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">statements</span> <span class="n">using</span> <span class="kt">var</span><span class="o">;</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Sama nilainya dengan</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">type</span> <span class="kt">var</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="n">statements</span> <span class="n">using</span> <span class="kt">var</span><span class="o">;</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Ini biasa digunakan pada array atau koleksi (seperti ArrayList).</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">125</span><span class="o">,</span> <span class="mi">132</span><span class="o">,</span> <span class="mi">95</span><span class="o">,</span> <span class="mi">116</span><span class="o">,</span> <span class="mi">110</span> <span class="o">};</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="nl">i:</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Namun for-each memiliki batasan:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Tidak bisa digunakan jika ingin memodifikasi nilai array,</p>
</li>
<li>
<p>Tidak bisa melacak nomor index,</p>
</li>
<li>
<p>Hanya bisa melakukan perulangan kedepan sekali.</p>
</li>
</ol>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Penyeleksian Kondisi</title><link href="https://deo.or.id/2021/pp-penyeleksian-kondisi.html" rel="alternate" type="text/html" title="Penyeleksian Kondisi" /><published>2021-05-16T00:00:00+08:00</published><updated>2021-05-16T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-penyeleksian-kondisi</id><content type="html" xml:base="https://deo.or.id/2021/pp-penyeleksian-kondisi.html"><![CDATA[<div class="paragraph">
<p>Peyeleksian adalah pilihan atau opsi dengan suatu syarat tertentu.</p>
</div>
<div class="paragraph">
<p>Jika syarat yang diberikan memenuhi, maka semua statement dalam blok kondisi
tersebut akan dijalankan, namun jika tidak maka semua stetement dalam blok itu
dilewati dan tidak dijalankan.</p>
</div>
<div class="paragraph">
<p>Contohnya, jika nilai sama dengan atau lebih dari 90 maka mahasiswa tersebut
mendapatkan nilai A, jika nilainya adalah dalam rentang 80-90 maka mahasiswa
tersebut mendapatkan nilai B, dan seterusnya.</p>
</div>
<div class="paragraph">
<p>Disini dilakukan perulangan dengan mengecek nilai mahasiswa tersebut, jika
memenuhi atau terdapat dalam rentang tertentu, maka mahasiswa tersebut akan
mendapat nilai ini.</p>
</div>
<div class="paragraph">
<p>Dalam Java terdapat dua macam penyeksian kondisi yaitu "If-else" dan "Switch".</p>
</div>
<div class="sect1">
<h2 id="if-else"><a class="anchor" href="#if-else"></a>If-Else</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Bentuk if-else adalah bentuk jika-maka, jika memenuhi syarat ini, lakukan ini,
jika tidak maka cek ke syarat berikutnya.</p>
</div>
<div class="paragraph">
<p>Bentuk umumnya adalah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">if</span> <span class="o">(</span> <span class="n">syarat1</span> <span class="o">)</span> <span class="o">{</span>
    <span class="c1">//dijalankan ketika syarat1 = true</span>
<span class="o">}</span> <span class="k">if</span> <span class="k">else</span> <span class="o">(</span> <span class="n">syarat2</span> <span class="o">)</span> <span class="o">{</span>
    <span class="c1">//dijalankan ketika syarat2 = true</span>
<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
    <span class="c1">//dijalankan ketika semua syarat false</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Aturannya:</p>
</div>
<div class="paragraph">
<p>Berikut ini hal yang harus diketahui ketika menggunakan "If-else":</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>If statement bisa tidak memiliki "else" statement, "else" statement harus
terletak setelah semua "else If" statement (jika ada).</p>
</li>
<li>
<p>If statement bisa memiliki banyak "else if" statement dan semuanya harus
terletak sebelum "else" statement.</p>
</li>
<li>
<p>Ketika salah satu "else if" statement dijalankan, tidak ada "else if" lainnya
yang akan dijalankan.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">nilai</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>

<span class="k">if</span> <span class="o">(</span><span class="n">nilai</span> <span class="o">&lt;=</span> <span class="mi">50</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"C"</span><span class="o">);</span>
<span class="o">}</span> <span class="k">if</span> <span class="k">else</span> <span class="o">(</span><span class="n">nilai</span> <span class="o">&lt;=</span> <span class="mi">85</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"B"</span><span class="o">);</span>
<span class="o">}</span> <span class="k">if</span> <span class="k">else</span> <span class="o">(</span><span class="n">nilai</span> <span class="o">&gt;</span> <span class="mi">85</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"A"</span><span class="o">);</span>
<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Eror"</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="switch"><a class="anchor" href="#switch"></a>Switch</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Pada switch terdapat syarat yang digunakan untuk pengujian terhadap daftar nilai
yang ada.</p>
</div>
<div class="paragraph">
<p>Setiap nilai (daftar nilai) ini disebut case, dan syarat akan diperiksa untuk
setiap case. Jika daftar case tidak ada yang memenuhi, maka akan otomatis
ke <code>default</code>.</p>
</div>
<div class="paragraph">
<p>Bentuk umumnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="k">switch</span> <span class="o">(</span> <span class="n">test_variable</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">case</span> <span class="n">value</span> <span class="o">:</span>
        <span class="c1">//statement</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">case</span> <span class="n">value</span> <span class="o">:</span>
        <span class="c1">//statement</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">default</span> <span class="o">:</span>
        <span class="c1">//statement</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Switch memerlukan <code>break</code> untuk menghentikan pengujian ketika pengujian itu
sudah memenuhi persyaratan yang diberikan.</p>
</div>
<div class="paragraph">
<p><code>break</code> digunakan untuk menghentikan pencarian jika kondisi yang dicari sudah
memenuhi (Baca bagian [Jump Statement](/2021/05/18/jump-statement.html)).</p>
</div>
<div class="paragraph">
<p>Contoh penggunaan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
<span class="k">switch</span> <span class="o">(</span><span class="n">a</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"You chose One"</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"You chose Two"</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"You chose Three"</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">case</span> <span class="mi">4</span><span class="o">:</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"You chose Four"</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">case</span> <span class="mi">5</span><span class="o">:</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"You chose Five"</span><span class="o">);</span>
        <span class="k">break</span><span class="o">;</span>
    <span class="k">default</span><span class="o">:</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Invalid Choice"</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Operasi Dasar</title><link href="https://deo.or.id/2021/pp-operasi.html" rel="alternate" type="text/html" title="Operasi Dasar" /><published>2021-05-15T00:00:00+08:00</published><updated>2021-05-15T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-operasi</id><content type="html" xml:base="https://deo.or.id/2021/pp-operasi.html"><![CDATA[<div class="sect1">
<h2 id="operator-aritmatika"><a class="anchor" href="#operator-aritmatika"></a>Operator Aritmatika</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Operator aritmatika yang dapat dilakukan adalah:</p>
</div>
<table class="tableblock frame-all grid-all stretch center">
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Hasil</th>
<th class="tableblock halign-left valign-top">Operator</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Additional</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">+</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Subtraction</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">-</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Multiplication</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">*</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Division</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">/</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Modulus</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">%</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Increment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">++</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Decrement</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">&#8201;&#8212;&#8201;</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Additional assignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">+=</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Subtraction assignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">-=</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Multiplication assignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">*=</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Division assignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">/=</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Modulus asignement</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">%=</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Operator ini hanya bisa digunakan pada tipe data angka, tidak bisa digunakan
pada data <code>boolean</code>, tetapi dapat digunakan pada tipe data <code>char</code>, karena <code>char</code>
pada dasarnya adalah <code>int</code> di dalama Java.</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OperatorAritmatika</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Operasi Penjumlahan"</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">hasilPenjumlahan</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hasil 5 + 1 = "</span> <span class="o">+</span> <span class="n">hasilPenjumlahan</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Operasi Pengurangan"</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">hasilPengurangan</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hasil 4 - 1 = "</span> <span class="o">+</span> <span class="n">hasilPengurangan</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Operasi Pengalian"</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">hasilPengalian</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">5</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hasil 5 * 5 = "</span> <span class="o">+</span> <span class="n">hasilPengalian</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Operasi Pembagian"</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">hasilPembagian</span> <span class="o">=</span> <span class="mi">20</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hasil 20 / 2 = "</span> <span class="o">+</span> <span class="n">hasilPembagian</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Operasi Habis bagi"</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">hasilSisa</span> <span class="o">=</span> <span class="mi">8</span> <span class="o">%</span> <span class="mi">2</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hasil 8 % 2 = "</span> <span class="o">+</span> <span class="n">hasilSisa</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>

        <span class="kt">int</span> <span class="n">hasilSisaLain</span> <span class="o">=</span> <span class="mi">9</span> <span class="o">%</span> <span class="mi">2</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hasil 9 % 2 = "</span> <span class="o">+</span> <span class="n">hasilSisaLain</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="operator-pembanding"><a class="anchor" href="#operator-pembanding"></a>Operator pembanding</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Operator pembanding yan dapat dilakukan:</p>
</div>
<table class="tableblock frame-all grid-all stretch center">
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Hasil</th>
<th class="tableblock halign-left valign-top">Operator</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Equal to</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">==</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Not equal to</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">!=</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Greater than</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">&gt;</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Less than</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Greater than or equal to</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">&gt;=</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Less than or equal to</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">&#8656;</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Hasil operator ini adalah nilai boolean, bisa berupa true atau false.</p>
</div>
<div class="paragraph">
<p>Integer, floating-point numbers, characters, dan Booleans bisa digunakan pada
operator equal to dan not equal to, tetapi boolean tidak bisa digunakan pada
operator lain (operator order) hanya integer, floating-point numbers dan
characters.</p>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">12</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>

<span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"True"</span><span class="o">);</span>
<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Equal"</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="operator-logika"><a class="anchor" href="#operator-logika"></a>Operator Logika</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Operator logika yang bisa digunakan:</p>
</div>
<table class="tableblock frame-all grid-all stretch center">
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Hasil</th>
<th class="tableblock halign-left valign-top">Operator</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">AND</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">&amp;&amp;</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">OR</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">||</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">XOR</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">^</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">NOT</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">!</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Digunakan logika digunakan pada tipe data boolean untuk menyelesaikan
permasalahan yang membutuhkan nilai-nilai logika.</p>
</div>
<div class="paragraph">
<p>Contoh penggunaan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">boolean</span> <span class="n">a</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>

<span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">==</span> <span class="kc">true</span> <span class="o">&amp;&amp;</span> <span class="n">b</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"True"</span><span class="o">);</span>
<span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"False"</span><span class="o">);</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Tipe Data</title><link href="https://deo.or.id/2021/pp-tipe-data.html" rel="alternate" type="text/html" title="Tipe Data" /><published>2021-05-15T00:00:00+08:00</published><updated>2021-05-15T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-tipe-data</id><content type="html" xml:base="https://deo.or.id/2021/pp-tipe-data.html"><![CDATA[<div class="paragraph">
<p>Java merupakan bahasa pemrograman yang strongly typed (setiap data harus
diberikan tipe data), maka kita tidak bisa mengabaikan tipe data. Kita harus
tahu data seperti apa yang disimpan ke dalam variabel. Selain itu, Java juga
bersifat statically typed, yang artinya setiap variabel harus dideklarasikan
terlebih dahulu sebelum digunakan.</p>
</div>
<div class="sect1">
<h2 id="tipe-data-primitif"><a class="anchor" href="#tipe-data-primitif"></a>Tipe Data Primitif</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Tipe data primitif adalah tipe data standar yang tidak diturunkan dari objek
manapun. Tipe data primitif telah ditentukan dengan kata kuncinya masing-masing.
Terdapat 8 (delapan) tipe data primitif yang Java dukung, antara lain:</p>
</div>
<div class="sect2">
<h3 id="integer"><a class="anchor" href="#integer"></a>Integer</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>byte, tipe data yang menampung angka 8 bit dengan range -127 - 128
(\$2^8\$). Tipe data byte memiliki nilai default <code>0</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">byte</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span></code></pre>
</div>
</div>
</li>
<li>
<p>short, tipe data yang menampung angka 16 bit dengan range -32.768 - 32.767
(\$2^{16}\$). Tipe data byte memiliki nilai default <code>0</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">short</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">1200</span><span class="o">;</span></code></pre>
</div>
</div>
</li>
<li>
<p>int, tipe data yang menampung angka 32 bit dengan range -2,147,483,648 -
2,147,483,647 (\$2^{32}\$). Tipe data byte memiliki nilai default <code>0</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">289000</span><span class="o">;</span></code></pre>
</div>
</div>
</li>
<li>
<p>long, tipe data yang lebih panjang dari int, yaitu -9,223,372,036,854,775,808
sampai 9,223,372,036,854,775,807 (\$2^{64}\$). Tipe data long memiliki nilai
default <code>0L</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">long</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">122334445</span><span class="o">;</span></code></pre>
</div>
</div>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="floating-point-numbers"><a class="anchor" href="#floating-point-numbers"></a>Floating-point numbers</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>float tipe data untuk bilangan desimal seperti 3.14, 2.1 atau bilangan desimal lainnya. Tipe data ini bisa nemapung nilai \$2^{32}\$. Nilai default-nya
<code>0.0f</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">float</span> <span class="n">n</span> <span class="o">=</span> <span class="mf">3.14f</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>penulisannya ditambahkan huruf <code>f</code> di belakang angkanya, ini untuk menandai
bahwa bilangan tersebut adalah <code>float</code> bukan <code>double</code>.</p>
</div>
</li>
<li>
<p>double, tipe data yang mirip dengan float kecuali data yang bisa ditampungnya
lebih besar yaitu \$2^{64}\$. Nilai default-nya <code>0.0d</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">double</span> <span class="n">n</span> <span class="o">=</span> <span class="mf">144.2</span><span class="o">;</span></code></pre>
</div>
</div>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="characters"><a class="anchor" href="#characters"></a>Characters</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>char, tipe data yang hanya bisa menampung satu karakter]. Nilai yang bisa
ditampung adalah 0 to 65,535. Char digunakan untuk menampung karakter Unicode
<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1</a>]</sup>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="sc">'a'</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Nilai yang diberikan disimpan dalam satu tanda kutip. Nilai defaulnya adalah
<code>\u0000</code>.</p>
</div>
<div class="paragraph">
<p>Char dalam spesifikasi resminya tergolong kedalam <em>integer type</em> yang termasuk
dalam kategori int, short, dll. Namun karena prinsipnya yang digunakan untuk
menampung karakter Unicode, maka dibuat dalam kategori tersendiri
<sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnotedef_2" title="View footnote.">2</a>]</sup>. Sehingga char
dapat ditulis seperti ini:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">char</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">88</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>yang mana akan menghasilkan nilai <code>X</code>
<sup class="footnote">[<a id="_footnoteref_3" class="footnote" href="#_footnotedef_3" title="View footnote.">3</a>]</sup>.</p>
</div>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="boolean"><a class="anchor" href="#boolean"></a>Boolean</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Boolean, tipe data yang bisa menampung dua nilai, yaitu <code>benar</code> atau <code>salah</code>.
Tipe data ini akan banyak digunakan kemudian. Nilai default-nya <code>false</code>.</p>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">boolean</span> <span class="n">b</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span></code></pre>
</div>
</div>
</li>
</ol>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="tipe-data-reference"><a class="anchor" href="#tipe-data-reference"></a>Tipe Data Reference</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Tipe data reference merupakan sebuah tipe data yang merujuk ke sebuah objek atau
instance dari sebuah class. Salah satu tipe data yang termasuk ke dalam tipe
data reference adalah <code>string</code>. Tipe data string menunjuk ke instance dari class
<code>java.lang.String</code>.</p>
</div>
<div class="sect2">
<h3 id="string"><a class="anchor" href="#string"></a>String</h3>
<div class="paragraph">
<p>String adalah tipe data yang menampung karakter. String bisa menampung lebih
dari satu karakter, misalnya kata, kalimat atau paragraf.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="s">"Deo"</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>perhatikan, penulisan <code>String</code> menggunakan kapital di awal kata, kemudian isinya
disimpan di dalam tanda kutip dua ("&#8230;&#8203;").</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="deklarasi-variabel"><a class="anchor" href="#deklarasi-variabel"></a>Deklarasi variabel</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Sebuah data dapat disimpan ke dalam variabel. Format penulisannya sebagai
berikut:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="n">type</span> <span class="n">namaVariabel</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="sect2">
<h3 id="deklarasi"><a class="anchor" href="#deklarasi"></a>Deklarasi</h3>
<div class="paragraph">
<p>Deklarasi adalah pembuatan sebuah variabel, namun belum di isi dengan suatu
nilai. Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span><span class="o">;</span>
<span class="kt">boolean</span> <span class="n">b</span><span class="o">;</span>
<span class="kt">char</span> <span class="n">c</span><span class="o">;</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="inisiasi"><a class="anchor" href="#inisiasi"></a>Inisiasi</h3>
<div class="paragraph">
<p>Inisiasi adalah pengisian sebuah variabel dengan data. Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="n">n</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
<span class="n">b</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
<span class="n">c</span> <span class="o">=</span> <span class="sc">'A'</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Deklarasi sekaligus inisiasi juga dapat dilakukan, misalnya dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">float</span> <span class="n">f</span> <span class="o">=</span> <span class="mf">21.0f</span><span class="o">;</span>
<span class="kt">boolean</span> <span class="n">b</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="inisiasi-dinamis"><a class="anchor" href="#inisiasi-dinamis"></a>Inisiasi dinamis</h3>
<div class="paragraph">
<p>Dua atau lebih data dapat di isi secara bersamaan dalam satu baris dengan syarat
tipe datanya sama. Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">12</span><span class="o">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">13</span><span class="o">,</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">14</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>atau bisa juga jika semua data memiliki nilai yang sama, misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">y</span> <span class="o">=</span> <span class="n">z</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mengubah-tipe-ke-tipe-data-lain"><a class="anchor" href="#mengubah-tipe-ke-tipe-data-lain"></a>Mengubah tipe ke tipe data lain</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Suatu tipe data dapat di ubah ke tipe data lain, misalnya dari byte ke int.
Syaratnya adalah:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>kedua tipe data kompatible, misalnya antara byte dengan int, int dengan
float, tetapi char dan boolean tidak memiliki kompatible.</p>
</li>
<li>
<p>tipe data yang dituju memiliki ruang penyimpanan yang lebih besar, misalnya
byte memiliki ruang penyimpanan \$2^8\$, akan diubah ke int yang memiliki
penyimpanan \$2^{32}\$. Tetapi jika dari tipe data int ke byte, maka jika
nilai yang akan diubah lebih besar dari \$2^8\$, maka akan menyebabkan
nilai akhir adalah hasil modulo dari ukuran byte.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Cara mengubah tipe data dapat dicontohkan sebagai berikut:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">12</span><span class="o">;</span>
<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="n">n</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Bagaimana jika int ke float, silahkan coba sendiri.</p>
</div>
<div class="sect2">
<h3 id="konversi-otomatis"><a class="anchor" href="#konversi-otomatis"></a>Konversi otomatis</h3>
<div class="paragraph">
<p>Misalnya terdapat a, b, c yang merupakan byte, kemudian dilakukan operasi sebagai
berikut:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kt">byte</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">40</span><span class="o">;</span>
<span class="kt">byte</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">50</span><span class="o">;</span>
<span class="kt">byte</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">d</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="n">b</span> <span class="o">/</span> <span class="n">c</span><span class="o">;</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>maka nilai a, b dan c akan otomatis diubah menjadi int.</p>
</div>
<div class="paragraph">
<p>Aturan promosi ini adalah:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>byte, short, char akan di ubah ke int,</p>
</li>
<li>
<p>jika operasinya adalah long, maka akan diubah ke long,</p>
</li>
<li>
<p>float akan di ubah ke double,</p>
</li>
<li>
<p>jika operasi melibatkan double, maka otomatis akan diubah semua ke double.</p>
</li>
</ol>
</div>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnotedef_1">
<a href="#_footnoteref_1">1</a>. <a href="http://www.unicode.org" class="bare">http://www.unicode.org</a>
</div>
<div class="footnote" id="_footnotedef_2">
<a href="#_footnoteref_2">2</a>. Java: The Complete Reference, 10th Edition page 98
</div>
<div class="footnote" id="_footnotedef_3">
<a href="#_footnoteref_3">3</a>. 98 adalah nilai desimal dari X dalam sistem ASCII dan Unicode
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Input dan Output</title><link href="https://deo.or.id/2021/pp-io.html" rel="alternate" type="text/html" title="Input dan Output" /><published>2021-05-14T00:00:00+08:00</published><updated>2021-05-14T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-io</id><content type="html" xml:base="https://deo.or.id/2021/pp-io.html"><![CDATA[<div class="paragraph">
<p>IO atau input output adalah mekanisme memasukkan suatu data kedalam program dan
bagaimana mengeluarkan hasil dari program tersebut.</p>
</div>
<div class="paragraph">
<p>Meskipun pengertian i/o secara lebih luas lebih dari hal tersebut, namun disini
kita akan menggunakan terbatas pada input dan output di terminal.</p>
</div>
<div class="sect1">
<h2 id="input"><a class="anchor" href="#input"></a>Input</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Input di Java dapat menggunakan 2 cara (yang umum digunakan).</p>
</div>
<div class="sect2">
<h3 id="dengan-menggunakan-scanner"><a class="anchor" href="#dengan-menggunakan-scanner"></a>Dengan menggunakan Scanner</h3>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
        <span class="nc">Scanner</span> <span class="n">scan</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">scan</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="dengan-menggunakan-bufferreader"><a class="anchor" href="#dengan-menggunakan-bufferreader"></a>Dengan menggunakan BufferReader</h3>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.StreamReader</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Main</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
        <span class="nc">BufferedReader</span> <span class="n">r</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">StreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">b</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="output"><a class="anchor" href="#output"></a>Output</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Output di Java dapat menggunakan 2 cara (yang umum digunakan).</p>
</div>
<div class="sect2">
<h3 id="system-out-print"><a class="anchor" href="#system-out-print"></a>System.out.print()</h3>
<div class="paragraph">
<p>Fungsi print() meskipun kita menuliskan kodenya dua baris namun hasil atau
outputnya tidak menjadi dua baris, solusinya kita bisa menggunakan fungsi yang
kedua yaitu println() dimana dengan fungsi tersebut dapat menambahkan baris baru
pada outputnya.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Main</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello world"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"Hello world"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="system-out-printf"><a class="anchor" href="#system-out-printf"></a>System.out.printf</h3>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Main</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
        <span class="nc">String</span> <span class="n">data</span> <span class="o">=</span> <span class="s">"Hello world"</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s"</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Struktur Dasar</title><link href="https://deo.or.id/2021/pp-struktur-dasar.html" rel="alternate" type="text/html" title="Struktur Dasar" /><published>2021-05-13T00:00:00+08:00</published><updated>2021-05-13T00:00:00+08:00</updated><id>https://deo.or.id/2021/pp-struktur-dasar</id><content type="html" xml:base="https://deo.or.id/2021/pp-struktur-dasar.html"><![CDATA[<div class="paragraph">
<p>Java adalah bahasa pemrograman level tinggi, robust (mempunyai Garbage Collector
dan Exception Handling), object-oriented dan secure/stable tetapi tidak pure
object-oriented language karena masih mendukung primitive data types seperti
int, char, dll.</p>
</div>
<div class="paragraph">
<p>Sintaks Java mirip dengan C/C++, tetapi Java tidak mensupport low-level
programming seperti pointer (sebenarnya Java punya pointer. Semua turunan object
adalah pointer. Akan tetapi, anda bisa jadi programmer Java profesional tanpa
perlu tahu fakta ini<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1</a>]</sup>).
Kode Java selalu ditulis didalam sebuah class dan objek.</p>
</div>
<div class="sect1">
<h2 id="struktur-program"><a class="anchor" href="#struktur-program"></a>Struktur program</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Struktur dasar sebuah bahasa pemrograman Java adalah sebagai berikut:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello world!"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p><code>class Main</code> Adalah class utama, nama <code>Main</code> harus sesuai dengan nama file.
Aturan penulisannya adalah dengan menggunakan huruf kapital di huruf pertama.
Misalnya: <code>Main</code>, <code>Utama</code>, dsb-nya.</p>
</div>
<div class="paragraph">
<p><code>public static void main(String args[])</code> adalah kode utama yang akan dijalankan
ketika kita menjalankan sebuah program Java.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="aturan-penamaan"><a class="anchor" href="#aturan-penamaan"></a>Aturan Penamaan</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Dalam penulisan nama variabel perlu diperhatikan terdapat beberapa aturan khusus
dalam Java yang harus dipatuhi seperti:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>tidak boleh diawali dengan angka,</p>
</li>
<li>
<p>tidak boleh disertai symbol khusus seperti <code>@</code>,<code>!</code>,<code>*</code>,<code>#</code>,</p>
</li>
<li>
<p>tidak boleh menggunakan reserved word sebagai nama variable,</p>
</li>
<li>
<p>boleh diawali dengan underscore atau symbol <code>$</code>, dan</p>
</li>
<li>
<p>nama variable tidak boleh mengandung spasi.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Menurut <em>Convention over configuration Java</em>, penulisan nama variable
menggunakan lowerCamel case (misalnya <code>namaVariabel</code>), dan penulisan nama class
menggunakan UpperCamel case (misalnya <code>Main`</code>).</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="menjalankan-program"><a class="anchor" href="#menjalankan-program"></a>Menjalankan program</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Java adalah bahasa yang dicompile terlebih dahulu sebelum dirun.</p>
</div>
<div class="paragraph">
<p>Untuk meng-compile java:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">javac NamaFile.java</code></pre>
</div>
</div>
<div class="paragraph">
<p>dan kemudian akan menghasilkan sebuah file dengan nama <code>NamaFile.class</code>.
File inilah yang kemudian dijalankan dengan menggunakan perintah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">java NamaFile</code></pre>
</div>
</div>
<div class="paragraph">
<p>perhatikan, untuk menjalankan, tidak perlu menggunakan <code>NamaFile.class</code>, cukup
dengan menggunakan <code>NamaFile</code> saja.</p>
</div>
<div class="paragraph">
<p>Dengan update dari Java 11, maka sebuah program Java dapat dijalankan tanpa
perlu mengcompilenya terlebih dahulu<sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnotedef_2" title="View footnote.">2</a>]</sup>.</p>
</div>
<div class="paragraph">
<p>Misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello world!"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>dapat langsung dijalankan dengan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">java NamaFile.java</code></pre>
</div>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnotedef_1">
<a href="#_footnoteref_1">1</a>. Dari blog <a href="https://jekjektuanakal.my.id/post/peta-jalan-pejuang-cpp-2/" class="bare">https://jekjektuanakal.my.id/post/peta-jalan-pejuang-cpp-2/</a>
</div>
<div class="footnote" id="_footnotedef_2">
<a href="#_footnoteref_2">2</a>. <a href="https://openjdk.java.net/jeps/330" class="bare">https://openjdk.java.net/jeps/330</a>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pp" /></entry><entry><title type="html">Landasan Matematika Kriptografi</title><link href="https://deo.or.id/2020/math-kriptografi.html" rel="alternate" type="text/html" title="Landasan Matematika Kriptografi" /><published>2020-07-23T00:00:00+08:00</published><updated>2020-07-23T00:00:00+08:00</updated><id>https://deo.or.id/2020/math-kriptografi</id><content type="html" xml:base="https://deo.or.id/2020/math-kriptografi.html"><![CDATA[<div class="sect1">
<h2 id="set-dan-fungsi"><a class="anchor" href="#set-dan-fungsi"></a>Set dan Fungsi</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Set bilangan real = $\mathbb{R}$,</p>
</li>
<li>
<p>Set bilangan bulat = $\mathbb{Z}$,</p>
</li>
<li>
<p>Set bilangan rasional = $\mathbb{Q}$,</p>
</li>
<li>
<p>Set bilangan asli = $\mathbb{N}$, $\mathbb{Z}^+$ atau $\mathbb{Z}_{&gt;0}$,</p>
</li>
<li>
<p>Set kosong = $\emptyset$ atau ${}$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p><strong>Kardinalitas</strong> adalah banyaknya anggota dari suatu set dengan notasi $\|S\|$.</p>
</div>
<div class="paragraph">
<p>Himpunan matrix $m \times n$ dengan entry bilangan real, diberi notasi
$M^{m,n}(\mathbb{R})$.</p>
</div>
<div class="sect2">
<h3 id="hasil-kali-kartesius"><a class="anchor" href="#hasil-kali-kartesius"></a>Hasil Kali Kartesius</h3>
<div class="paragraph">
<p>Hasil kali dua himpunan tak kosong $ A $ dan $ B $ didefinisikan:</p>
</div>
<div class="paragraph">
<p>$$A \times B = \{(a, b) \|a \in A, b \in B\}$</p>
</div>
<div class="paragraph">
<p>dengan $\|A \times B\| = \|A\|\times \|B\|$.</p>
</div>
</div>
<div class="sect2">
<h3 id="relasi-ekuvalensi"><a class="anchor" href="#relasi-ekuvalensi"></a>Relasi Ekuvalensi</h3>
<div class="paragraph">
<p>Misalnya terdapat himpunan tak kosong $A $, suatu subhimpunan $ R \subset A^2$
disebut relasi ekivalen pada $A$ jika memenuhi:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>$\forall a \in A \Rightarrow (a, a) \in R$</p>
</li>
<li>
<p>$\forall a_1, a_2 \in A: (a_1, a_2) \in R \Leftrightarrow (a_2, a_1) \in R$</p>
</li>
<li>
<p>$\forall a_1,a_2,a_3 \in A:a_1,a_2) \wedge (a_2,a_3 \Rightarrow (a_1,a_3)$</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Relasi ekivalensi sering diberi lambang $\sim$, sehingga $(a, b) \in R$ sering
ditulis $aRb$ atau $a \sim b$.</p>
</div>
<div class="paragraph">
<p>Contohnya:</p>
</div>
<div class="paragraph">
<p>$ \sim \subseteq \mathbb{Z}^2 $ dengan aturan $ (a, b) \in \sim \Leftrightarrow
\exists k \in \mathbb{Z} : a - b = 4k $</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>fyi: $\mathbb{Z}^2$ is standard notation for the Cartesian square of the
Integers; the set of all pairs of integers.</p>
</div>
<div class="paragraph">
<p>$\mathbb{Z}^2 = { (x,y): x \in \mathbb{Z}, y \in \mathbb{Z} }$</p>
</div>
<div class="paragraph">
<p>source: <a href="https://math.stackexchange.com/questions/2187233/what-means-a-set-in-z2" class="bare">https://math.stackexchange.com/questions/2187233/what-means-a-set-in-z2</a></p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Karena $5 \sim 17$ dan $17 \sim -3$, maka $5 \sim -3$ (transitif),
$17 \sim 5 $ dan $ -3 \sim 17$ (sifat simetri).</p>
</div>
<div class="paragraph">
<p><strong>Teorema</strong></p>
</div>
<div class="paragraph">
<p>Jika $A$ adalah himpunan tidak kosong dan $\sim \subseteq A^{2}$ adalah sebuah
relasi ekuivalen pada $A$, maka terdapat bilangan asli $n$ dan sub-subhimpunan
$A_1, A_2, A_3, \cdots,A_n$ yang memenuhi sifat:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Sifat saling lepas,
$\forall i, j \in \{ 1, 2, \cdots, n \}: A_i \cap A_j = \emptyset$,</p>
</li>
<li>
<p>Sifat partisi lengkap, $A_1 \cup A_2 \cup \cdots \cup A_n = A$</p>
</li>
</ol>
</div>
</div>
<div class="sect2">
<h3 id="modulo"><a class="anchor" href="#modulo"></a>Modulo</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$a^n \bmod b = a^k \cdot a^l \bmod b$, dimana $k+l=m$.</p>
</li>
</ol>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="aljabar-abstrak"><a class="anchor" href="#aljabar-abstrak"></a>Aljabar Abstrak</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Aljabar abstrak digunakan untuk mempelajari struktur aljabar dan sifatnya.</p>
</div>
<div class="sect2">
<h3 id="grup"><a class="anchor" href="#grup"></a>Grup</h3>
<div class="paragraph">
<p>Grup $(G, \ast)$ merupakan himpunan $G$ dengan operasi biner $\ast$ pada $G$
yang memenuhi:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>$\forall a, b \in G, a \ast b \in G$,</p>
</li>
<li>
<p>$\exists a, b, c \in G, (a \ast b) \ast c = a \ast (b \ast c)$,</p>
</li>
<li>
<p>$\exists e \ni \forall a \in G \to e \ast a = a \ast e = a$,</p>
</li>
<li>
<p>$\forall a \in G, \exists a' \in G \ni a \ast a' = a' \ast a = e$,</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Misalnya $(\mathbb{Z}, +)$, $(\mathbb{R}, +)$, $(\mathbb{Z}_2, \oplus)$,
$(\mathbb{Z}_3, \oplus)$, $(\mathbb{Z}_n, \oplus)$, $(\mathbb{Z}_p, \oplus)$,
$(\mathbb{Z}_p^\ast, \otimes)$.</p>
</div>
<div class="paragraph">
<p>Grup dikatakan <em>grup abelian</em> jika memenuhi sifat komutatif,
$\exists a, b \in G, a \ast b = b \ast a$.</p>
</div>
<div class="paragraph">
<p>Misalnya $(\mathbb{G}, +)$, $(\mathbb{Z}\_2, \oplus)$, $(\mathbb{Z}_3, \oplus)$.</p>
</div>
</div>
<div class="sect2">
<h3 id="ring"><a class="anchor" href="#ring"></a>Ring</h3>
<div class="paragraph">
<p>Ring $(R, +, \times)$ merupakan himpunan $R$, dengan operasi biner $ + $ dan
$\times$ yang memenuhi:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>$\exists e = 0$ untuk $(R, +)$ yang merupakan grup abelian,</p>
</li>
<li>
<p>$\exists a, b, c \in R, a \times (b \times c) = (a \times b) \times c,$,</p>
</li>
<li>
<p>$\exists e = 1, 1 \ne 0$ untuk
$(R, \times) \ni 1 \times a = a, \times 1 = a \forall a \in R$,</p>
</li>
<li>
<p>operasi $\times$ distributif pada penjumlahan:</p>
<div class="ulist">
<ul>
<li>
<p>$a \times (b + c) = (a \times b ) + (a \times c)$,</p>
</li>
<li>
<p>$(b + c) \times a = (b \times a ) + (c \times a)$.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div class="paragraph">
<p>Contohnya $(\mathbb{Z}, +, \times)$.</p>
</div>
<div class="paragraph">
<p>Ring dikatakan <em>commutative ring</em> jika
$\exists a, b \in R, a \times b = b \times a$.</p>
</div>
</div>
<div class="sect2">
<h3 id="field"><a class="anchor" href="#field"></a>Field</h3>
<div class="paragraph">
<p>Field F adalah sebuah commutative ring dimana
$\forall a \ne 0 \in F, \exists a^{-1} \in F \ni a \times a^{-1} = 1$.</p>
</div>
<div class="paragraph">
<p>Misalnya $(\mathbb{Q}, \times, +)$, $(\mathbb{R}, \times, +)$.</p>
</div>
<div class="paragraph">
<p>Field dikatakan <em>finite field</em> jika himpunannya terhingga (orde n, dinotasikan
$F_n$). Sebaliknya, elemen tidak terbatas adalah <em>infinity field</em>.</p>
</div>
<div class="paragraph">
<p>Jumlah elemen dalam finite field disebut orde, jika orde $n$, dinotasikan $F_n$.
Misalnya $F_2$ memiliki elemen $0, 1$. Finite field digunakan dalam kriptografi,
karena berada dalam himpunan berhingga.</p>
</div>
<div class="paragraph">
<p>Infinity field misalnya $(\mathbb{R}, +, \times)$ membentuk infinity field yang
tidak memiliki aplikasi dalam kriptografi.</p>
</div>
</div>
<div class="sect2">
<h3 id="galois-field"><a class="anchor" href="#galois-field"></a>Galois Field</h3>
<div class="paragraph">
<p>GF adalah finite field dengan $p^{n}$ elemen, $p \in P, n \geq 1$.</p>
</div>
<div class="paragraph">
<p>Dinotasikan dengan: $$GF(p^{2})$</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$GF(p)$</p>
<div class="paragraph">
<p>Bila $n=1$, maka $GF(p) = F_{p}$ dan elemennya $Z_{p} = \{0, 1, 2, &#8230;&#8203; , p-1\}$,
operasi penjumlahan dan perkalian dilakukan dalam $\bmod \space p$.</p>
</div>
</li>
<li>
<p>$GF(p^{n})$</p>
<div class="paragraph">
<p>Operasi penjumlahan dan perkalian dilakukan dalam polinom derajat $n$ (bentuk
$f(x)$).</p>
</div>
</li>
</ol>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="reference"><a class="anchor" href="#reference"></a>Reference</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Munir. R. "Kriptografi Edisi Kedua". Informatika: Bandung. 2019.</p>
</li>
</ol>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /><summary type="html"><![CDATA[Set dan Fungsi]]></summary></entry><entry><title type="html">Link Twitter Saya</title><link href="https://deo.or.id/twitter" rel="alternate" type="text/html" title="Link Twitter Saya" /><published>2020-05-14T00:00:00+08:00</published><updated>2020-05-14T00:00:00+08:00</updated><id>https://deo.or.id/twt</id><content type="html" xml:base="https://deo.or.id/twitter"><![CDATA[]]></content><author><name>Deo Valiandro. M</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">ELGamal</title><link href="https://deo.or.id/2019/elgamal.html" rel="alternate" type="text/html" title="ELGamal" /><published>2019-11-20T00:00:00+08:00</published><updated>2019-11-20T00:00:00+08:00</updated><id>https://deo.or.id/2019/elgamal</id><content type="html" xml:base="https://deo.or.id/2019/elgamal.html"><![CDATA[<div class="paragraph">
<p>ElGamal dibuat oleh Taher Elgamal pada tahun 1985. Keamanan ElGamal terletak
pada persoalan logaritma diskrit, yaitu $p \in \mathbb{P}, \{g, y\} \in
\mathbb{Z}, \exists x | g^{x} \equiv y (\bmod p)$. Menemukan nilai $x$ akan
sangat susah.</p>
</div>
<div class="sect1">
<h2 id="variabel"><a class="anchor" href="#variabel"></a>Variabel</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$p \in \mathbb{P}$ (tidak rahasia),</p>
</li>
<li>
<p>$g \in \mathbb{Z}$, $g$ adalah akar primitif dari $p$ (tidak rahasia),</p>
</li>
<li>
<p>$x$, bilangan acak (rahasia),</p>
</li>
<li>
<p>$y = g^x \bmod p$ (tidak rahasia, kunci publik),</p>
</li>
<li>
<p>$m$, plaintext (rahasia),</p>
</li>
<li>
<p>$a, b$, ciphertext (tidak rahasia).</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="fungsi-enkripsi-dan-dekripsi"><a class="anchor" href="#fungsi-enkripsi-dan-dekripsi"></a>Fungsi Enkripsi dan Dekripsi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Fungsi enkripsi dinyatakan dengan:</p>
</div>
<div class="paragraph">
<p>$$a = g^x \bmod p$</p>
</div>
<div class="paragraph">
<p>$$b = y^k m \bmod p$</p>
</div>
<div class="paragraph">
<p>Pasangan $a, b$ adalah ciphertext yang berukuran $2 \times m$.</p>
</div>
<div class="paragraph">
<p>Fungsi dekripsi dinyatakan dengan:</p>
</div>
<div class="paragraph">
<p>$$\begin{aligned}
m &amp; = (b/a^{x}) \bmod p\\
  &amp; = b(a^{x} )^{-1} \bmod p
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Dengan: $(a^{x} )^{-1} = a^{p-1-x} \bmod p$ (invers modulo).</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="skenario"><a class="anchor" href="#skenario"></a>Skenario</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Bagian ini menjelaskan skenario bagaimana kriptografi kunci publik bekerja.
Kita akan menggunakan partisipan klasik Alice dan Bob sebagai dua pihak  yang
melakukan pertukaran informasi.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Alice dan Bob setuju untuk menggunakan public-key cryptosystem.</p>
</li>
<li>
<p>Bob mengirimkan public key-nya kepada Alice.</p>
</li>
<li>
<p>Alice meng-encrypt pesan yang dibuatkan dengan menggunakan public key milik
Bob dan mengirimkan pesan yang sudah di-encrypt kepada Bob.</p>
</li>
<li>
<p>Bob men-decrypt pesan dari Alice menggunakan private key miliknya.</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="pembangkitan-kunci"><a class="anchor" href="#pembangkitan-kunci"></a>Pembangkitan Kunci</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Alice dan Bob menyepakati $p \in \mathbb{P}, a \in \mathbb{Z}$, kemudian:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Alice memilih $x, x &lt; x &lt; p-1$ (acak),</p>
</li>
<li>
<p>Alice menghitung $y = g^x \bmod p$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Mengasilkan kunci publik: $(y, g, p)$ dan kunci private $(x)$.</p>
</div>
<div class="paragraph">
<p>Misalhnya:</p>
</div>
<div class="paragraph">
<p>$p = 2273$, $g = 3, x = 243$, Alice kemudian menghitung:</p>
</div>
<div class="paragraph">
<p>$y = g^x \bmod p = 3^{243} \bmod 2273 = 461$</p>
</div>
<div class="paragraph">
<p>Menghasilkan kunci publik $(461, 3, 2273)$ dan kunci privat $(243)$.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="contoh"><a class="anchor" href="#contoh"></a>Contoh</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Pesan $m, 0 &gt; m &lt; p-1$, dapat dibagi kedalam blok $m_1, m_2, \cdots$, sehingga
$m &lt; p-1$.</p>
</div>
<div class="paragraph">
<p>Misalnya $m = 07001114$, $m_1 = 0700, m_2 = 1114, \forall m_i &lt; 2273 - 1$.</p>
</div>
<div class="sect2">
<h3 id="enkripsi-pesan"><a class="anchor" href="#enkripsi-pesan"></a>Enkripsi Pesan</h3>
<div class="paragraph">
<p>Untuk enkripsi blok $m_1$, dipilih $k = 1463 \in [0, 2273-1]$.</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
m_1 &amp; = 0700 \\
a   &amp; = g^k \bmod p \\
    &amp; = 3^{1463} \bmod 2273 \\
    &amp; = 1439 \\
b   &amp; = y^k m_1 \bmod p \\
    &amp; = 461^{1463} \cdot 700 \bmod 2273 \\
    &amp; = 74
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Cihpertext untuk $c_1 = (1439, 74)$.</p>
</div>
<div class="paragraph">
<p>Untuk enkripsi blok $m_2$, dipilih $k = 2001 \in [0, 2273-1]$.</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
m_1 &amp; = 1114 \\
a   &amp; = g^k \bmod p \\
    &amp; = 3^{20001} \bmod 2273 \\
    &amp; = 1220 \\
b   &amp; = y^k m_1 \bmod p \\
    &amp; = 461^{20001} \cdot 1114 \bmod 2273 \\
    &amp; = 1682
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Cihpertext untuk $c_1 = (1220, 1682)$.</p>
</div>
</div>
<div class="sect2">
<h3 id="dekripsi-pesan"><a class="anchor" href="#dekripsi-pesan"></a>Dekripsi Pesan</h3>
<div class="paragraph">
<p>Untuk mendekripsi blok $c_1$,</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
c_1 &amp; = (1439, 74) \\
(a^{x} )^{-1} &amp; = a^{p-1-x} \bmod p \\
    &amp; = 1439^{2029} \bmod 2273 \\
    &amp; = 1791 \\
m_1 &amp; = b/a^{x} \bmod p \\
    &amp; = b(a^{x} )^{-1} \bmod p \\
    &amp; = 74 \cdot 1791 \bmod 2273 \\
    &amp; = 700 \\
    &amp; = 0700
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Untuk mendekripsi blok $c_2$,</p>
</div>
<div class="paragraph">
<p>$\begin{aligned}
c_2 &amp; = (1220, 1682) \\
(a^{x} )^{-1} &amp; = a^{p-1-x} \bmod p \\
    &amp; = 1220^{2029} \bmod 2273 \\
    &amp; = 1125 \\
m_2 &amp; = b/a^{x} \bmod p \\
    &amp; = b(a^{x} )^{-1} \bmod p \\
    &amp; = 1682 \cdot 1125 \bmod 2273 \\
    &amp; = 1114
\end{aligned}$</p>
</div>
<div class="paragraph">
<p>Pesan berhasil di dekripsi kemabali, yaitu $07001114$.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="penutup"><a class="anchor" href="#penutup"></a>Penutup</h2>
<div class="sectionbody">
<div class="paragraph">
<p>ElGamal pada awalnya diciptakan untuk <em>digital signature</em> yang kemudian
dimodifikasi untuk digunakan untuk enkripsi dan dekripsi. Kekuatan ElGamal
terletak pada sukarnya menghitung logaritma diskrit.</p>
</div>
<div class="paragraph">
<p>ElGamal seperti algoritma asimetrik lainnya, digunakan untuk enkripsi dan
dekripsi kunci algoritma simetrik.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="reference"><a class="anchor" href="#reference"></a>Reference</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>ElGamal. T. "A Public-Key Cryptosystem and a Signature Scheme Based on
Discrete Logarithms". IEEE Transactions on Information Theory. 1985</p>
</li>
<li>
<p>Munir. R. "Kriptografi Edisi Kedua". Informatika: Bandung. 2019.</p>
</li>
<li>
<p>Schneier, B. Applied Cryptography, 2nd Ed. John Wiley &amp; Sons, Inc:
Canada, 1996.</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="lampiran"><a class="anchor" href="#lampiran"></a>Lampiran</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Penggunaan:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="bash">python elgamal.py</code></pre>
</div>
</div>
<div class="paragraph">
<p>Code:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="k">def</span> <span class="nf">is_relative_prime</span><span class="p">(</span><span class="n">prime</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
    <span class="k">while</span> <span class="n">data</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">prime</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">,</span> <span class="n">prime</span> <span class="o">%</span> <span class="n">data</span>
    <span class="k">return</span> <span class="n">prime</span>

<span class="k">def</span> <span class="nf">is_primitive_root</span><span class="p">(</span><span class="n">prime</span><span class="p">,</span> <span class="n">root</span><span class="p">):</span>
    <span class="n">primitive_root</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">prime</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
        <span class="n">primitive_root</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">pow</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">prime</span><span class="p">)</span>

    <span class="c1"># Untuk memastikan tidak terjadi pembandingan primitive_root pada indeks j
</span>    <span class="c1"># dan i yang sama
</span>    <span class="n">kampret</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="c1"># Membandingkan apakah tidak ada data yang sama
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">primitive_root</span><span class="p">)):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">kampret</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">primitive_root</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">primitive_root</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">primitive_root</span><span class="p">[</span><span class="n">j</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">"Not primitive root"</span><span class="p">)</span>
                <span class="k">return</span> <span class="mi">0</span>

        <span class="k">if</span> <span class="n">is_relative_prime</span><span class="p">(</span><span class="n">prime</span><span class="p">,</span> <span class="n">primitive_root</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"Not relative prime"</span><span class="p">)</span>
            <span class="k">return</span> <span class="mi">0</span>
        <span class="n">kampret</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="mi">1</span>


<span class="k">def</span> <span class="nf">key_builder</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Input prime number, root and secret key (x)"</span><span class="p">)</span>
    <span class="n">prime</span><span class="p">,</span> <span class="n">root</span><span class="p">,</span> <span class="n">secret_key</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">(</span><span class="s">" "</span><span class="p">)]</span>

    <span class="c1"># root number must be primitive root from prime
</span>    <span class="k">if</span> <span class="n">is_primitive_root</span><span class="p">(</span><span class="n">prime</span><span class="p">,</span> <span class="n">root</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">y</span> <span class="o">=</span> <span class="nb">pow</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">secret_key</span><span class="p">)</span> <span class="o">%</span> <span class="n">prime</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Public Key (%d, %d, %d)"</span> <span class="o">%</span> <span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">root</span><span class="p">,</span> <span class="n">prime</span><span class="p">))</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Private key %d"</span> <span class="o">%</span> <span class="n">secret_key</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">encryption</span><span class="p">():</span>
    <span class="c1"># message is one character, string will be add later
</span>    <span class="k">print</span><span class="p">(</span><span class="s">"Input message"</span><span class="p">)</span>
    <span class="n">message</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>

    <span class="k">print</span><span class="p">(</span><span class="s">"Input y, g and p (public key)"</span><span class="p">)</span>
    <span class="n">y</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">p</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">(</span><span class="s">" "</span><span class="p">)]</span>

    <span class="c1"># k is random number from 1 &lt;= k &lt;= p-1
</span>    <span class="k">print</span><span class="p">(</span><span class="s">"Input k"</span><span class="p">)</span>
    <span class="n">k</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

    <span class="c1"># the ciphertext will be a pair of a and b
</span>    <span class="n">a</span> <span class="o">=</span> <span class="nb">pow</span><span class="p">(</span><span class="n">g</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">%</span> <span class="n">p</span>
    <span class="n">b</span> <span class="o">=</span> <span class="p">(</span><span class="nb">pow</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="o">*</span> <span class="nb">ord</span><span class="p">(</span><span class="n">message</span><span class="p">))</span> <span class="o">%</span> <span class="n">p</span>

    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Ciphertext (%d, %d)"</span> <span class="o">%</span> <span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">))</span>


<span class="k">def</span> <span class="nf">decryption</span><span class="p">():</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">p</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">(</span><span class="s">" "</span><span class="p">)]</span>
    <span class="n">m</span> <span class="o">=</span> <span class="nb">pow</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="p">(</span><span class="n">p</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="n">x</span><span class="p">))</span> <span class="o">*</span> <span class="n">b</span> <span class="o">%</span> <span class="n">p</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Message %c"</span> <span class="o">%</span> <span class="n">m</span><span class="p">)</span>

<span class="n">key_builder</span><span class="p">()</span>
<span class="n">encryption</span><span class="p">()</span>
<span class="n">decryption</span><span class="p">()</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /><summary type="html"><![CDATA[ElGamal dibuat oleh Taher Elgamal pada tahun 1985. Keamanan ElGamal terletak pada persoalan logaritma diskrit, yaitu $p \in \mathbb{P}, \{g, y\} \in \mathbb{Z}, \exists x | g^{x} \equiv y (\bmod p)$. Menemukan nilai $x$ akan sangat susah.]]></summary></entry><entry><title type="html">RSA</title><link href="https://deo.or.id/2019/rsa.html" rel="alternate" type="text/html" title="RSA" /><published>2019-11-11T00:00:00+08:00</published><updated>2019-11-11T00:00:00+08:00</updated><id>https://deo.or.id/2019/rsa</id><content type="html" xml:base="https://deo.or.id/2019/rsa.html"><![CDATA[<div class="paragraph">
<p>RSA adalah sebuah algoritma berdasarkan skema public-key cryptography. Diberi
nama RSA sebagai inisial para penemunya:
<a href="https://people.csail.mit.edu/rivest">Ron Rivest</a>, Adi Shamir, dan Leonard
Adleman. RSA dibuat di MIT pada tahun 1977 dan dipatenkan oleh MIT pada tahun
1983. Setelah bulan September tahun 2000, paten tersebut berakhir, sehingga saat
ini semua orang dapat menggunakannya dengan bebas.</p>
</div>
<div class="paragraph">
<p>RSA adalah algoritma yang mudah untuk diimplementasikan dan dimengerti.
Algoritma RSA adalah sebuah aplikasi dari sekian banyak teori seperti
<a href="https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm">Extended Euclid algorithm</a>,
<a href="https://en.wikipedia.org/wiki/Euler%27s_totient_function">Euler&#8217;s function</a>
sampai <a href="https://en.wikipedia.org/wiki/Fermat%27s_theorem">Fermat theorem</a>.</p>
</div>
<div class="sect1">
<h2 id="kriptografi-kunci-publik"><a class="anchor" href="#kriptografi-kunci-publik"></a>Kriptografi Kunci Publik</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Konsep fundamental dari kriptografi kunci publik atau asymmetric cryptography
ditemukan oleh Whitfield Diffie dan
<a href="https://ee.stanford.edu/~hellman/">Martin Hellman</a>, dan secara terpisah oleh
Ralph Merkle.</p>
</div>
<div class="paragraph">
<p>Konsep dasar public-key cryptography terletak pada pemahaman bahwa kunci/key
selalu berpasangan: encryption key dan decryption key. Juga perlu diingat bahwa
sebuah key tidak dapat digenerate dari key lainnya. Pemahaman encryption dan
decryption key sering disebut sebagai public dan private key. Seseorang harus
memberikan public key-nya agar pihak lain dapat meng-encrypt sebuah pesan.
Decryption hanya terjadi jika seseorang mempunyai private key.</p>
</div>
<div class="paragraph">
<p>Penggunaan algoritma ini harus memenuhi kriteria berikut.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Memungkinkan untuk mencari nilai $e$, $d$, $n$ sedemikian rupa
sehingga $M^e$ atau $M^d \bmod n = M, \forall M &lt; n$.</p>
</li>
<li>
<p>Relatif mudah untuk menghitung nilai $M^e \bmod n$ dan $C^d \bmod n
\forall M &lt; n$.</p>
</li>
<li>
<p>Tidak memungkinkan mencari nilai $d$ jika diberikan nilai $n$ dan
$e$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Syarat nilai $e$ dan $d$ ini adalah $gcd(d,e)=1$ (relatif prima).</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="variabel"><a class="anchor" href="#variabel"></a>Variabel</h2>
<div class="sectionbody">
<div class="paragraph">
<p>RSA membutuhkan beberapa variabel:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>$p$ dan $q$, 2 bilangan prima yang dirahasiakan,</p>
</li>
<li>
<p>$n$, dari hasil $p \cdot q$,</p>
</li>
<li>
<p>kunci publik $e$, dengan ketentuan $gcd (\phi(n), e) = 1$,</p>
</li>
<li>
<p>kunci privat $d = e^{-1} (\bmod \phi(n))$.</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="skenario"><a class="anchor" href="#skenario"></a>Skenario</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Bagian ini menjelaskan skenario bagaimana kriptografi kunci publik bekerja.
Kita akan menggunakan partisipan klasik Alice dan Bob sebagai dua pihak  yang
melakukan pertukaran informasi.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Alice dan Bob setuju untuk menggunakan public-key cryptosystem.</p>
</li>
<li>
<p>Bob mengirimkan public key-nya kepada Alice.</p>
</li>
<li>
<p>Alice meng-encrypt pesan yang dibuatkan dengan menggunakan public key milik
Bob dan mengirimkan pesan yang sudah di-encrypt kepada Bob.</p>
</li>
<li>
<p>Bob men-decrypt pesan dari Alice menggunakan private key miliknya.</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="fungsi-enkripsi-dan-dekripsi"><a class="anchor" href="#fungsi-enkripsi-dan-dekripsi"></a>Fungsi Enkripsi dan Dekripsi</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Fungsi enkripsi yaitu :</p>
</div>
<div class="paragraph">
<p>$$c = m^e \bmod n$</p>
</div>
<div class="paragraph">
<p>Fungsi dekripsi yaitu:</p>
</div>
<div class="paragraph">
<p>$$m = c^d \bmod n$</p>
</div>
<div class="paragraph">
<p>dimana:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>$c$ = Cipherteks</p>
</li>
<li>
<p>$m$ = Message/plainteks</p>
</li>
<li>
<p>$e$ = kunci publik</p>
</li>
<li>
<p>$d$ = kunci privat</p>
</li>
<li>
<p>$n$ = modulo pembagi (akan dijelaskan lebih lanjut)</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="pembangkitan-kunci"><a class="anchor" href="#pembangkitan-kunci"></a>Pembangkitan Kunci</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Misalkan Alice ingin Bob mengirimnya sebuah pesan melalui jalur yang aman.
Alice akan memberikan public keynya kepada Bob dan menyimpan private key
untuk dirinya.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Pilih 2 bilangan prima, misalnya $p = 17$ dan $q = 11$.</p>
</li>
<li>
<p>Hitung $n = p \cdot q = 17 \times 11 = 187$.</p>
</li>
<li>
<p>Hitung $ \phi(n) = (p - 1)(q - 1) = 16 \times 10 = 160$.</p>
</li>
<li>
<p>Pilih nilai $e$ sedemikian sehingga relatif prima terhadap $\phi(n) = 160$,
$e &lt; \phi(n)$; misalnya $e = 7$.</p>
</li>
<li>
<p>Hitung $d$ sedemikian sehingga $d \cdot e \equiv 1 (\bmod 160)$ dan
$d &lt; 160$. Nilai yang didapatkan $d = 23$,karena
$23 \times 7 = 161 = (1 \times 160) + 1$; $d$ dapat dihitung dengan
Extended Euclidean Algorithm.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Nah, nilai e dan d inilah yang kita sebut sebagai <em>public key (e)</em> dan <em>private
key (d)</em>.  Pasangan Kunci publiknya = $\{7,187\}$ dan kunci privatnya =
$\{23, 187\}$</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="enkripsi-pesan"><a class="anchor" href="#enkripsi-pesan"></a>Enkripsi Pesan</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Misalkan Bob ingin mengirim sebuah pesan $88$ kepada Alice.</p>
</div>
<div class="paragraph">
<p>Alice harus membuat keynya; sehingga ia memiliki private dan public keys.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="code">private key = (M,d)
public key  = (M,e)</code></pre>
</div>
</div>
<div class="paragraph">
<p>Untuk proses enkripsi, kita akan menghitung</p>
</div>
<div class="paragraph">
<p>$c = 88^7 \bmod 187 = 408 \cdots \bmod 187 = 11$</p>
</div>
<div class="paragraph">
<p>Nah, kita mendapatkan nilai $c = 11$.</p>
</div>
<div class="paragraph">
<p>Untuk melakukannya, kita dapat menggunakan python:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="kn">import</span> <span class="nn">math</span>
<span class="n">c</span> <span class="o">=</span> <span class="nb">pow</span><span class="p">(</span><span class="mi">88</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span> <span class="o">%</span> <span class="mi">187</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Bob mengirimkan bilangan tersebut kepada Alice sehingga Alice dapat melakukan
dekripsi menggunakan private keynya.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="dekripsi-pesan"><a class="anchor" href="#dekripsi-pesan"></a>Dekripsi Pesan</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Misalkan Alice menerima sebuah pesan terencrypt yaitu $11$, ia akan
men-decrypt-nya.</p>
</div>
<div class="paragraph">
<p>$m = 11^{23} \bmod 187 = 895&#8230;&#8203; \bmod 187 = 88$</p>
</div>
<div class="paragraph">
<p>Alice menerima pesan yang telah didekripsi yaitu 88.</p>
</div>
<div class="paragraph">
<p>Untuk melakukannya, kita dapat menggunakan python:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="kn">import</span> <span class="nn">math</span>
<span class="n">c</span> <span class="o">=</span> <span class="nb">pow</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span> <span class="mi">23</span><span class="p">)</span> <span class="o">%</span> <span class="mi">187</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="penutup"><a class="anchor" href="#penutup"></a>Penutup</h2>
<div class="sectionbody">
<div class="paragraph">
<p>RSA merupakan contoh yang powerful dan cukup aman dari
<em>public key cryptography</em>. Berdasarkan matematika, proses yang digunakan
berdasarkan fungsi-fungsi <em>trap-door</em> satu arah. Sehingga melakukan enkripsi
dengan menggunakan public key sangat mudah bagi semua orang, namun proses
dekripsi menjadi sangat sulit.</p>
</div>
<div class="paragraph">
<p>Proses decryption sengaja dibuat sulit agar seseorang, walaupun menggunakan Cray
supercomputers dan ribuan tahun, tidak dapat mendecrypt pesan tanpa mempunyai
private key.</p>
</div>
<div class="paragraph">
<p>Perlu diingat juga bahwa pemilihan $p \cdot q = M$ haruslah sebuah bilangan
yang sangat besar sehingga sulit dicari eksponen decoding-nya karena sulit
melakukan pemfaktoran bilangan prima.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="reference"><a class="anchor" href="#reference"></a>Reference</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Childs, Lindsay N. A Concrete Introduction to Higher Algebra.
Undergraduate Texts in Mathematics. Springer-Verlaag: New York,
2000.</p>
</li>
<li>
<p>Schneier, B. Applied Cryptography, 2nd Ed. John Wiley &amp; Sons, Inc:
Canada, 1996.</p>
</li>
<li>
<p>Rivest R.L., Shamir A., Adleman L. "A Method for Obtaining Digital
Signatures and Public-Key Cryptosystems. MIT: Massachusetts. 1977.</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="lampiran"><a class="anchor" href="#lampiran"></a>Lampiran</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;bits/stdc++.h&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="n">plainteks</span><span class="p">,</span> <span class="n">cipherteks</span><span class="p">;</span>
<span class="kt">long</span> <span class="kt">int</span> <span class="n">p</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">e</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">totient</span><span class="p">,</span> <span class="n">temp</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>

<span class="kt">int</span> <span class="nf">apakahPrime</span><span class="p">(</span><span class="kt">long</span> <span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">long</span> <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    <span class="n">j</span> <span class="o">=</span> <span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>

    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">j</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">%</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">hitung_d</span><span class="p">(</span><span class="kt">long</span> <span class="kt">int</span> <span class="n">e</span><span class="p">,</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">totient</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">long</span> <span class="kt">int</span> <span class="n">k</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">d</span><span class="p">;</span>

    <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
        <span class="n">d</span> <span class="o">=</span> <span class="n">k</span><span class="o">*</span><span class="n">e</span><span class="p">;</span>
        <span class="n">h</span> <span class="o">=</span> <span class="n">d</span><span class="o">%</span><span class="n">totient</span><span class="p">;</span>

        <span class="k">if</span><span class="p">(</span><span class="n">h</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Kunci privat (d) : "</span> <span class="o">&lt;&lt;</span> <span class="n">k</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
            <span class="k">return</span> <span class="n">k</span><span class="p">;</span>
        <span class="p">}</span><span class="k">else</span><span class="p">{</span>
            <span class="n">k</span> <span class="o">=</span> <span class="n">k</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">gcd</span><span class="p">(</span><span class="kt">long</span> <span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">long</span> <span class="kt">int</span> <span class="n">r</span><span class="p">,</span> <span class="n">temp</span><span class="p">;</span>

    <span class="k">if</span><span class="p">(</span><span class="n">a</span> <span class="o">&lt;</span> <span class="n">b</span><span class="p">){</span>
        <span class="n">temp</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>
        <span class="n">a</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>
        <span class="n">b</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">b</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">;</span>
        <span class="n">a</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>
        <span class="n">b</span> <span class="o">=</span> <span class="n">r</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="n">a</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">pembangkitanKunci</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">test</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Kunci  p: "</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">p</span><span class="p">;</span>
    <span class="n">test</span> <span class="o">=</span> <span class="n">apakahPrime</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>

    <span class="k">if</span><span class="p">(</span><span class="n">test</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Not prime"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Kunci  q: "</span><span class="p">;</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">q</span><span class="p">;</span>
    <span class="n">test</span> <span class="o">=</span> <span class="n">apakahPrime</span><span class="p">(</span><span class="n">q</span><span class="p">);</span>

    <span class="k">if</span><span class="p">(</span><span class="n">test</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Not prime"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="n">n</span> <span class="o">=</span> <span class="n">p</span> <span class="o">*</span> <span class="n">q</span><span class="p">;</span>
    <span class="n">totient</span> <span class="o">=</span> <span class="p">(</span><span class="n">p</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">q</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Kunci publik (e): "</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">e</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hasil"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Totient = "</span> <span class="o">&lt;&lt;</span> <span class="n">totient</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">test</span> <span class="o">=</span> <span class="n">gcd</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">totient</span><span class="p">);</span>

    <span class="k">if</span><span class="p">(</span><span class="n">test</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){</span>
        <span class="n">d</span> <span class="o">=</span> <span class="n">hitung_d</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">totient</span><span class="p">);</span>
    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"e tidak relatif prima"</span><span class="p">;</span>
        <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">enkripsi</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">panjang</span><span class="p">;</span>
    <span class="kt">long</span> <span class="kt">int</span> <span class="n">hasil</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Input m: "</span><span class="p">;</span>
    <span class="n">cin</span><span class="p">.</span><span class="n">ignore</span><span class="p">();</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">plainteks</span><span class="p">);</span>
    <span class="n">panjang</span> <span class="o">=</span> <span class="n">plainteks</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
    <span class="n">cipherteks</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">panjang</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">plainteks</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">m</span> <span class="o">-</span> <span class="mi">96</span><span class="p">;</span>
        <span class="n">hasil</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">e</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">hasil</span> <span class="o">=</span> <span class="n">hasil</span> <span class="o">*</span> <span class="n">m</span><span class="p">;</span>
            <span class="n">hasil</span> <span class="o">=</span> <span class="n">hasil</span> <span class="o">%</span> <span class="n">n</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">temp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">hasil</span><span class="p">;</span>
        <span class="n">c</span> <span class="o">=</span> <span class="n">hasil</span> <span class="o">+</span> <span class="mi">96</span><span class="p">;</span>
        <span class="n">cipherteks</span> <span class="o">=</span> <span class="n">cipherteks</span> <span class="o">+</span> <span class="n">c</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Cipherteks: "</span> <span class="o">&lt;&lt;</span> <span class="n">cipherteks</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">dekripsi</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">panjang</span><span class="p">;</span>
    <span class="kt">long</span> <span class="kt">int</span> <span class="n">c</span><span class="p">,</span> <span class="n">hasil</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
    <span class="kt">char</span> <span class="n">m</span><span class="p">;</span>

    <span class="n">panjang</span> <span class="o">=</span> <span class="n">cipherteks</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
    <span class="n">plainteks</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">panjang</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="n">c</span> <span class="o">=</span> <span class="n">temp</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="n">hasil</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">d</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">hasil</span> <span class="o">=</span> <span class="n">hasil</span> <span class="o">*</span> <span class="n">c</span><span class="p">;</span>
            <span class="n">hasil</span> <span class="o">=</span> <span class="n">hasil</span> <span class="o">%</span> <span class="n">n</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">m</span> <span class="o">=</span> <span class="n">hasil</span> <span class="o">+</span> <span class="mi">96</span><span class="p">;</span>
        <span class="n">plainteks</span> <span class="o">=</span> <span class="n">plainteks</span> <span class="o">+</span> <span class="n">m</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Plainteks: "</span> <span class="o">&lt;&lt;</span> <span class="n">plainteks</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="n">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">bool</span> <span class="n">stop</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">pil</span><span class="p">;</span>

    <span class="n">stop</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">stop</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"1. Pembangkitan kunci"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"2. Enkripsi"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"3. Dekripsi"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"4. Exit"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Pilihan: "</span><span class="p">;</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">pil</span><span class="p">;</span>

        <span class="k">switch</span><span class="p">(</span><span class="n">pil</span><span class="p">){</span>
            <span class="k">case</span> <span class="mi">1</span><span class="p">:</span> <span class="n">pembangkitanKunci</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">2</span><span class="p">:</span> <span class="n">enkripsi</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">3</span><span class="p">:</span> <span class="n">dekripsi</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
            <span class="k">case</span> <span class="mi">4</span><span class="p">:</span> <span class="n">stop</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="kriptografi" /><summary type="html"><![CDATA[RSA adalah sebuah algoritma berdasarkan skema public-key cryptography. Diberi nama RSA sebagai inisial para penemunya: Ron Rivest, Adi Shamir, dan Leonard Adleman. RSA dibuat di MIT pada tahun 1977 dan dipatenkan oleh MIT pada tahun 1983. Setelah bulan September tahun 2000, paten tersebut berakhir, sehingga saat ini semua orang dapat menggunakannya dengan bebas.]]></summary></entry><entry><title type="html">Mode Operasi Cipher Blok</title><link href="https://deo.or.id/2019/mode-cipher-blok.html" rel="alternate" type="text/html" title="Mode Operasi Cipher Blok" /><published>2019-11-02T00:00:00+08:00</published><updated>2019-11-02T00:00:00+08:00</updated><id>https://deo.or.id/2019/mode-cipher-blok</id><content type="html" xml:base="https://deo.or.id/2019/mode-cipher-blok.html"><![CDATA[<div class="paragraph">
<p>Beberapa mode cipher block</p>
</div>
<div class="sect1">
<h2 id="electronic-code-book-ecb"><a class="anchor" href="#electronic-code-book-ecb"></a>Electronic Code Book (ECB)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Tiap blok $P_i$ di enkripsi secara individual dan independen dari blok lain
menjadi blok $C_i$. Hal ini memungkinkan enkripsi blok secara acak. Namun
kelemahannya adalah jika terdapat blok yang sama, maka akan menghasilkan
blok cipher yang sama.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="cipher-block-chaining-cbc"><a class="anchor" href="#cipher-block-chaining-cbc"></a>Cipher Block Chaining (CBC)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Blok plaintext $P_i$ di xor dengan $C_i - 1$. Untuk $P_1$, digunakan IV
(initialization vector). Hasil tiap blok akan berbeda walaupun memiliki isi yang
sama. Namun, kesalahan pada satu bit akan membuat ciphertext blok berikutnya.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="cipher-feedback-cfb"><a class="anchor" href="#cipher-feedback-cfb"></a>Cipher Feedback (CFB)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Data di enkripsi dalam unit kecil dari blok, bisa berupa 1-bit, 2-bit, dsb-nya.
CFB mengenkirpsi plaintext sebanyak $p, p \geq n$. CFB membutuhkan queue</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="output-feedback-ofb"><a class="anchor" href="#output-feedback-ofb"></a>Output Feedback (OFB)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Mirip dengan CFB kecuali hasil enkripsi diletakkan di elemen bagian paling kiri.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="counter-mode"><a class="anchor" href="#counter-mode"></a>Counter Mode</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Mirip dengan ECB kecuali penambahan blok counter $Co_i$ yang di enkripsi
kemudian di xor dengan $P_i$. Nilai counter harus berbeda untuk tiap bloknya.</p>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /><summary type="html"><![CDATA[Beberapa mode cipher block]]></summary></entry><entry><title type="html">Data Encryption Standard (DES)</title><link href="https://deo.or.id/2019/des.html" rel="alternate" type="text/html" title="Data Encryption Standard (DES)" /><published>2019-10-24T00:00:00+08:00</published><updated>2019-10-24T00:00:00+08:00</updated><id>https://deo.or.id/2019/des</id><content type="html" xml:base="https://deo.or.id/2019/des.html"><![CDATA[<div class="paragraph">
<p>Algoritma DES dikembangkan di IBM dibawah kepemimpinan W.L. Tuchman pada tahun
1972. Algoritma ini didasarkan pada algoritma Lucifer yang dibuat oleh Horst
Feistel.</p>
</div>
<div class="paragraph">
<p>DES termasuk ke dalam sistem kriptografi simetri dan tergolong jenis cipher
blok.</p>
</div>
<div class="paragraph">
<p>DES beroperasi pada ukuran blok 64 bit. DES mengenkripsikan 64 bit plainteks
menjadi 64 bit cipherteks dengan menggunakan 56 bit kunci internal (internal
key) atau upa-kunci (subkey). Kunci internal dibangkitkan dari kunci eksternal
(external key) yang panjangnya 64 bit.</p>
</div>
<div class="paragraph">
<p>Implementasi dengan menggunakan Python:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="n">ip</span> <span class="o">=</span> <span class="p">[</span><span class="mi">58</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">52</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">36</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span>
      <span class="mi">62</span><span class="p">,</span> <span class="mi">54</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span>
      <span class="mi">57</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span>
      <span class="mi">61</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">63</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">7</span><span class="p">]</span>

<span class="n">ip_inv</span> <span class="o">=</span> <span class="p">[</span><span class="mi">40</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">63</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span>
          <span class="mi">38</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">54</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">62</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span>
          <span class="mi">36</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">52</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span>
          <span class="mi">34</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">57</span><span class="p">,</span> <span class="mi">25</span><span class="p">]</span>

<span class="n">expansion</span> <span class="o">=</span> <span class="p">[</span><span class="mi">32</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span>
             <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span>
             <span class="mi">16</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span>
             <span class="mi">24</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>

<span class="n">permutation_box</span> <span class="o">=</span> <span class="p">[</span><span class="mi">16</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span>
                   <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">25</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">d</span><span class="p">(</span><span class="n">lis</span><span class="p">):</span>
    <span class="k">return</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">lis</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">rotate_left</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">data</span><span class="p">[</span><span class="n">n</span><span class="p">:]</span> <span class="o">+</span> <span class="n">data</span><span class="p">[:</span><span class="n">n</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">str2bin</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
    <span class="n">dummy</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">msg</span><span class="p">)):</span>
        <span class="n">bits</span> <span class="o">=</span> <span class="nb">bin</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="n">i</span><span class="p">]))[</span><span class="mi">2</span><span class="p">:]</span>
        <span class="n">bits</span> <span class="o">=</span> <span class="s">'00000000'</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">bits</span><span class="p">):]</span> <span class="o">+</span> <span class="n">bits</span>
        <span class="n">dummy</span><span class="p">.</span><span class="n">extend</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">bits</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">dummy</span>


<span class="k">def</span> <span class="nf">key_builder</span><span class="p">(</span><span class="n">ext_key</span><span class="p">):</span>
    <span class="n">pc1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">57</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span>
           <span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">52</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">36</span><span class="p">,</span>
           <span class="mi">63</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">62</span><span class="p">,</span> <span class="mi">54</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span>
           <span class="mi">14</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>

    <span class="n">pc2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">14</span><span class="p">,</span> <span class="mi">17</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">24</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">28</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span>
           <span class="mi">23</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span>
           <span class="mi">41</span><span class="p">,</span> <span class="mi">52</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span>
           <span class="mi">44</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">53</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">36</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">32</span><span class="p">]</span>

    <span class="n">key_round</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>

    <span class="n">raw_result</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">final_key</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pc1</span><span class="p">)):</span>
        <span class="n">raw_result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">ext_key</span><span class="p">[</span><span class="n">pc1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>

    <span class="n">left</span> <span class="o">=</span> <span class="n">raw_result</span><span class="p">[:</span><span class="mi">28</span><span class="p">]</span>
    <span class="n">right</span> <span class="o">=</span> <span class="n">raw_result</span><span class="p">[</span><span class="mi">28</span><span class="p">:]</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">key_round</span><span class="p">)):</span>
        <span class="n">left</span> <span class="o">=</span> <span class="n">rotate_left</span><span class="p">(</span><span class="n">left</span><span class="p">,</span> <span class="n">key_round</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
        <span class="n">right</span> <span class="o">=</span> <span class="n">rotate_left</span><span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">key_round</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
        <span class="n">ki</span> <span class="o">=</span> <span class="n">left</span> <span class="o">+</span> <span class="n">right</span>
        <span class="n">aur</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pc2</span><span class="p">)):</span>
            <span class="n">aur</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">ki</span><span class="p">[</span><span class="n">pc2</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>
        <span class="n">final_key</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">aur</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">final_key</span>


<span class="k">def</span> <span class="nf">split_message</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
    <span class="n">msg_split</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">msg</span><span class="p">),</span> <span class="mi">64</span><span class="p">):</span>
        <span class="n">msg_split</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span> <span class="o">+</span> <span class="mi">64</span><span class="p">])</span>

        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">msg_split</span><span class="p">[</span><span class="n">j</span><span class="p">])</span> <span class="o">&lt;</span> <span class="mi">64</span><span class="p">:</span>
            <span class="n">miss</span> <span class="o">=</span> <span class="mi">64</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">msg_split</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
            <span class="n">padding</span> <span class="o">=</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="mi">0</span><span class="p">))</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">miss</span><span class="p">))</span>
            <span class="n">msg_split</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">extend</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">padding</span><span class="p">])</span>
        <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="k">return</span> <span class="n">msg_split</span>


<span class="k">def</span> <span class="nf">permutation_function</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">table</span><span class="p">):</span>
    <span class="n">dummy</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">table</span><span class="p">)):</span>
        <span class="n">dummy</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="n">table</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">dummy</span>


<span class="k">def</span> <span class="nf">xor_with_key</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">key_f</span><span class="p">):</span>
    <span class="n">dummy</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">msg</span><span class="p">)):</span>
        <span class="n">dummy</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^</span> <span class="n">key_f</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">dummy</span>


<span class="k">def</span> <span class="nf">s_box</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
    <span class="n">s1</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">14</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">15</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s2</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">15</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s3</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s4</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s5</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">14</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">11</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s6</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">12</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s7</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s8</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">13</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">7</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="p">],</span>
          <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">14</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="p">],</span> <span class="p">]</span>

    <span class="n">s</span> <span class="o">=</span> <span class="p">[</span><span class="n">s1</span><span class="p">,</span> <span class="n">s2</span><span class="p">,</span> <span class="n">s3</span><span class="p">,</span> <span class="n">s4</span><span class="p">,</span> <span class="n">s5</span><span class="p">,</span> <span class="n">s6</span><span class="p">,</span> <span class="n">s7</span><span class="p">,</span> <span class="n">s8</span><span class="p">]</span>

    <span class="n">b</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">8</span><span class="p">):</span>
        <span class="n">ar</span> <span class="o">=</span> <span class="n">msg</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span> <span class="o">+</span> <span class="mi">6</span><span class="p">]</span>
        <span class="n">index</span> <span class="o">+=</span> <span class="mi">6</span>
        <span class="n">row</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">ar</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">ar</span><span class="p">[</span><span class="mi">5</span><span class="p">]),</span> <span class="mi">2</span><span class="p">)</span>
        <span class="n">column</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">ar</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">5</span><span class="p">]]),</span> <span class="mi">2</span><span class="p">)</span>
        <span class="n">value</span> <span class="o">=</span> <span class="nb">bin</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">row</span><span class="p">][</span><span class="n">column</span><span class="p">])[</span><span class="mi">2</span><span class="p">:]</span>
        <span class="n">value</span> <span class="o">=</span> <span class="s">'0000'</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">):]</span> <span class="o">+</span> <span class="n">value</span>
        <span class="n">b</span><span class="p">.</span><span class="n">extend</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">value</span><span class="p">])</span>

    <span class="k">return</span> <span class="n">b</span>


<span class="k">def</span> <span class="nf">encrypt</span><span class="p">(</span><span class="n">messages</span><span class="p">,</span> <span class="n">internal_key</span><span class="p">):</span>
    <span class="n">messages</span> <span class="o">=</span> <span class="n">split_message</span><span class="p">(</span><span class="n">messages</span><span class="p">)</span>
    <span class="n">cipher</span> <span class="o">=</span> <span class="s">""</span>

    <span class="k">for</span> <span class="n">msg</span> <span class="ow">in</span> <span class="n">messages</span><span class="p">:</span>
        <span class="n">permutation</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">ip</span><span class="p">)</span>
        <span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="n">permutation</span><span class="p">[:</span><span class="mi">32</span><span class="p">],</span> <span class="n">permutation</span><span class="p">[</span><span class="mi">32</span><span class="p">:]</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">16</span><span class="p">):</span>
            <span class="n">expand</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">expansion</span><span class="p">)</span>
            <span class="n">vector_a</span> <span class="o">=</span> <span class="n">xor_with_key</span><span class="p">(</span><span class="n">expand</span><span class="p">,</span> <span class="n">internal_key</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
            <span class="n">vector_b</span> <span class="o">=</span> <span class="n">s_box</span><span class="p">(</span><span class="n">vector_a</span><span class="p">)</span>
            <span class="n">pb</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">vector_b</span><span class="p">,</span> <span class="n">permutation_box</span><span class="p">)</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">right</span>
            <span class="n">right</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pb</span><span class="p">)):</span>
                <span class="n">right</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pb</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">^</span> <span class="n">left</span><span class="p">[</span><span class="n">k</span><span class="p">])</span>
            <span class="n">left</span> <span class="o">=</span> <span class="n">temp</span>

        <span class="n">raw</span> <span class="o">=</span> <span class="n">right</span> <span class="o">+</span> <span class="n">left</span>
        <span class="n">final</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">raw</span><span class="p">,</span> <span class="n">ip_inv</span><span class="p">)</span>
        <span class="n">cipher</span> <span class="o">+=</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">final</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">cipher</span>


<span class="k">def</span> <span class="nf">decrypt</span><span class="p">(</span><span class="n">messages</span><span class="p">,</span> <span class="n">internal_key</span><span class="p">):</span>
    <span class="n">messages</span> <span class="o">=</span> <span class="n">split_message</span><span class="p">(</span><span class="n">messages</span><span class="p">)</span>
    <span class="n">plaintext</span> <span class="o">=</span> <span class="s">""</span>

    <span class="k">for</span> <span class="n">msg</span> <span class="ow">in</span> <span class="n">messages</span><span class="p">:</span>
        <span class="n">permutation</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="n">ip</span><span class="p">)</span>
        <span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="n">permutation</span><span class="p">[:</span><span class="mi">32</span><span class="p">],</span> <span class="n">permutation</span><span class="p">[</span><span class="mi">32</span><span class="p">:]</span>

        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">expand</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">right</span><span class="p">,</span> <span class="n">expansion</span><span class="p">)</span>
            <span class="n">vector_a</span> <span class="o">=</span> <span class="n">xor_with_key</span><span class="p">(</span><span class="n">expand</span><span class="p">,</span> <span class="n">internal_key</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
            <span class="n">vector_b</span> <span class="o">=</span> <span class="n">s_box</span><span class="p">(</span><span class="n">vector_a</span><span class="p">)</span>
            <span class="n">pb</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">vector_b</span><span class="p">,</span> <span class="n">permutation_box</span><span class="p">)</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">right</span>
            <span class="n">right</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pb</span><span class="p">)):</span>
                <span class="n">right</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pb</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">^</span> <span class="n">left</span><span class="p">[</span><span class="n">k</span><span class="p">])</span>
            <span class="n">left</span> <span class="o">=</span> <span class="n">temp</span>

        <span class="n">raw</span> <span class="o">=</span> <span class="n">right</span> <span class="o">+</span> <span class="n">left</span>
        <span class="n">final</span> <span class="o">=</span> <span class="n">permutation_function</span><span class="p">(</span><span class="n">raw</span><span class="p">,</span> <span class="n">ip_inv</span><span class="p">)</span>
        <span class="n">plaintext</span> <span class="o">+=</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">final</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">plaintext</span>


<span class="c1"># open key
</span><span class="n">externalKey</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'pass.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
<span class="n">key_in_binary</span> <span class="o">=</span> <span class="n">str2bin</span><span class="p">(</span><span class="n">externalKey</span><span class="p">)</span>
<span class="n">key</span> <span class="o">=</span> <span class="n">key_builder</span><span class="p">(</span><span class="n">key_in_binary</span><span class="p">)</span>

<span class="c1"># message 8-byte (text)
# message = open('message.txt', 'r').read()
# message = str2bin(message)
</span>
<span class="c1"># message in json (more than 8-byte)
</span><span class="n">message</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'example.json'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
<span class="n">message</span> <span class="o">=</span> <span class="n">str2bin</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>

<span class="c1"># encrypt message
</span><span class="n">ciphertext</span> <span class="o">=</span> <span class="n">encrypt</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">key</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Ciphertext ="</span><span class="p">,</span> <span class="n">ciphertext</span><span class="p">)</span>

<span class="n">aa</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">aa</span><span class="p">.</span><span class="n">extend</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">ciphertext</span><span class="p">])</span>

<span class="c1"># decrypt message
</span><span class="k">print</span><span class="p">(</span><span class="s">"Plaintext ="</span><span class="p">,</span> <span class="n">d</span><span class="p">(</span><span class="n">message</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Plaintext ="</span><span class="p">,</span> <span class="n">decrypt</span><span class="p">(</span><span class="n">aa</span><span class="p">,</span> <span class="n">key</span><span class="p">))</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /></entry><entry><title type="html">Fungsi dalam Kriptografi</title><link href="https://deo.or.id/2019/fungsi-kriptografi.html" rel="alternate" type="text/html" title="Fungsi dalam Kriptografi" /><published>2019-10-02T00:00:00+08:00</published><updated>2019-10-02T00:00:00+08:00</updated><id>https://deo.or.id/2019/fungsi-kriptografi</id><content type="html" xml:base="https://deo.or.id/2019/fungsi-kriptografi.html"><![CDATA[<div class="paragraph">
<p>Fungsi adalah sebuah relasi khusus pada dua himpunan.</p>
</div>
<div class="paragraph">
<p>$$f: A \to B$</p>
</div>
<div class="paragraph">
<p>yaitu $f$ memetekan $A$ ke $B$.</p>
</div>
<div class="paragraph">
<p>Fungsi adalah relasis khusus yang memiliki dua hal penting:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Tiap elemen di himpunan $A$, yang merupakan domain $f$, harus
digunakan oleh prosedur yang mendefinsikan $f$,</p>
</li>
<li>
<p>Jika $(a, b) \in f$ and $(a, c) \in f$, maka $b = c$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Misalnya: $A = {1, 2, 3}$ ke $B = {u, v, w}$, yang mengasilkan
$F = {(1, u), (2, v), (3, w)}$.</p>
</div>
<div class="paragraph">
<p>Kriptografi menggunakan fungsi dalam proses enkripsi dan dekripsi, yaitu
pemetaan plainteks ke cipherteks.</p>
</div>
<div class="paragraph">
<p>Fungsi enkripsi sebagai: $E(p) = c$, dan fungsi dekripsi sebagai
$D(c) = p$. Dan karena fungsi enkripsi dan dekripsi mengembalikan nilai ke
nilai awal, maka $D(E(p)) = p$ haruslah bernilai benar.</p>
</div>
<div class="sect1">
<h2 id="fungsi-satu-ke-satu"><a class="anchor" href="#fungsi-satu-ke-satu"></a>Fungsi Satu-ke-satu</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Fungsi $f$ dari set $A$ ke set $B$ adalah fungsi
satu-ke-satu/injektif jika tidak ada dua elemen di $A$ yang memiliki
bayangan yang sama.</p>
</div>
<div class="paragraph">
<p>$$\exists (a, b) \in A \Rightarrow f(a) \ne f(b) \Leftrightarrow a \ne b$</p>
</div>
<div class="paragraph">
<p>Jika $(a, b) \in A$, maka $f(a) \ne f(b)$, jika $a \ne b$.</p>
</div>
<div class="paragraph">
<p>Misalnya, $f = {(1, w), (2, u), (3, v)}$ dari $A = {1, 2, 3}$ ke
$B = {u, v, w, x}$.</p>
</div>
<div class="paragraph">
<p>Contoh lain adalah $f : \mathbb{Z} \to \mathbb{Z}$, dengan
$f(x) = x - 1$.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="fungsi-pada"><a class="anchor" href="#fungsi-pada"></a>Fungsi Pada</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Fungsi $f$ dari set $A$ ke set $B$ adalah fungsi pada/surjektif
jika setiap elemen set $B$ merupakan bayangan dari satu atau lebih elemen
set $A$.</p>
</div>
<div class="paragraph">
<p>$$\forall b \in B, f(a)$</p>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /><category term="math" /></entry><entry><title type="html">Polymorphism</title><link href="https://deo.or.id/2019/polymorphism.html" rel="alternate" type="text/html" title="Polymorphism" /><published>2019-05-29T00:00:00+08:00</published><updated>2019-05-29T00:00:00+08:00</updated><id>https://deo.or.id/2019/polymorphism</id><content type="html" xml:base="https://deo.or.id/2019/polymorphism.html"><![CDATA[<div class="paragraph">
<p>Polimorfiesme (bahasa Inggris polymorphims) adalah kemampuan dari suatu objek
untuk  merepresentasikan satu bentuk ke dalam banyak bentuk. Penggunaan paling
umum dari polymorphism pada OOP terjadi ketika reference superclass digunakan
untuk merujuk ke inheritance objek class.</p>
</div>
<div class="paragraph">
<p>Hal ini memungkinkan perubahan perilaku program secara dinamis saat program
berjalan, tanpa suatu modul tahu bahwa modul yang lain sudah berubah.</p>
</div>
<div class="paragraph">
<p>Polymorphism menyederhanakan dan menghilangkan if-else, di saat-saat di mana
penggunaannya menjadi tidak praktis lagi. Kode-kode yang tersebar di mana-mana
dengan if-else yang selalu sama, akhirnya semuanya di masukkan ke dalam
kelas-kelas masing-masing. Ditaruhlah interface di depan kelas-kelas itu,
sehingga sekarang kode yang baru terasa lebih mudah dibaca
<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1</a>]</sup>.</p>
</div>
<div class="paragraph">
<p>Polymorphism terbagi menjadi dua, yaitu <strong>compiled time polymorphism</strong> dan
<strong>runtime polymorphism</strong>.</p>
</div>
<div class="sect1">
<h2 id="compiled-time-polymorphimsstatic-polymorphims"><a class="anchor" href="#compiled-time-polymorphimsstatic-polymorphims"></a>Compiled time polymorphims/static polymorphims</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Polimorfiesme yang berjalan ketika kompilasi. Misalnya:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Method overloading,</p>
</li>
<li>
<p>Constructor overloading,</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Arithmetic</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">i</span> <span class="o">+</span> <span class="n">j</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">i</span> <span class="o">+</span> <span class="n">j</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">add</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">,</span> <span class="kt">int</span> <span class="n">k</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">i</span> <span class="o">+</span> <span class="n">j</span> <span class="o">+</span> <span class="n">k</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="runtime-polymorphism"><a class="anchor" href="#runtime-polymorphism"></a>Runtime polymorphism</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Polimorfiesme yang berjalan ketika runtime. Menggunakan override yang dituliskan
dalam bentuk keyword <code>@Override</code>. Misalnya:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Method overloading,</p>
</li>
</ol>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="c1">//Superclass</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Operasi</span> <span class="o">{</span>
    <span class="kt">void</span> <span class="nf">op</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span> <span class="o">+</span> <span class="n">j</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">NewOperation</span> <span class="kd">extends</span> <span class="nc">Operasi</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kt">void</span> <span class="nf">op</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">){</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span> <span class="o">*</span> <span class="n">j</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="overriding-vs-overloading"><a class="anchor" href="#overriding-vs-overloading"></a>Overriding vs Overloading</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Overriding mengimplementasikan Runtime Polymorphism, Overloading
mengimplementasikan Compile time polymorphism,</p>
</li>
<li>
<p>Overriding terjadi antara superclass dan subclass, Overloading terjadi antara
metode di kelas yang sama.</p>
</li>
<li>
<p>Overriding memiliki tanda yang sama yaitu nama dan argumen yang sama,
Overloading memiliki nama yang sama namun parameter berbeda.</p>
</li>
<li>
<p>Overloading, method dipanggil ketika compile-time, Overriding, dipanggil
ketika runtime objek yang ditentukan.</p>
</li>
<li>
<p>Jika Overriding breaks, akan berakibat fatar karena efeknya akan terlihat pada
saat runtime, namun jika Overloading breaks, akan muncul compile-time error
dan lebih mudah untuk memperbaikinya<sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnotedef_2" title="View footnote.">2</a>]</sup>.</p>
</li>
</ol>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnotedef_1">
<a href="#_footnoteref_1">1</a>. <a href="https://jekjektuanakal.my.id/posts/peta-jalan-pejuang-cpp/" class="bare">https://jekjektuanakal.my.id/posts/peta-jalan-pejuang-cpp/</a>
</div>
<div class="footnote" id="_footnotedef_2">
<a href="#_footnoteref_2">2</a>. <a href="https://www.journaldev.com/32182/overriding-vs-overloading-in-java" class="bare">https://www.journaldev.com/32182/overriding-vs-overloading-in-java</a>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Inheritance</title><link href="https://deo.or.id/2019/inheritance.html" rel="alternate" type="text/html" title="Inheritance" /><published>2019-05-26T00:00:00+08:00</published><updated>2019-05-26T00:00:00+08:00</updated><id>https://deo.or.id/2019/inheritance</id><content type="html" xml:base="https://deo.or.id/2019/inheritance.html"><![CDATA[<div class="paragraph">
<p>Inheritance adalah pewarian sifat. Class yang berisafat umum akan mewariskan
sifatnya ke class yang bersifat khusus. Misalnya class <code>Manusia</code> akan memiliki
class turunan seperti <code>Ayah</code>, <code>Ibu</code> dan <code>Anak</code>.</p>
</div>
<div class="paragraph">
<p>Ketika meng-extend sebuah class, maka semua member non-private termasuk variabel
dan method akan diwariskan ke class tersebut.</p>
</div>
<div class="paragraph">
<p>Class <code>Manusia</code> akan memiliki atribut dan method tersendiri, misalnya <code>nama</code>,
<code>jenisKelamin</code> dan <code>umur</code>. Class <code>Ayah</code> misalnya akan memiliki method dan
atribut dari class <code>Manusia</code> namun akan memiliki sifat-sifat dan atribut yang
khusus, seperti <code>suara</code>, <code>gayaBerjalan</code>, <code>warnaKulit</code>, dsb.</p>
</div>
<div class="paragraph">
<p>Untuk mewariskan sifat, digunakan keyword <code>extend</code>, dan untuk memanggil atribut
dan method dari class induk, menggunakan keyword <code>super</code>. Keyword yang kedua
adalah <code>implements</code> untuk inheritance/mewariskan dari sebuah interface.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://static.studytonight.com/java/images/inheritance-in-java.jpg" alt="Inheritance">
</div>
</div>
<div class="paragraph">
<p>Keyword <code>super</code> dapat digunakan untuk memanggil property di class parent, bahkan
bisa memanggil constructor class parent.</p>
</div>
<div class="paragraph">
<p>Misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Manusia</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getNama</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNama</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getJenisKelamin</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setJenisKelamin</span><span class="o">(</span><span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getUmur</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUmur</span><span class="o">(</span><span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Class <code>Ayah</code> akan mewarisi sifat-sifat dari class <code>Manusia</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Ayah</span> <span class="kd">extends</span> <span class="nc">Manusia</span> <span class="kd">implements</span> <span class="nc">Orang</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Ayah</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="n">umur</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ayah makan"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">suara</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ayah bersuara"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">jalan</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ayah berjalan"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Keuntungan dari inheritance adalah:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Reusability dari code, kita tidak perlu menulis kode berulang-ulang.</p>
</li>
<li>
<p>Mendukung polimorphisme dengan adanya method overriding (dibahas pada bab
polimorphisme)</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Sedangkan kerugiannya adalah class parent dan child akan memiliki kesamaan
identik, sehingga apabila terjadi perubahan di class parent, maka akan otomatis
mengubah juga class child. Hal ini membuat adanya saling ketergantungan.</p>
</div>
<div class="sect1">
<h2 id="jenis-inheritance"><a class="anchor" href="#jenis-inheritance"></a>Jenis Inheritance</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Java hanya mendukung 3 jenis inheritance berikut:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Single inheritance</p>
</li>
<li>
<p>Multilevel inheritance</p>
</li>
<li>
<p>Heirarchical inheritance</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Java tidak mendukung multiple inheritance dengan alasan keamanan dari masalah
<code>Deadly Diamond of Death</code>.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://static.studytonight.com/java/images/types-of-inheritance.png" alt="Types of Inheritance">
</div>
</div>
<div class="sect2">
<h3 id="single-inheritance"><a class="anchor" href="#single-inheritance"></a>Single inheritance</h3>
<div class="paragraph">
<p>Ini misalnya ketika ada pewarisan suatu class ke class lain, misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">A</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
    <span class="kt">void</span> <span class="nf">show</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"a = "</span><span class="o">+</span><span class="n">a</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">B</span> <span class="kd">extends</span> <span class="no">A</span><span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="no">B</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="no">B</span><span class="o">();</span>
        <span class="n">b</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="multilevel-inheritance"><a class="anchor" href="#multilevel-inheritance"></a>Multilevel Inheritance</h3>
<div class="paragraph">
<p>Ini misalnya pada sebuah class C extends class B, lalu class B extends class A.
Misalnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">A</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
    <span class="kt">void</span> <span class="nf">show</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"a = "</span><span class="o">+</span><span class="n">a</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">B</span> <span class="kd">extends</span> <span class="no">A</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
    <span class="kt">void</span> <span class="nf">showB</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"b = "</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">C</span> <span class="kd">extends</span> <span class="no">B</span><span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="no">C</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="no">C</span><span class="o">();</span>
        <span class="n">c</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
        <span class="n">c</span><span class="o">.</span><span class="na">showB</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="hierarchical-inheritance"><a class="anchor" href="#hierarchical-inheritance"></a>Hierarchical Inheritance</h3>
<div class="paragraph">
<p>Ini terjadi jika ada dua class memiliki satu parent class yang sama. Misalnya
class B dan class C extends class A. Contohnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">A</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
    <span class="kt">void</span> <span class="nf">show</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"a = "</span><span class="o">+</span><span class="n">a</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">B</span> <span class="kd">extends</span> <span class="no">A</span><span class="o">{</span>
    <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">10</span><span class="o">;</span>
    <span class="kt">void</span> <span class="nf">showB</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"b = "</span><span class="o">+</span><span class="n">b</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">C</span> <span class="kd">extends</span> <span class="no">A</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="no">C</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="no">C</span><span class="o">();</span>
        <span class="n">c</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
        <span class="no">B</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="no">B</span><span class="o">();</span>
        <span class="n">b</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="multiple-inheritance-tidak-didukung-java"><a class="anchor" href="#multiple-inheritance-tidak-didukung-java"></a>Multiple Inheritance [tidak didukung Java]</h3>
<div class="paragraph">
<p>Multiple inheritance adalah inheritance sebuah class, misalnya class C yang
mempunyai 2 buah parent, misalnya class B dan class A.</p>
</div>
<div class="paragraph">
<p>Mengapa multiple inheritance tidak didukung, karena:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Untuk menghilangkan ambiguitas,</p>
</li>
<li>
<p>Untuk mempermudah review code dan clear design.</p>
</li>
</ol>
</div>
<div class="imageblock">
<div class="content">
<img src="https://static.studytonight.com/java/images/multiple-inheritance-problem.jpg" alt="Multiple Inheritance">
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="overriding-method"><a class="anchor" href="#overriding-method"></a>Overriding Method</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Dalam Java, sebuah method yang sama antara <code>superclass</code> dan <code>subclass</code>
dibolehkan. Ketika sebuah method dengan nama yang sama dengan method yang ada
pada <code>superclass</code> dibuat pada <code>subclass</code>, maka method yang ada di <code>superclass</code>
ditimpa (<code>override</code>) dengan method yang baru.</p>
</div>
<div class="paragraph">
<p>Sehingga, ketika method tersebut dipanggil pada <code>subclass</code>, maka yang akan
dieksekusi adalah method yang ada pada <code>subclass</code>.</p>
</div>
<div class="paragraph">
<p>Contohnya:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Person</span><span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">yearOfBirth</span><span class="o">;</span>
    <span class="kt">double</span> <span class="n">height</span><span class="o">;</span>
    <span class="kt">double</span> <span class="n">weight</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">currentYear</span> <span class="o">=</span> <span class="mi">2020</span><span class="o">;</span>

    <span class="nc">Person</span><span class="o">(</span><span class="nc">String</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">,</span> <span class="kt">double</span> <span class="n">k</span><span class="o">,</span> <span class="kt">double</span> <span class="n">l</span><span class="o">){</span>
        <span class="n">name</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
        <span class="n">yearOfBirth</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
        <span class="n">height</span> <span class="o">=</span> <span class="n">k</span><span class="o">;</span>
        <span class="n">weight</span> <span class="o">=</span> <span class="n">l</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kt">int</span> <span class="nf">myAge</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">currentYear</span> <span class="o">-</span> <span class="n">yearOfBirth</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Deo</span> <span class="kd">extends</span> <span class="nc">Person</span><span class="o">{</span>
    <span class="nc">Deo</span><span class="o">(</span><span class="nc">String</span> <span class="n">i</span><span class="o">,</span> <span class="kt">int</span> <span class="n">j</span><span class="o">,</span> <span class="kt">double</span> <span class="n">k</span><span class="o">,</span> <span class="kt">double</span> <span class="n">l</span><span class="o">){</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">i</span><span class="o">,</span><span class="n">j</span><span class="o">,</span><span class="n">k</span><span class="o">,</span><span class="n">l</span><span class="o">);</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">myAge</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kt">int</span> <span class="nf">myAge</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">currentYear</span> <span class="o">+</span> <span class="n">yearOfBirth</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">OverridingExample</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[]){</span>
        <span class="nc">Deo</span> <span class="n">deo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Deo</span><span class="o">(</span><span class="s">"Deo"</span><span class="o">,</span> <span class="mi">2002</span><span class="o">,</span> <span class="mf">170.0</span><span class="o">,</span> <span class="mf">50.0</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"My name is "</span> <span class="o">+</span> <span class="n">deo</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"My ages is "</span> <span class="o">+</span> <span class="n">deo</span><span class="o">.</span><span class="na">myAge</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Dimana terlihat, bahwa terdapat dua method yang sama, yang pertama method
<code>myAge</code> di <code>superclass</code> dan method <code>myAge</code> yang kedua di <code>subclass</code>.</p>
</div>
<div class="paragraph">
<p>Walaupun sudah panggil dengan menggunakan <code>super.myAge()</code>, namun ketika di
eksekusi, hasil yang keluar adalah method yang terdapat pada <code>subclass</code>, yang
artinya sudah ditimpa/overriding.</p>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Abstract Class dan Interface</title><link href="https://deo.or.id/2019/abstract-class-and-interface.html" rel="alternate" type="text/html" title="Abstract Class dan Interface" /><published>2019-05-22T00:00:00+08:00</published><updated>2019-05-22T00:00:00+08:00</updated><id>https://deo.or.id/2019/abstract-class-and-interface</id><content type="html" xml:base="https://deo.or.id/2019/abstract-class-and-interface.html"><![CDATA[<div class="sect1">
<h2 id="abstract-method-vs-overriding"><a class="anchor" href="#abstract-method-vs-overriding"></a>Abstract method vs Overriding</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Abstract method adalah method yang ditulis untuk diimplementasikan nantinya
(harus diimplementasikan). Abstract method ini sebagai perjanjian bahwa
method-method yang diberi tanda <code>abstract</code> merupakan method yang penting
sehingga harus diimplementasikan. Manfaatnya, digunakan sebagai jembatan antar
class.</p>
</div>
<div class="paragraph">
<p>Perbedaan abstract method dengan overriding - Abstract harus di implementasikan
sedangkan overriding itu opsional</p>
</div>
<div class="paragraph">
<p>Untuk menggunakan abstract class didalam sebuah class, digunakan keyword
<code>abstract</code>, dan untuk mengimplementasikannya pada class menggunakan keyword
<code>implement</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">One</span><span class="o">{</span>
    <span class="nc">One</span><span class="o">(){</span>
        <span class="o">...</span>
    <span class="o">}</span>

    <span class="kd">abstract</span> <span class="n">dataType</span> <span class="nf">theMethod</span><span class="o">();</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Main</span> <span class="n">implement</span> <span class="nc">One</span> <span class="o">{</span>
    <span class="o">...</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="interface"><a class="anchor" href="#interface"></a>Interface</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Interface adalah kumpulan abstract method yang digabung menjadi satu class.
Interface digunakan untuk menjembatani berbagai jenis class untuk dapat saling
berkomunikasi satu dengan yang lain.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">interface</span> <span class="nc">Orang</span><span class="o">{</span>
    <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">makan</span><span class="o">();</span>
    <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">suara</span><span class="o">();</span>
    <span class="kd">abstract</span> <span class="kt">void</span> <span class="nf">jalan</span><span class="o">();</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Manusia</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getNama</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNama</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getJenisKelamin</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setJenisKelamin</span><span class="o">(</span><span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getUmur</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUmur</span><span class="o">(</span><span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Ayah</span> <span class="kd">extends</span> <span class="nc">Manusia</span> <span class="kd">implements</span> <span class="nc">Orang</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Ayah</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="n">umur</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ayah makan"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">suara</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ayah bersuara"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">jalan</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ayah berjalan"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Ibu</span> <span class="kd">extends</span> <span class="nc">Manusia</span> <span class="kd">implements</span> <span class="nc">Orang</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Ibu</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="n">umur</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ibu makan"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">suara</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ibu bersuara"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">jalan</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Ibu berjalan"</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Bacaan menarik tentang interface
<a href="https://medium.com/@Dewey92/oop-interface-what-ca16de0359af" class="bare">https://medium.com/@Dewey92/oop-interface-what-ca16de0359af</a></p>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Encapsulation</title><link href="https://deo.or.id/2019/encapsulation.html" rel="alternate" type="text/html" title="Encapsulation" /><published>2019-05-19T00:00:00+08:00</published><updated>2019-05-19T00:00:00+08:00</updated><id>https://deo.or.id/2019/encapsulation</id><content type="html" xml:base="https://deo.or.id/2019/encapsulation.html"><![CDATA[<div class="paragraph">
<p>Encapsulation atau enkapsulasi adalah pembatasan akses terhadap suatu atribut,
method atau konstruktor dalam suatu class. Enkapsulasi memastikan bahwa hanya
program hanya dapat diakses oleh yang diberi izin saja.</p>
</div>
<div class="sect1">
<h2 id="access-modifier"><a class="anchor" href="#access-modifier"></a>Access Modifier</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Access modifier adalah tingkat level akses yang dapat diberikan. Secara umum,
dalam Java ada 4 macam jenis modifier, yaitu: public, private, protected dan
default modifier (blank). Apabila sebuah modifier tidak ditentukan maka secara
otomatis compiler memberikan default modifier pada attribute atau method
tersebut.</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Public</p>
<div class="paragraph">
<p>Sebuah attribute atau method yang diberikan access modifier public artinya dapat
diakses dari class yang berbeda. Penggunaan public modifier biasanya untuk
method-method yang bekerja sebagai transportasi data seperti Setter Method dan
Getter.</p>
</div>
</li>
<li>
<p>Protected</p>
<div class="paragraph">
<p>Sebuah attribute atau method yang diberikan access modifier protected artinya
dapat diakses dari class lain yang merupakan subclassnya. Access modifier ini
biasa digunakan untuk attribute dalam sebuah Class yang menjadi superclass.</p>
</div>
</li>
<li>
<p>Private</p>
<div class="paragraph">
<p>Attribute atau method dengan access modifier private hanya dapat diakses dari
dalam Classnya sendiri. Umumnya sebuah method dalam sebuah class diberikan
Private modifier apabila method tersebut hanya berkerja di dalam classnya
sendiri atau pada method dan attribute yang harus disembunyikan dari class lain
termasuk.</p>
</div>
</li>
<li>
<p>Default Modifier (blank)</p>
<div class="paragraph">
<p>Default modifier yaitu modifier yang diberikan kepada method atau attribute yang
tidak ditentukan modifiernya. Sebuah attribute atau method dengan access
modifier default dapat diakses dari luar Class walaupun class tersebut bukan
subclassnya selama berada dalam package yang sama.</p>
</div>
</li>
</ol>
</div>
<div class="paragraph">
<p>Tabel jangkauan untuk tiap modifier:</p>
</div>
<table class="tableblock frame-all grid-all stretch center">
<colgroup>
<col style="width: 20%;">
<col style="width: 20%;">
<col style="width: 20%;">
<col style="width: 20%;">
<col style="width: 20%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Modifier</th>
<th class="tableblock halign-left valign-top">Class</th>
<th class="tableblock halign-left valign-top">Package</th>
<th class="tableblock halign-left valign-top">Subclass</th>
<th class="tableblock halign-left valign-top">World</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">public</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">protected</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">N</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">default modifier</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">N</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">N</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">private</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Y</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">N</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">N</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">N</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Keterangan:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Y artinya bisa diakses,</p>
</li>
<li>
<p>N artinya tidak bisa diakses,</p>
</li>
<li>
<p>Subclass artinya class anak,</p>
</li>
<li>
<p>World artinya seluruh package di aplikasi.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="setter-and-getter"><a class="anchor" href="#setter-and-getter"></a>Setter and Getter</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Setter dan Getter adalah istilah untuk method dengan access modifier public yang
digunakan untuk mengubah (Set) atau mengambil (Get) nilai suatu attribute
private atau protected dalam sebuah Class.</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Setter adalah sarana untuk mengambil nilai di dalam sebuah <strong>atribut private</strong></p>
</div>
<div class="paragraph">
<p>Getter adalah sarana untuk mengubah nilai di dalam sebuah <strong>atribut private</strong></p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Setter dan getter ini memiliki akses <strong>public</strong>, sehingga dapat diakses kelas
lainnya, sedangkan method utamanya tidak perlu diketahui oleh orang lain.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Manusia</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getNama</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNama</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getJenisKelamin</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setJenisKelamin</span><span class="o">(</span><span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getUmur</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUmur</span><span class="o">(</span><span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Constructor</title><link href="https://deo.or.id/2019/constructor.html" rel="alternate" type="text/html" title="Constructor" /><published>2019-05-12T00:00:00+08:00</published><updated>2019-05-12T00:00:00+08:00</updated><id>https://deo.or.id/2019/constructor</id><content type="html" xml:base="https://deo.or.id/2019/constructor.html"><![CDATA[<div class="paragraph">
<p>Konstruktor adalah method yang dijalankan ketika pertama kali sebuah objek
dipanggil. Sebuah <code>class</code> tanpa konstruktor akan otomatis dibuatkan konstruktor
<code>default</code> oleh java.</p>
</div>
<div class="paragraph">
<p>Constructor adalah method tanpa return type dan nama methodnya sama dengan nama
classnya.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>

    <span class="kt">void</span> <span class="nf">bernafas</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">berbicara</span><span class="o">()</span> <span class="o">{}</span>

    <span class="c1">// Ini constructor</span>
    <span class="nc">Manusia</span> <span class="o">()</span> <span class="o">{</span>
        <span class="n">nama</span> <span class="o">=</span> <span class="s">"Nama saya .."</span><span class="o">;</span>
        <span class="n">umur</span> <span class="o">=</span> <span class="mi">21</span><span class="o">;</span>
        <span class="n">jenisKelamin</span> <span class="o">=</span> <span class="s">"L"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Ketika dibuat sebuah objek dari class di atas dengan statement
<code>Employee emp = new Employee();</code> maka nilai attribute <code>name = Shelena</code>
dan nilai attribute <code>salary = 0</code>.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>

    <span class="kt">void</span> <span class="nf">bernafas</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">berbicara</span><span class="o">()</span> <span class="o">{}</span>

    <span class="c1">// Ini constructor</span>
    <span class="nc">Manusia</span> <span class="o">()</span> <span class="o">{</span>
        <span class="n">nama</span> <span class="o">=</span> <span class="s">"Nama saya .."</span><span class="o">;</span>
        <span class="n">umur</span> <span class="o">=</span> <span class="mi">21</span><span class="o">;</span>
        <span class="n">jenisKelamin</span> <span class="o">=</span> <span class="s">"L"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span> <span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Manusia</span> <span class="n">manusia</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Manusia</span><span class="o">();</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nama = "</span><span class="o">+</span> <span class="n">manusia</span><span class="o">.</span><span class="na">nama</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Umur = "</span><span class="o">+</span> <span class="n">manusia</span><span class="o">.</span><span class="na">umur</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Jenis Kelamin = "</span><span class="o">+</span> <span class="n">manusia</span><span class="o">.</span><span class="na">jenisKelamin</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Java memperbolehkan sebuah class memiliki banyak constructor dengan ketentuan:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Setiap Constructor memiliki jumlah parameter yang berbeda,</p>
</li>
<li>
<p>Jumlah parameter boleh sama tetapi type data masing-masing parameternya harus
berbeda,</p>
</li>
<li>
<p>Apabila terdapat lebih dari satu constructor dalam class maka Constructor yang
digunakan adalah constructor yang sesuai dengan ketika objek di-instansikan.</p>
</li>
</ul>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Hal ini disebut dengan <strong>overloading</strong>, dimana beberapa method dapat memiliki
nama yang sama, namun dibedakan dengan paramater yang berbeda.</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Contoh:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>

    <span class="kt">void</span> <span class="nf">bernafas</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">berbicara</span><span class="o">()</span> <span class="o">{}</span>

    <span class="nc">Manusia</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nc">Manusia</span><span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nc">Manusia</span> <span class="o">(</span><span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="kt">int</span> <span class="n">umur</span><span class="o">,</span> <span class="nc">String</span> <span class="n">jenisKelamin</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="n">nama</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="n">umur</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="n">jenisKelamin</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span> <span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Manusia</span> <span class="n">manusia1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Manusia</span><span class="o">(</span><span class="s">"A"</span><span class="o">,</span> <span class="mi">22</span><span class="o">,</span> <span class="s">"L"</span><span class="o">);</span>
        <span class="nc">Manusia</span> <span class="n">manusia2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Manusia</span><span class="o">(</span><span class="s">"B"</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
        <span class="nc">Manusia</span> <span class="n">manusia3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Manusia</span><span class="o">(</span><span class="s">"C"</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nama 1 = "</span><span class="o">+</span> <span class="n">manusia1</span><span class="o">.</span><span class="na">nama</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nama 2 = "</span><span class="o">+</span> <span class="n">manusia2</span><span class="o">.</span><span class="na">nama</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Nama 3 = "</span><span class="o">+</span> <span class="n">manusia3</span><span class="o">.</span><span class="na">nama</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Output:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">Nama</span> <span class="mi">1</span> <span class="o">=</span> <span class="no">A</span>
<span class="nc">Nama</span> <span class="mi">2</span> <span class="o">=</span> <span class="no">B</span>
<span class="nc">Nama</span> <span class="mi">3</span> <span class="o">=</span> <span class="no">C</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Method</title><link href="https://deo.or.id/2019/method.html" rel="alternate" type="text/html" title="Method" /><published>2019-05-05T00:00:00+08:00</published><updated>2019-05-05T00:00:00+08:00</updated><id>https://deo.or.id/2019/method</id><content type="html" xml:base="https://deo.or.id/2019/method.html"><![CDATA[<div class="paragraph">
<p>Method adalah penggambaran suatu sifat dari sebuah objek.</p>
</div>
<div class="paragraph">
<p>Method adalah kumpulan statemen yang dibungkus menjadi satu untuk melaksanakan
suatu fungsi tertentu. Method sama dengan fungsi di bahasa pemrograman lain.</p>
</div>
<div class="paragraph">
<p>Misalnya kita mempunya class <code>Manusia</code>, maka methodnya bisa seperti
<code>berjalan()</code>, <code>makan()</code>, atau sifat lainnya.</p>
</div>
<div class="paragraph">
<p>Lihat <a href="/2021/05/20/pp-method.html">Method pada modul Pengantar Pemrograman</a>.</p>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Class dan Object</title><link href="https://deo.or.id/2019/class-and-object.html" rel="alternate" type="text/html" title="Class dan Object" /><published>2019-04-28T00:00:00+08:00</published><updated>2019-04-28T00:00:00+08:00</updated><id>https://deo.or.id/2019/class-and-object</id><content type="html" xml:base="https://deo.or.id/2019/class-and-object.html"><![CDATA[<div class="paragraph">
<p>Konsep dasar dari Pemrograman Berorientasi objek sendiri adalah menyatakan
sebuah objek real kedalam bahasa bahasa pemrograman.</p>
</div>
<div class="sect1">
<h2 id="objek-object"><a class="anchor" href="#objek-object"></a>Objek (object)</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Objek adalah hal, perkara, benda atau orang yang menjadi pokok pembicaraan
(KBBI, 2018). Misalnya seorang manusia, seekor kucing, seekor anjing atau benda
lain, misalnya sebuah kursi. Itu adalah sebuah objek.</p>
</div>
<div class="paragraph">
<p>Nah, setiap objek pasti memiliki identitas atau atribut, misalnya seorang
manusia memiliki identitan atau atribut nama, umur, tinggi, berat dan berbagai
identitas lainnya.</p>
</div>
<div class="paragraph">
<p>Selain itu, sebuah objek juga pasti memiliki tingka laku, misalnya seorang
manusia bisa makan, tidur, berjalan, bermain, koding dan berbagai kegiatan
aktivitas lainnya.</p>
</div>
<div class="paragraph">
<p>Sebuah objek dalam PBO juga demikian, objek tersebut akan memiliki
sifat/atrribute dan perilaku/behaviour.</p>
</div>
<div class="paragraph">
<p>Sifat/atribut yang dimaksud di PBO adalah sesuatu yang memiliki nilai, seperti
ukuran, warna, berat, keterangan, dan semacamnya.</p>
</div>
<div class="paragraph">
<p>Sedangkan tingkah laku/behaviour adalah kumpulan perintah yang melakukan suatu
kegiatan spesifik.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="class"><a class="anchor" href="#class"></a>Class</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Setiap objek memiliki blueprint atau cetakan, digunakan untuk membuat objek.
Suatu cetakan akan ditentukan apa-apa saja yang akan dimasukkan kedalam sebuah
objek. Sehingga dapat kita katakan bahwa:</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Class adalah blueprint dari objek dan objek adalah instance dari sebuah class.</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>Di Java, semuanya dibungkus dengan sebuah <code>class</code>. <code>class</code> adalah core dari Java
itu sendiri.</p>
</div>
<div class="paragraph">
<p>Aturan untuk <code>class</code> Java:
1. <code>class</code> dapat memiliki <code>public</code> atau default (no modifier).
2. Dapat berupa <code>abstract</code> atau <code>final</code> (<code>class</code> normal).
3. Harus mempunyai keyword <code>class</code> dan harus diikuti nama <code>class</code> yang
   berupa PascalCase.
4. Dapat meng-extend hanya sebuah <code>parent class</code>. Secara default, meng-extend
   class <code>Object</code>.
5. Variabel dan method dibungkus didalam kurung kurawal (<code>{}</code>).</p>
</div>
<div class="paragraph">
<p>Bentuk umum:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span>  <span class="nc">ClassName</span> <span class="o">{</span>
     <span class="n">field</span><span class="o">;</span>
     <span class="n">method</span><span class="o">;</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Misalnya seorang anak yang baru lahir, pastilah dia akan memiliki nama, namun
kita belum memberikannya nama. Kenyataan bahwa dia akan memiliki nama, itu
dimisalkan kedalam sebuah blueprint, bahwa seorang manusia pastilah memiliki
nama, umur, perilaku, dan sebagainya.</p>
</div>
<div class="paragraph">
<p>Misalnya blueprintnya:
1. Perilaku: bernafas, makan, bergerak, melihat, &#8230;&#8203; dst.
2. Atribut: nama, umur, jenis kelamin, &#8230;&#8203; dsb.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kd">class</span> <span class="nc">Manusia</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">umur</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">nama</span><span class="o">,</span> <span class="n">jenisKelamin</span><span class="o">;</span>

    <span class="kt">void</span> <span class="nf">bernafas</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">makan</span><span class="o">()</span> <span class="o">{}</span>
    <span class="kt">void</span> <span class="nf">berbicara</span><span class="o">()</span> <span class="o">{}</span>
<span class="o">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Untuk menggunakan cetakan ini untuk seorang manusia, maka dapat menggunakan
perintah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="nc">Manusia</span> <span class="n">deo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Manusia</span><span class="o">();</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>maka akan muncul sebuah objek baru, dengan nama objek <code>deo</code>, dan memiliki nama,
umur, jenis kelamin, bernafas, dll.</p>
</div>
<div class="paragraph">
<p>Setiap kali objek di-instance dari sebuah class, maka objek tersebut mewarisi
atribut dan perilaku dari class yang di-intace-kan. Artinya objek <code>deo</code> yang
telah dibuat juga mempunyai atribut nama, umur dan semua atribut dan perilaku
yang ada di <code>class Manusia</code>.</p>
</div>
<div class="paragraph">
<p>Perintah <code>new</code> adalah sebuah keyword untuk mengalokasikan memory untuk object
tersebut.</p>
</div>
<div class="paragraph">
<p>Tapi, datanya belum diisi, dan masih sebatas sebuah template sehingga defaultnya
nilainya <code>0</code>/<code>null</code>/<code>false</code>, kita dapat mengisinya dengan menggunakan perintah:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="n">deo</span><span class="o">.</span><span class="na">nama</span> <span class="o">=</span> <span class="s">"Deo"</span><span class="o">;</span>
<span class="n">deo</span><span class="o">.</span><span class="na">umur</span> <span class="o">=</span> <span class="mi">22</span><span class="o">;</span>
<span class="n">deo</span><span class="o">.</span><span class="na">jenisKelamin</span> <span class="o">=</span> <span class="s">"Laki-laki"</span><span class="o">;</span></code></pre>
</div>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="pbo" /></entry><entry><title type="html">Pembangkit Bilangan Prima</title><link href="https://deo.or.id/2018/pembangkit-prima.html" rel="alternate" type="text/html" title="Pembangkit Bilangan Prima" /><published>2018-05-22T00:00:00+08:00</published><updated>2018-05-22T00:00:00+08:00</updated><id>https://deo.or.id/2018/pembangkit-prima</id><content type="html" xml:base="https://deo.or.id/2018/pembangkit-prima.html"><![CDATA[<div class="paragraph">
<p>Metode untuk pengujian bilangan prima yang paling sederhana adalah
<em>brute force</em>, yaitu membagi $n$ dengan $p \in \mathbb{P}, p \leq \sqrt{n}$.</p>
</div>
<div class="paragraph">
<p>Jika $n$ habis dibagi dengan salah satu bilangan prima, maka $n$ adalah bilangan
komposit, jika tidak bisa dibagi dengan salah satu bilangan prima maka $n$
adalah bilangan prima.</p>
</div>
<div class="paragraph">
<p>Kompleksitasnya $O(\sqrt{n})$, sehingga tidak efektif.</p>
</div>
<div class="paragraph">
<p>Terdapat algoritma lain yang lebih efektif,</p>
</div>
<div class="sect1">
<h2 id="algoritma-lehmann"><a class="anchor" href="#algoritma-lehmann"></a>Algoritma Lehmann</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Bangkitkan bilangan acak $p$ sepanjang $n$ angka,</p>
</li>
<li>
<p>uji <em>brute force</em> terhadap $p$ dengan bilangan $p &lt; 256$, ini akan
mengeliminasi bilangan prima $80%$,</p>
</li>
<li>
<p>kemudian uji $p$ dengan algoritma Lehmann:</p>
<div class="olist loweralpha">
<ol class="loweralpha" type="a">
<li>
<p>bangkitkan bilangan acak $a, a &lt; p$,</p>
</li>
<li>
<p>hitung $a^{(p-1)/2} \bmod p$,</p>
</li>
<li>
<p>jika $a^{(p-1)/2} \not\equiv 1$ atau $-1 \bmod p$, maka $p$ tidak prima,</p>
</li>
<li>
<p>jika $a^{(p-1)/2} \equiv 1$ atau $-1 \bmod p$, maka peluang $p$ prima
adalah $50%$,</p>
</li>
</ol>
</div>
</li>
<li>
<p>ulangi pengujian algoritma Lehmann sebanyak $t$ kali (dengan nilai $a$
berbeda), jika hasil hitung langkah kedua algoritma Lehmann sama dengan 1 atau
-1, tetapi tidak selalu sama dengan 1, maka peluang $p$ adalah prima mempunyai
kesalahan tidak lebih dari $1/2^{t}$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Jumlah pengujian yang disarankan adalah lima kali<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1</a>]</sup>.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="algoritma-rabin-miller"><a class="anchor" href="#algoritma-rabin-miller"></a>Algoritma Rabin-Miller</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Sebelumnya:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>bangkitkan nilai $p$ yang akan diuji keprimaannya,</p>
</li>
<li>
<p>kemudian hitung nilai $b$, dimana $2^b$ adalah nilai pangkat 2 terbesar yang
habis membagi $p - 1$,</p>
</li>
<li>
<p>hitung $m$ sedemikian sehingga $p = 1 + 2^{b} m$.</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Kemudian jalankan algoritma ini:</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>ambil bilangan sembarangan $a, a &lt; p$,</p>
</li>
<li>
<p>$j = 0$, hitung $z = a^{m} \bmod p$,</p>
</li>
<li>
<p>jika $z = 1$ atau $z = p - 1$, maka $p$ mungkin prima, jika $z &gt; 0$ dan
$z = 1$ maka bukan prima,</p>
</li>
<li>
<p><code>j++</code>, jika $j &lt; b$ dan $z \neq p - 1$, maka $z = z^{2} \bmod p$ dan kembali
ke langkah 3,</p>
</li>
<li>
<p>jika $j = b$ dan $z \neq p - 1$, maka $p$ tidak prima.</p>
</li>
</ol>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnotedef_1">
<a href="#_footnoteref_1">1</a>. Munir. R. "Kriptografi Edisi Kedua". Informatika: Bandung. 2019.
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Kriptografi" /><summary type="html"><![CDATA[Metode untuk pengujian bilangan prima yang paling sederhana adalah brute force, yaitu membagi $n$ dengan $p \in \mathbb{P}, p \leq \sqrt{n}$.]]></summary></entry><entry><title type="html">Struktur Data</title><link href="https://deo.or.id/2018/struktur-data.html" rel="alternate" type="text/html" title="Struktur Data" /><published>2018-03-12T00:00:00+08:00</published><updated>2018-03-12T00:00:00+08:00</updated><id>https://deo.or.id/2018/struktur-data</id><content type="html" xml:base="https://deo.or.id/2018/struktur-data.html"><![CDATA[<div class="paragraph">
<p>Struktur data adalah cara penyimpanan, penyusunan dan pengaturan data di dalam
media penyimpanan komputer sehingga data tersebut dapat digunakan secara
efisien<sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnotedef_1" title="View footnote.">1</a>]</sup>.</p>
</div>
<div class="paragraph">
<p>Misalnya semua jenis tipe primitif (integer, boolean, char, floating-point,
dll.), non-primitif (array, record/struct, union) dan abstract data type (ADT),
misalnya list, tuple, associative array, map, set, multiset (bag), stack, queue,
graph (tree, heap), dan sebagainya
<sup class="footnote">[<a id="_footnoteref_2" class="footnote" href="#_footnotedef_2" title="View footnote.">2</a>]</sup>.</p>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnotedef_1">
<a href="#_footnoteref_1">1</a>. <a href="https://id.wikipedia.org/wiki/Struktur_data" class="bare">https://id.wikipedia.org/wiki/Struktur_data</a>
</div>
<div class="footnote" id="_footnotedef_2">
<a href="#_footnoteref_2">2</a>. <a href="https://en.wikipedia.org/wiki/List_of_data_structures" class="bare">https://en.wikipedia.org/wiki/List_of_data_structures</a>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Struktur Data" /></entry><entry><title type="html">Buble Sort</title><link href="https://deo.or.id/2017/bubble-sort.html" rel="alternate" type="text/html" title="Buble Sort" /><published>2017-11-11T00:00:00+08:00</published><updated>2017-11-11T00:00:00+08:00</updated><id>https://deo.or.id/2017/bubble-sort</id><content type="html" xml:base="https://deo.or.id/2017/bubble-sort.html"><![CDATA[<div class="sect1">
<h2 id="pendahuluan"><a class="anchor" href="#pendahuluan"></a>Pendahuluan</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Bubble Sort adalah algoritma pengurutan paling sederhana yang bekerja dengan
menukar elemen yang berdekatan secara bergantian. Bubble sort akan memuat
iterasi atau perulangan sebanyak n-1, dimana n adalah jumlah elemen.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="cara-kerja"><a class="anchor" href="#cara-kerja"></a>Cara Kerja</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Misalkan kita mempunyai 4 elemen, yaitu {50, 20, 10}</p>
</div>
<div class="paragraph">
<p>Iterasi pertama :</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>{<strong>50</strong>, <strong>20</strong>, 10} &#8658; {<strong>20</strong>, <strong>50</strong>, 10}</p>
</li>
<li>
<p>{20, <strong>50</strong>, <strong>10</strong>} &#8658; {20, <strong>10</strong>, <strong>50</strong>}</p>
</li>
<li>
<p>{<strong>20</strong>, <strong>10</strong>, 50} &#8658; {<strong>10</strong>, <strong>20</strong>, 50}</p>
</li>
</ol>
</div>
<div class="paragraph">
<p>Hasilnya = {10, 20, 50}, terdapat 3 perulangan.</p>
</div>
<div class="paragraph">
<p>Dalam program, kita dapat menggunakan logika untuk menukar/swap index,</p>
</div>
<div class="paragraph">
<p>Misalkan kita mempunyai a = 10 dan b = 20.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="c"><span class="n">temp</span>    <span class="o">=</span> <span class="n">a</span> <span class="p">(</span><span class="n">temp</span> <span class="o">=</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">a</span>       <span class="o">=</span> <span class="n">b</span> <span class="p">(</span><span class="n">a</span> <span class="o">=</span> <span class="mi">20</span><span class="p">)</span>
<span class="n">b</span>       <span class="o">=</span> <span class="n">temp</span> <span class="p">(</span><span class="n">b</span> <span class="o">=</span> <span class="mi">10</span><span class="p">)</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>atau</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="python"><span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Referensi</p>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><a href="https://www.geeksforgeeks.org/bubble-sort/" class="bare">https://www.geeksforgeeks.org/bubble-sort/</a></p>
</li>
<li>
<p><a href="https://www.youtube.com/playlist?list=PLLOxZwkBK52CY_b7jorivUjYzjhoMA_6Z" class="bare">https://www.youtube.com/playlist?list=PLLOxZwkBK52CY_b7jorivUjYzjhoMA_6Z</a></p>
</li>
</ol>
</div>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Algoritma" /></entry><entry><title type="html">Selection Sort</title><link href="https://deo.or.id/2017/selections-sort.html" rel="alternate" type="text/html" title="Selection Sort" /><published>2017-01-31T00:00:00+08:00</published><updated>2017-01-31T00:00:00+08:00</updated><id>https://deo.or.id/2017/selections-sort</id><content type="html" xml:base="https://deo.or.id/2017/selections-sort.html"><![CDATA[<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="c"><span class="cp">#include</span> <span class="cpf">"stdio.h"</span><span class="cp">
</span>
<span class="kt">void</span> <span class="nf">swap</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="kt">int</span> <span class="n">j</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">tmp</span><span class="p">;</span>
    <span class="n">tmp</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
    <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">selection_sort</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">min</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">min</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">j</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">arr</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">min</span><span class="p">])</span> <span class="p">{</span>
                <span class="n">min</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">swap</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">min</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"%d "</span><span class="p">,</span> <span class="n">arr</span><span class="p">[</span><span class="n">k</span><span class="p">]);</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">arr</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">};</span>
    <span class="n">selection_sort</span><span class="p">(</span><span class="n">arr</span><span class="p">);</span>
<span class="p">}</span></code></pre>
</div>
</div>]]></content><author><name>Deo Valiandro. M</name></author><category term="Algoritma" /></entry></feed>